{"version":3,"file":"5ddcd409c5b2fd1cc2c7c83770def2f35af0cb66-bbb17149a2a5ce93233d.js","mappings":"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","sources":["webpack://execution-apis/./node_modules/ieee754/index.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/services/treeViewsDnd.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/core/eolCounter.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/tokens/sparseMultilineTokens.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/encodedTokenAttributes.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/base/common/resources.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/contextkey/common/scanner.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkey.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/services/treeSitterParserService.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/base/common/buffer.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/log/common/log.js","webpack://execution-apis/./node_modules/buffer/index.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/core/editorColorRegistry.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/jsonschemas/common/jsonContributionRegistry.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatures.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/base/common/mime.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/languages/modesRegistry.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/services/languagesAssociations.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/services/model.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/services/languagesRegistry.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/registry/common/platform.js","webpack://execution-apis/./node_modules/base64-js/index.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/baseColors.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/miscColors.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/editorColors.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/minimapColors.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/inputColors.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/chartsColors.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/listColors.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/menuColors.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/quickpickColors.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/theme/common/colors/searchColors.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/languages/language.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/base/common/extpath.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStyling.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/base/common/glob.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/configuration/common/configuration.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/theme/common/colorUtils.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js","webpack://execution-apis/./node_modules/monaco-editor/esm/vs/platform/theme/common/theme.js"],"sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class TreeViewsDnDService {\n    constructor() {\n        this._dragOperations = new Map();\n    }\n    removeDragOperationTransfer(uuid) {\n        if ((uuid && this._dragOperations.has(uuid))) {\n            const operation = this._dragOperations.get(uuid);\n            this._dragOperations.delete(uuid);\n            return operation;\n        }\n        return undefined;\n    }\n}\nexport class DraggedTreeItemsIdentifier {\n    constructor(identifier) {\n        this.identifier = identifier;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function countEOL(text) {\n    let eolCount = 0;\n    let firstLineLength = 0;\n    let lastLineStart = 0;\n    let eol = 0 /* StringEOL.Unknown */;\n    for (let i = 0, len = text.length; i < len; i++) {\n        const chr = text.charCodeAt(i);\n        if (chr === 13 /* CharCode.CarriageReturn */) {\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            if (i + 1 < len && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                // \\r\\n... case\n                eol |= 2 /* StringEOL.CRLF */;\n                i++; // skip \\n\n            }\n            else {\n                // \\r... case\n                eol |= 3 /* StringEOL.Invalid */;\n            }\n            lastLineStart = i + 1;\n        }\n        else if (chr === 10 /* CharCode.LineFeed */) {\n            // \\n... case\n            eol |= 1 /* StringEOL.LF */;\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            lastLineStart = i + 1;\n        }\n    }\n    if (eolCount === 0) {\n        firstLineLength = text.length;\n    }\n    return [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { countEOL } from '../core/eolCounter.js';\n/**\n * Represents sparse tokens over a contiguous range of lines.\n */\nexport class SparseMultilineTokens {\n    static create(startLineNumber, tokens) {\n        return new SparseMultilineTokens(startLineNumber, new SparseMultilineTokensStorage(tokens));\n    }\n    /**\n     * (Inclusive) start line number for these tokens.\n     */\n    get startLineNumber() {\n        return this._startLineNumber;\n    }\n    /**\n     * (Inclusive) end line number for these tokens.\n     */\n    get endLineNumber() {\n        return this._endLineNumber;\n    }\n    constructor(startLineNumber, tokens) {\n        this._startLineNumber = startLineNumber;\n        this._tokens = tokens;\n        this._endLineNumber = this._startLineNumber + this._tokens.getMaxDeltaLine();\n    }\n    toString() {\n        return this._tokens.toString(this._startLineNumber);\n    }\n    _updateEndLineNumber() {\n        this._endLineNumber = this._startLineNumber + this._tokens.getMaxDeltaLine();\n    }\n    isEmpty() {\n        return this._tokens.isEmpty();\n    }\n    getLineTokens(lineNumber) {\n        if (this._startLineNumber <= lineNumber && lineNumber <= this._endLineNumber) {\n            return this._tokens.getLineTokens(lineNumber - this._startLineNumber);\n        }\n        return null;\n    }\n    getRange() {\n        const deltaRange = this._tokens.getRange();\n        if (!deltaRange) {\n            return deltaRange;\n        }\n        return new Range(this._startLineNumber + deltaRange.startLineNumber, deltaRange.startColumn, this._startLineNumber + deltaRange.endLineNumber, deltaRange.endColumn);\n    }\n    removeTokens(range) {\n        const startLineIndex = range.startLineNumber - this._startLineNumber;\n        const endLineIndex = range.endLineNumber - this._startLineNumber;\n        this._startLineNumber += this._tokens.removeTokens(startLineIndex, range.startColumn - 1, endLineIndex, range.endColumn - 1);\n        this._updateEndLineNumber();\n    }\n    split(range) {\n        // split tokens to two:\n        // a) all the tokens before `range`\n        // b) all the tokens after `range`\n        const startLineIndex = range.startLineNumber - this._startLineNumber;\n        const endLineIndex = range.endLineNumber - this._startLineNumber;\n        const [a, b, bDeltaLine] = this._tokens.split(startLineIndex, range.startColumn - 1, endLineIndex, range.endColumn - 1);\n        return [new SparseMultilineTokens(this._startLineNumber, a), new SparseMultilineTokens(this._startLineNumber + bDeltaLine, b)];\n    }\n    applyEdit(range, text) {\n        const [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n        this.acceptEdit(range, eolCount, firstLineLength, lastLineLength, text.length > 0 ? text.charCodeAt(0) : 0 /* CharCode.Null */);\n    }\n    acceptEdit(range, eolCount, firstLineLength, lastLineLength, firstCharCode) {\n        this._acceptDeleteRange(range);\n        this._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount, firstLineLength, lastLineLength, firstCharCode);\n        this._updateEndLineNumber();\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n            // Nothing to delete\n            return;\n        }\n        const firstLineIndex = range.startLineNumber - this._startLineNumber;\n        const lastLineIndex = range.endLineNumber - this._startLineNumber;\n        if (lastLineIndex < 0) {\n            // this deletion occurs entirely before this block, so we only need to adjust line numbers\n            const deletedLinesCount = lastLineIndex - firstLineIndex;\n            this._startLineNumber -= deletedLinesCount;\n            return;\n        }\n        const tokenMaxDeltaLine = this._tokens.getMaxDeltaLine();\n        if (firstLineIndex >= tokenMaxDeltaLine + 1) {\n            // this deletion occurs entirely after this block, so there is nothing to do\n            return;\n        }\n        if (firstLineIndex < 0 && lastLineIndex >= tokenMaxDeltaLine + 1) {\n            // this deletion completely encompasses this block\n            this._startLineNumber = 0;\n            this._tokens.clear();\n            return;\n        }\n        if (firstLineIndex < 0) {\n            const deletedBefore = -firstLineIndex;\n            this._startLineNumber -= deletedBefore;\n            this._tokens.acceptDeleteRange(range.startColumn - 1, 0, 0, lastLineIndex, range.endColumn - 1);\n        }\n        else {\n            this._tokens.acceptDeleteRange(0, firstLineIndex, range.startColumn - 1, lastLineIndex, range.endColumn - 1);\n        }\n    }\n    _acceptInsertText(position, eolCount, firstLineLength, lastLineLength, firstCharCode) {\n        if (eolCount === 0 && firstLineLength === 0) {\n            // Nothing to insert\n            return;\n        }\n        const lineIndex = position.lineNumber - this._startLineNumber;\n        if (lineIndex < 0) {\n            // this insertion occurs before this block, so we only need to adjust line numbers\n            this._startLineNumber += eolCount;\n            return;\n        }\n        const tokenMaxDeltaLine = this._tokens.getMaxDeltaLine();\n        if (lineIndex >= tokenMaxDeltaLine + 1) {\n            // this insertion occurs after this block, so there is nothing to do\n            return;\n        }\n        this._tokens.acceptInsertText(lineIndex, position.column - 1, eolCount, firstLineLength, lastLineLength, firstCharCode);\n    }\n}\nclass SparseMultilineTokensStorage {\n    constructor(tokens) {\n        this._tokens = tokens;\n        this._tokenCount = tokens.length / 4;\n    }\n    toString(startLineNumber) {\n        const pieces = [];\n        for (let i = 0; i < this._tokenCount; i++) {\n            pieces.push(`(${this._getDeltaLine(i) + startLineNumber},${this._getStartCharacter(i)}-${this._getEndCharacter(i)})`);\n        }\n        return `[${pieces.join(',')}]`;\n    }\n    getMaxDeltaLine() {\n        const tokenCount = this._getTokenCount();\n        if (tokenCount === 0) {\n            return -1;\n        }\n        return this._getDeltaLine(tokenCount - 1);\n    }\n    getRange() {\n        const tokenCount = this._getTokenCount();\n        if (tokenCount === 0) {\n            return null;\n        }\n        const startChar = this._getStartCharacter(0);\n        const maxDeltaLine = this._getDeltaLine(tokenCount - 1);\n        const endChar = this._getEndCharacter(tokenCount - 1);\n        return new Range(0, startChar + 1, maxDeltaLine, endChar + 1);\n    }\n    _getTokenCount() {\n        return this._tokenCount;\n    }\n    _getDeltaLine(tokenIndex) {\n        return this._tokens[4 * tokenIndex];\n    }\n    _getStartCharacter(tokenIndex) {\n        return this._tokens[4 * tokenIndex + 1];\n    }\n    _getEndCharacter(tokenIndex) {\n        return this._tokens[4 * tokenIndex + 2];\n    }\n    isEmpty() {\n        return (this._getTokenCount() === 0);\n    }\n    getLineTokens(deltaLine) {\n        let low = 0;\n        let high = this._getTokenCount() - 1;\n        while (low < high) {\n            const mid = low + Math.floor((high - low) / 2);\n            const midDeltaLine = this._getDeltaLine(mid);\n            if (midDeltaLine < deltaLine) {\n                low = mid + 1;\n            }\n            else if (midDeltaLine > deltaLine) {\n                high = mid - 1;\n            }\n            else {\n                let min = mid;\n                while (min > low && this._getDeltaLine(min - 1) === deltaLine) {\n                    min--;\n                }\n                let max = mid;\n                while (max < high && this._getDeltaLine(max + 1) === deltaLine) {\n                    max++;\n                }\n                return new SparseLineTokens(this._tokens.subarray(4 * min, 4 * max + 4));\n            }\n        }\n        if (this._getDeltaLine(low) === deltaLine) {\n            return new SparseLineTokens(this._tokens.subarray(4 * low, 4 * low + 4));\n        }\n        return null;\n    }\n    clear() {\n        this._tokenCount = 0;\n    }\n    removeTokens(startDeltaLine, startChar, endDeltaLine, endChar) {\n        const tokens = this._tokens;\n        const tokenCount = this._tokenCount;\n        let newTokenCount = 0;\n        let hasDeletedTokens = false;\n        let firstDeltaLine = 0;\n        for (let i = 0; i < tokenCount; i++) {\n            const srcOffset = 4 * i;\n            const tokenDeltaLine = tokens[srcOffset];\n            const tokenStartCharacter = tokens[srcOffset + 1];\n            const tokenEndCharacter = tokens[srcOffset + 2];\n            const tokenMetadata = tokens[srcOffset + 3];\n            if ((tokenDeltaLine > startDeltaLine || (tokenDeltaLine === startDeltaLine && tokenEndCharacter >= startChar))\n                && (tokenDeltaLine < endDeltaLine || (tokenDeltaLine === endDeltaLine && tokenStartCharacter <= endChar))) {\n                hasDeletedTokens = true;\n            }\n            else {\n                if (newTokenCount === 0) {\n                    firstDeltaLine = tokenDeltaLine;\n                }\n                if (hasDeletedTokens) {\n                    // must move the token to the left\n                    const destOffset = 4 * newTokenCount;\n                    tokens[destOffset] = tokenDeltaLine - firstDeltaLine;\n                    tokens[destOffset + 1] = tokenStartCharacter;\n                    tokens[destOffset + 2] = tokenEndCharacter;\n                    tokens[destOffset + 3] = tokenMetadata;\n                }\n                newTokenCount++;\n            }\n        }\n        this._tokenCount = newTokenCount;\n        return firstDeltaLine;\n    }\n    split(startDeltaLine, startChar, endDeltaLine, endChar) {\n        const tokens = this._tokens;\n        const tokenCount = this._tokenCount;\n        const aTokens = [];\n        const bTokens = [];\n        let destTokens = aTokens;\n        let destOffset = 0;\n        let destFirstDeltaLine = 0;\n        for (let i = 0; i < tokenCount; i++) {\n            const srcOffset = 4 * i;\n            const tokenDeltaLine = tokens[srcOffset];\n            const tokenStartCharacter = tokens[srcOffset + 1];\n            const tokenEndCharacter = tokens[srcOffset + 2];\n            const tokenMetadata = tokens[srcOffset + 3];\n            if ((tokenDeltaLine > startDeltaLine || (tokenDeltaLine === startDeltaLine && tokenEndCharacter >= startChar))) {\n                if ((tokenDeltaLine < endDeltaLine || (tokenDeltaLine === endDeltaLine && tokenStartCharacter <= endChar))) {\n                    // this token is touching the range\n                    continue;\n                }\n                else {\n                    // this token is after the range\n                    if (destTokens !== bTokens) {\n                        // this token is the first token after the range\n                        destTokens = bTokens;\n                        destOffset = 0;\n                        destFirstDeltaLine = tokenDeltaLine;\n                    }\n                }\n            }\n            destTokens[destOffset++] = tokenDeltaLine - destFirstDeltaLine;\n            destTokens[destOffset++] = tokenStartCharacter;\n            destTokens[destOffset++] = tokenEndCharacter;\n            destTokens[destOffset++] = tokenMetadata;\n        }\n        return [new SparseMultilineTokensStorage(new Uint32Array(aTokens)), new SparseMultilineTokensStorage(new Uint32Array(bTokens)), destFirstDeltaLine];\n    }\n    acceptDeleteRange(horizontalShiftForFirstLineTokens, startDeltaLine, startCharacter, endDeltaLine, endCharacter) {\n        // This is a bit complex, here are the cases I used to think about this:\n        //\n        // 1. The token starts before the deletion range\n        // 1a. The token is completely before the deletion range\n        //               -----------\n        //                          xxxxxxxxxxx\n        // 1b. The token starts before, the deletion range ends after the token\n        //               -----------\n        //                      xxxxxxxxxxx\n        // 1c. The token starts before, the deletion range ends precisely with the token\n        //               ---------------\n        //                      xxxxxxxx\n        // 1d. The token starts before, the deletion range is inside the token\n        //               ---------------\n        //                    xxxxx\n        //\n        // 2. The token starts at the same position with the deletion range\n        // 2a. The token starts at the same position, and ends inside the deletion range\n        //               -------\n        //               xxxxxxxxxxx\n        // 2b. The token starts at the same position, and ends at the same position as the deletion range\n        //               ----------\n        //               xxxxxxxxxx\n        // 2c. The token starts at the same position, and ends after the deletion range\n        //               -------------\n        //               xxxxxxx\n        //\n        // 3. The token starts inside the deletion range\n        // 3a. The token is inside the deletion range\n        //                -------\n        //             xxxxxxxxxxxxx\n        // 3b. The token starts inside the deletion range, and ends at the same position as the deletion range\n        //                ----------\n        //             xxxxxxxxxxxxx\n        // 3c. The token starts inside the deletion range, and ends after the deletion range\n        //                ------------\n        //             xxxxxxxxxxx\n        //\n        // 4. The token starts after the deletion range\n        //                  -----------\n        //          xxxxxxxx\n        //\n        const tokens = this._tokens;\n        const tokenCount = this._tokenCount;\n        const deletedLineCount = (endDeltaLine - startDeltaLine);\n        let newTokenCount = 0;\n        let hasDeletedTokens = false;\n        for (let i = 0; i < tokenCount; i++) {\n            const srcOffset = 4 * i;\n            let tokenDeltaLine = tokens[srcOffset];\n            let tokenStartCharacter = tokens[srcOffset + 1];\n            let tokenEndCharacter = tokens[srcOffset + 2];\n            const tokenMetadata = tokens[srcOffset + 3];\n            if (tokenDeltaLine < startDeltaLine || (tokenDeltaLine === startDeltaLine && tokenEndCharacter <= startCharacter)) {\n                // 1a. The token is completely before the deletion range\n                // => nothing to do\n                newTokenCount++;\n                continue;\n            }\n            else if (tokenDeltaLine === startDeltaLine && tokenStartCharacter < startCharacter) {\n                // 1b, 1c, 1d\n                // => the token survives, but it needs to shrink\n                if (tokenDeltaLine === endDeltaLine && tokenEndCharacter > endCharacter) {\n                    // 1d. The token starts before, the deletion range is inside the token\n                    // => the token shrinks by the deletion character count\n                    tokenEndCharacter -= (endCharacter - startCharacter);\n                }\n                else {\n                    // 1b. The token starts before, the deletion range ends after the token\n                    // 1c. The token starts before, the deletion range ends precisely with the token\n                    // => the token shrinks its ending to the deletion start\n                    tokenEndCharacter = startCharacter;\n                }\n            }\n            else if (tokenDeltaLine === startDeltaLine && tokenStartCharacter === startCharacter) {\n                // 2a, 2b, 2c\n                if (tokenDeltaLine === endDeltaLine && tokenEndCharacter > endCharacter) {\n                    // 2c. The token starts at the same position, and ends after the deletion range\n                    // => the token shrinks by the deletion character count\n                    tokenEndCharacter -= (endCharacter - startCharacter);\n                }\n                else {\n                    // 2a. The token starts at the same position, and ends inside the deletion range\n                    // 2b. The token starts at the same position, and ends at the same position as the deletion range\n                    // => the token is deleted\n                    hasDeletedTokens = true;\n                    continue;\n                }\n            }\n            else if (tokenDeltaLine < endDeltaLine || (tokenDeltaLine === endDeltaLine && tokenStartCharacter < endCharacter)) {\n                // 3a, 3b, 3c\n                if (tokenDeltaLine === endDeltaLine && tokenEndCharacter > endCharacter) {\n                    // 3c. The token starts inside the deletion range, and ends after the deletion range\n                    // => the token moves to continue right after the deletion\n                    tokenDeltaLine = startDeltaLine;\n                    tokenStartCharacter = startCharacter;\n                    tokenEndCharacter = tokenStartCharacter + (tokenEndCharacter - endCharacter);\n                }\n                else {\n                    // 3a. The token is inside the deletion range\n                    // 3b. The token starts inside the deletion range, and ends at the same position as the deletion range\n                    // => the token is deleted\n                    hasDeletedTokens = true;\n                    continue;\n                }\n            }\n            else if (tokenDeltaLine > endDeltaLine) {\n                // 4. (partial) The token starts after the deletion range, on a line below...\n                if (deletedLineCount === 0 && !hasDeletedTokens) {\n                    // early stop, there is no need to walk all the tokens and do nothing...\n                    newTokenCount = tokenCount;\n                    break;\n                }\n                tokenDeltaLine -= deletedLineCount;\n            }\n            else if (tokenDeltaLine === endDeltaLine && tokenStartCharacter >= endCharacter) {\n                // 4. (continued) The token starts after the deletion range, on the last line where a deletion occurs\n                if (horizontalShiftForFirstLineTokens && tokenDeltaLine === 0) {\n                    tokenStartCharacter += horizontalShiftForFirstLineTokens;\n                    tokenEndCharacter += horizontalShiftForFirstLineTokens;\n                }\n                tokenDeltaLine -= deletedLineCount;\n                tokenStartCharacter -= (endCharacter - startCharacter);\n                tokenEndCharacter -= (endCharacter - startCharacter);\n            }\n            else {\n                throw new Error(`Not possible!`);\n            }\n            const destOffset = 4 * newTokenCount;\n            tokens[destOffset] = tokenDeltaLine;\n            tokens[destOffset + 1] = tokenStartCharacter;\n            tokens[destOffset + 2] = tokenEndCharacter;\n            tokens[destOffset + 3] = tokenMetadata;\n            newTokenCount++;\n        }\n        this._tokenCount = newTokenCount;\n    }\n    acceptInsertText(deltaLine, character, eolCount, firstLineLength, lastLineLength, firstCharCode) {\n        // Here are the cases I used to think about this:\n        //\n        // 1. The token is completely before the insertion point\n        //            -----------   |\n        // 2. The token ends precisely at the insertion point\n        //            -----------|\n        // 3. The token contains the insertion point\n        //            -----|------\n        // 4. The token starts precisely at the insertion point\n        //            |-----------\n        // 5. The token is completely after the insertion point\n        //            |   -----------\n        //\n        const isInsertingPreciselyOneWordCharacter = (eolCount === 0\n            && firstLineLength === 1\n            && ((firstCharCode >= 48 /* CharCode.Digit0 */ && firstCharCode <= 57 /* CharCode.Digit9 */)\n                || (firstCharCode >= 65 /* CharCode.A */ && firstCharCode <= 90 /* CharCode.Z */)\n                || (firstCharCode >= 97 /* CharCode.a */ && firstCharCode <= 122 /* CharCode.z */)));\n        const tokens = this._tokens;\n        const tokenCount = this._tokenCount;\n        for (let i = 0; i < tokenCount; i++) {\n            const offset = 4 * i;\n            let tokenDeltaLine = tokens[offset];\n            let tokenStartCharacter = tokens[offset + 1];\n            let tokenEndCharacter = tokens[offset + 2];\n            if (tokenDeltaLine < deltaLine || (tokenDeltaLine === deltaLine && tokenEndCharacter < character)) {\n                // 1. The token is completely before the insertion point\n                // => nothing to do\n                continue;\n            }\n            else if (tokenDeltaLine === deltaLine && tokenEndCharacter === character) {\n                // 2. The token ends precisely at the insertion point\n                // => expand the end character only if inserting precisely one character that is a word character\n                if (isInsertingPreciselyOneWordCharacter) {\n                    tokenEndCharacter += 1;\n                }\n                else {\n                    continue;\n                }\n            }\n            else if (tokenDeltaLine === deltaLine && tokenStartCharacter < character && character < tokenEndCharacter) {\n                // 3. The token contains the insertion point\n                if (eolCount === 0) {\n                    // => just expand the end character\n                    tokenEndCharacter += firstLineLength;\n                }\n                else {\n                    // => cut off the token\n                    tokenEndCharacter = character;\n                }\n            }\n            else {\n                // 4. or 5.\n                if (tokenDeltaLine === deltaLine && tokenStartCharacter === character) {\n                    // 4. The token starts precisely at the insertion point\n                    // => grow the token (by keeping its start constant) only if inserting precisely one character that is a word character\n                    // => otherwise behave as in case 5.\n                    if (isInsertingPreciselyOneWordCharacter) {\n                        continue;\n                    }\n                }\n                // => the token must move and keep its size constant\n                if (tokenDeltaLine === deltaLine) {\n                    tokenDeltaLine += eolCount;\n                    // this token is on the line where the insertion is taking place\n                    if (eolCount === 0) {\n                        tokenStartCharacter += firstLineLength;\n                        tokenEndCharacter += firstLineLength;\n                    }\n                    else {\n                        const tokenLength = tokenEndCharacter - tokenStartCharacter;\n                        tokenStartCharacter = lastLineLength + (tokenStartCharacter - character);\n                        tokenEndCharacter = tokenStartCharacter + tokenLength;\n                    }\n                }\n                else {\n                    tokenDeltaLine += eolCount;\n                }\n            }\n            tokens[offset] = tokenDeltaLine;\n            tokens[offset + 1] = tokenStartCharacter;\n            tokens[offset + 2] = tokenEndCharacter;\n        }\n    }\n}\nexport class SparseLineTokens {\n    constructor(tokens) {\n        this._tokens = tokens;\n    }\n    getCount() {\n        return this._tokens.length / 4;\n    }\n    getStartCharacter(tokenIndex) {\n        return this._tokens[4 * tokenIndex + 1];\n    }\n    getEndCharacter(tokenIndex) {\n        return this._tokens[4 * tokenIndex + 2];\n    }\n    getMetadata(tokenIndex) {\n        return this._tokens[4 * tokenIndex + 3];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { TokenMetadata } from '../encodedTokenAttributes.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService, LogLevel } from '../../../platform/log/common/log.js';\nimport { SparseMultilineTokens } from '../tokens/sparseMultilineTokens.js';\nimport { ILanguageService } from '../languages/language.js';\nconst ENABLE_TRACE = false;\nlet SemanticTokensProviderStyling = class SemanticTokensProviderStyling {\n    constructor(_legend, _themeService, _languageService, _logService) {\n        this._legend = _legend;\n        this._themeService = _themeService;\n        this._languageService = _languageService;\n        this._logService = _logService;\n        this._hasWarnedOverlappingTokens = false;\n        this._hasWarnedInvalidLengthTokens = false;\n        this._hasWarnedInvalidEditStart = false;\n        this._hashTable = new HashTable();\n    }\n    getMetadata(tokenTypeIndex, tokenModifierSet, languageId) {\n        const encodedLanguageId = this._languageService.languageIdCodec.encodeLanguageId(languageId);\n        const entry = this._hashTable.get(tokenTypeIndex, tokenModifierSet, encodedLanguageId);\n        let metadata;\n        if (entry) {\n            metadata = entry.metadata;\n            if (ENABLE_TRACE && this._logService.getLevel() === LogLevel.Trace) {\n                this._logService.trace(`SemanticTokensProviderStyling [CACHED] ${tokenTypeIndex} / ${tokenModifierSet}: foreground ${TokenMetadata.getForeground(metadata)}, fontStyle ${TokenMetadata.getFontStyle(metadata).toString(2)}`);\n            }\n        }\n        else {\n            let tokenType = this._legend.tokenTypes[tokenTypeIndex];\n            const tokenModifiers = [];\n            if (tokenType) {\n                let modifierSet = tokenModifierSet;\n                for (let modifierIndex = 0; modifierSet > 0 && modifierIndex < this._legend.tokenModifiers.length; modifierIndex++) {\n                    if (modifierSet & 1) {\n                        tokenModifiers.push(this._legend.tokenModifiers[modifierIndex]);\n                    }\n                    modifierSet = modifierSet >> 1;\n                }\n                if (ENABLE_TRACE && modifierSet > 0 && this._logService.getLevel() === LogLevel.Trace) {\n                    this._logService.trace(`SemanticTokensProviderStyling: unknown token modifier index: ${tokenModifierSet.toString(2)} for legend: ${JSON.stringify(this._legend.tokenModifiers)}`);\n                    tokenModifiers.push('not-in-legend');\n                }\n                const tokenStyle = this._themeService.getColorTheme().getTokenStyleMetadata(tokenType, tokenModifiers, languageId);\n                if (typeof tokenStyle === 'undefined') {\n                    metadata = 2147483647 /* SemanticTokensProviderStylingConstants.NO_STYLING */;\n                }\n                else {\n                    metadata = 0;\n                    if (typeof tokenStyle.italic !== 'undefined') {\n                        const italicBit = (tokenStyle.italic ? 1 /* FontStyle.Italic */ : 0) << 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n                        metadata |= italicBit | 1 /* MetadataConsts.SEMANTIC_USE_ITALIC */;\n                    }\n                    if (typeof tokenStyle.bold !== 'undefined') {\n                        const boldBit = (tokenStyle.bold ? 2 /* FontStyle.Bold */ : 0) << 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n                        metadata |= boldBit | 2 /* MetadataConsts.SEMANTIC_USE_BOLD */;\n                    }\n                    if (typeof tokenStyle.underline !== 'undefined') {\n                        const underlineBit = (tokenStyle.underline ? 4 /* FontStyle.Underline */ : 0) << 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n                        metadata |= underlineBit | 4 /* MetadataConsts.SEMANTIC_USE_UNDERLINE */;\n                    }\n                    if (typeof tokenStyle.strikethrough !== 'undefined') {\n                        const strikethroughBit = (tokenStyle.strikethrough ? 8 /* FontStyle.Strikethrough */ : 0) << 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n                        metadata |= strikethroughBit | 8 /* MetadataConsts.SEMANTIC_USE_STRIKETHROUGH */;\n                    }\n                    if (tokenStyle.foreground) {\n                        const foregroundBits = (tokenStyle.foreground) << 15 /* MetadataConsts.FOREGROUND_OFFSET */;\n                        metadata |= foregroundBits | 16 /* MetadataConsts.SEMANTIC_USE_FOREGROUND */;\n                    }\n                    if (metadata === 0) {\n                        // Nothing!\n                        metadata = 2147483647 /* SemanticTokensProviderStylingConstants.NO_STYLING */;\n                    }\n                }\n            }\n            else {\n                if (ENABLE_TRACE && this._logService.getLevel() === LogLevel.Trace) {\n                    this._logService.trace(`SemanticTokensProviderStyling: unknown token type index: ${tokenTypeIndex} for legend: ${JSON.stringify(this._legend.tokenTypes)}`);\n                }\n                metadata = 2147483647 /* SemanticTokensProviderStylingConstants.NO_STYLING */;\n                tokenType = 'not-in-legend';\n            }\n            this._hashTable.add(tokenTypeIndex, tokenModifierSet, encodedLanguageId, metadata);\n            if (ENABLE_TRACE && this._logService.getLevel() === LogLevel.Trace) {\n                this._logService.trace(`SemanticTokensProviderStyling ${tokenTypeIndex} (${tokenType}) / ${tokenModifierSet} (${tokenModifiers.join(' ')}): foreground ${TokenMetadata.getForeground(metadata)}, fontStyle ${TokenMetadata.getFontStyle(metadata).toString(2)}`);\n            }\n        }\n        return metadata;\n    }\n    warnOverlappingSemanticTokens(lineNumber, startColumn) {\n        if (!this._hasWarnedOverlappingTokens) {\n            this._hasWarnedOverlappingTokens = true;\n            this._logService.warn(`Overlapping semantic tokens detected at lineNumber ${lineNumber}, column ${startColumn}`);\n        }\n    }\n    warnInvalidLengthSemanticTokens(lineNumber, startColumn) {\n        if (!this._hasWarnedInvalidLengthTokens) {\n            this._hasWarnedInvalidLengthTokens = true;\n            this._logService.warn(`Semantic token with invalid length detected at lineNumber ${lineNumber}, column ${startColumn}`);\n        }\n    }\n    warnInvalidEditStart(previousResultId, resultId, editIndex, editStart, maxExpectedStart) {\n        if (!this._hasWarnedInvalidEditStart) {\n            this._hasWarnedInvalidEditStart = true;\n            this._logService.warn(`Invalid semantic tokens edit detected (previousResultId: ${previousResultId}, resultId: ${resultId}) at edit #${editIndex}: The provided start offset ${editStart} is outside the previous data (length ${maxExpectedStart}).`);\n        }\n    }\n};\nSemanticTokensProviderStyling = __decorate([\n    __param(1, IThemeService),\n    __param(2, ILanguageService),\n    __param(3, ILogService)\n], SemanticTokensProviderStyling);\nexport { SemanticTokensProviderStyling };\nexport function toMultilineTokens2(tokens, styling, languageId) {\n    const srcData = tokens.data;\n    const tokenCount = (tokens.data.length / 5) | 0;\n    const tokensPerArea = Math.max(Math.ceil(tokenCount / 1024 /* SemanticColoringConstants.DesiredMaxAreas */), 400 /* SemanticColoringConstants.DesiredTokensPerArea */);\n    const result = [];\n    let tokenIndex = 0;\n    let lastLineNumber = 1;\n    let lastStartCharacter = 0;\n    while (tokenIndex < tokenCount) {\n        const tokenStartIndex = tokenIndex;\n        let tokenEndIndex = Math.min(tokenStartIndex + tokensPerArea, tokenCount);\n        // Keep tokens on the same line in the same area...\n        if (tokenEndIndex < tokenCount) {\n            let smallTokenEndIndex = tokenEndIndex;\n            while (smallTokenEndIndex - 1 > tokenStartIndex && srcData[5 * smallTokenEndIndex] === 0) {\n                smallTokenEndIndex--;\n            }\n            if (smallTokenEndIndex - 1 === tokenStartIndex) {\n                // there are so many tokens on this line that our area would be empty, we must now go right\n                let bigTokenEndIndex = tokenEndIndex;\n                while (bigTokenEndIndex + 1 < tokenCount && srcData[5 * bigTokenEndIndex] === 0) {\n                    bigTokenEndIndex++;\n                }\n                tokenEndIndex = bigTokenEndIndex;\n            }\n            else {\n                tokenEndIndex = smallTokenEndIndex;\n            }\n        }\n        let destData = new Uint32Array((tokenEndIndex - tokenStartIndex) * 4);\n        let destOffset = 0;\n        let areaLine = 0;\n        let prevLineNumber = 0;\n        let prevEndCharacter = 0;\n        while (tokenIndex < tokenEndIndex) {\n            const srcOffset = 5 * tokenIndex;\n            const deltaLine = srcData[srcOffset];\n            const deltaCharacter = srcData[srcOffset + 1];\n            // Casting both `lineNumber`, `startCharacter` and `endCharacter` here to uint32 using `|0`\n            // to validate below with the actual values that will be inserted in the Uint32Array result\n            const lineNumber = (lastLineNumber + deltaLine) | 0;\n            const startCharacter = (deltaLine === 0 ? (lastStartCharacter + deltaCharacter) | 0 : deltaCharacter);\n            const length = srcData[srcOffset + 2];\n            const endCharacter = (startCharacter + length) | 0;\n            const tokenTypeIndex = srcData[srcOffset + 3];\n            const tokenModifierSet = srcData[srcOffset + 4];\n            if (endCharacter <= startCharacter) {\n                // this token is invalid (most likely a negative length casted to uint32)\n                styling.warnInvalidLengthSemanticTokens(lineNumber, startCharacter + 1);\n            }\n            else if (prevLineNumber === lineNumber && prevEndCharacter > startCharacter) {\n                // this token overlaps with the previous token\n                styling.warnOverlappingSemanticTokens(lineNumber, startCharacter + 1);\n            }\n            else {\n                const metadata = styling.getMetadata(tokenTypeIndex, tokenModifierSet, languageId);\n                if (metadata !== 2147483647 /* SemanticTokensProviderStylingConstants.NO_STYLING */) {\n                    if (areaLine === 0) {\n                        areaLine = lineNumber;\n                    }\n                    destData[destOffset] = lineNumber - areaLine;\n                    destData[destOffset + 1] = startCharacter;\n                    destData[destOffset + 2] = endCharacter;\n                    destData[destOffset + 3] = metadata;\n                    destOffset += 4;\n                    prevLineNumber = lineNumber;\n                    prevEndCharacter = endCharacter;\n                }\n            }\n            lastLineNumber = lineNumber;\n            lastStartCharacter = startCharacter;\n            tokenIndex++;\n        }\n        if (destOffset !== destData.length) {\n            destData = destData.subarray(0, destOffset);\n        }\n        const tokens = SparseMultilineTokens.create(areaLine, destData);\n        result.push(tokens);\n    }\n    return result;\n}\nclass HashTableEntry {\n    constructor(tokenTypeIndex, tokenModifierSet, languageId, metadata) {\n        this.tokenTypeIndex = tokenTypeIndex;\n        this.tokenModifierSet = tokenModifierSet;\n        this.languageId = languageId;\n        this.metadata = metadata;\n        this.next = null;\n    }\n}\nclass HashTable {\n    static { this._SIZES = [3, 7, 13, 31, 61, 127, 251, 509, 1021, 2039, 4093, 8191, 16381, 32749, 65521, 131071, 262139, 524287, 1048573, 2097143]; }\n    constructor() {\n        this._elementsCount = 0;\n        this._currentLengthIndex = 0;\n        this._currentLength = HashTable._SIZES[this._currentLengthIndex];\n        this._growCount = Math.round(this._currentLengthIndex + 1 < HashTable._SIZES.length ? 2 / 3 * this._currentLength : 0);\n        this._elements = [];\n        HashTable._nullOutEntries(this._elements, this._currentLength);\n    }\n    static _nullOutEntries(entries, length) {\n        for (let i = 0; i < length; i++) {\n            entries[i] = null;\n        }\n    }\n    _hash2(n1, n2) {\n        return (((n1 << 5) - n1) + n2) | 0; // n1 * 31 + n2, keep as int32\n    }\n    _hashFunc(tokenTypeIndex, tokenModifierSet, languageId) {\n        return this._hash2(this._hash2(tokenTypeIndex, tokenModifierSet), languageId) % this._currentLength;\n    }\n    get(tokenTypeIndex, tokenModifierSet, languageId) {\n        const hash = this._hashFunc(tokenTypeIndex, tokenModifierSet, languageId);\n        let p = this._elements[hash];\n        while (p) {\n            if (p.tokenTypeIndex === tokenTypeIndex && p.tokenModifierSet === tokenModifierSet && p.languageId === languageId) {\n                return p;\n            }\n            p = p.next;\n        }\n        return null;\n    }\n    add(tokenTypeIndex, tokenModifierSet, languageId, metadata) {\n        this._elementsCount++;\n        if (this._growCount !== 0 && this._elementsCount >= this._growCount) {\n            // expand!\n            const oldElements = this._elements;\n            this._currentLengthIndex++;\n            this._currentLength = HashTable._SIZES[this._currentLengthIndex];\n            this._growCount = Math.round(this._currentLengthIndex + 1 < HashTable._SIZES.length ? 2 / 3 * this._currentLength : 0);\n            this._elements = [];\n            HashTable._nullOutEntries(this._elements, this._currentLength);\n            for (const first of oldElements) {\n                let p = first;\n                while (p) {\n                    const oldNext = p.next;\n                    p.next = null;\n                    this._add(p);\n                    p = oldNext;\n                }\n            }\n        }\n        this._add(new HashTableEntry(tokenTypeIndex, tokenModifierSet, languageId, metadata));\n    }\n    _add(element) {\n        const hash = this._hashFunc(element.tokenTypeIndex, element.tokenModifierSet, element.languageId);\n        element.next = this._elements[hash];\n        this._elements[hash] = element;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n */\nexport class TokenMetadata {\n    static getLanguageId(metadata) {\n        return (metadata & 255 /* MetadataConsts.LANGUAGEID_MASK */) >>> 0 /* MetadataConsts.LANGUAGEID_OFFSET */;\n    }\n    static getTokenType(metadata) {\n        return (metadata & 768 /* MetadataConsts.TOKEN_TYPE_MASK */) >>> 8 /* MetadataConsts.TOKEN_TYPE_OFFSET */;\n    }\n    static containsBalancedBrackets(metadata) {\n        return (metadata & 1024 /* MetadataConsts.BALANCED_BRACKETS_MASK */) !== 0;\n    }\n    static getFontStyle(metadata) {\n        return (metadata & 30720 /* MetadataConsts.FONT_STYLE_MASK */) >>> 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n    }\n    static getForeground(metadata) {\n        return (metadata & 16744448 /* MetadataConsts.FOREGROUND_MASK */) >>> 15 /* MetadataConsts.FOREGROUND_OFFSET */;\n    }\n    static getBackground(metadata) {\n        return (metadata & 4278190080 /* MetadataConsts.BACKGROUND_MASK */) >>> 24 /* MetadataConsts.BACKGROUND_OFFSET */;\n    }\n    static getClassNameFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        let className = 'mtk' + foreground;\n        const fontStyle = this.getFontStyle(metadata);\n        if (fontStyle & 1 /* FontStyle.Italic */) {\n            className += ' mtki';\n        }\n        if (fontStyle & 2 /* FontStyle.Bold */) {\n            className += ' mtkb';\n        }\n        if (fontStyle & 4 /* FontStyle.Underline */) {\n            className += ' mtku';\n        }\n        if (fontStyle & 8 /* FontStyle.Strikethrough */) {\n            className += ' mtks';\n        }\n        return className;\n    }\n    static getInlineStyleFromMetadata(metadata, colorMap) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        let result = `color: ${colorMap[foreground]};`;\n        if (fontStyle & 1 /* FontStyle.Italic */) {\n            result += 'font-style: italic;';\n        }\n        if (fontStyle & 2 /* FontStyle.Bold */) {\n            result += 'font-weight: bold;';\n        }\n        let textDecoration = '';\n        if (fontStyle & 4 /* FontStyle.Underline */) {\n            textDecoration += ' underline';\n        }\n        if (fontStyle & 8 /* FontStyle.Strikethrough */) {\n            textDecoration += ' line-through';\n        }\n        if (textDecoration) {\n            result += `text-decoration:${textDecoration};`;\n        }\n        return result;\n    }\n    static getPresentationFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        return {\n            foreground: foreground,\n            italic: Boolean(fontStyle & 1 /* FontStyle.Italic */),\n            bold: Boolean(fontStyle & 2 /* FontStyle.Bold */),\n            underline: Boolean(fontStyle & 4 /* FontStyle.Underline */),\n            strikethrough: Boolean(fontStyle & 8 /* FontStyle.Strikethrough */),\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\nexport function originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nexport class ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString();\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    // --- path math\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return paths.posix.basename(resource.path);\n    }\n    extname(resource) {\n        return paths.posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = paths.posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 /* CharCode.Slash */) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = paths.posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? extpath.toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/';\n        const toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            // make casing of fromPath match toPath\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return paths.posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(paths.resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = extpath.toPosixPath(path); // we allow path to be a windows path\n        return base.with({\n            path: paths.posix.resolve(base.path, path)\n        });\n    }\n    // --- misc\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep = paths.sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n        }\n        else {\n            const p = resource.path;\n            return (p.length > 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n        }\n    }\n    removeTrailingPathSeparator(resource, sep = paths.sep) {\n        // Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n        if (hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep = paths.sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n        }\n        else {\n            sep = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n    // A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n    // Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n    return uri.scheme === Schemas.file ? !isLinux : true;\n});\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n/**\n * Data URI related helpers.\n */\nexport var DataUri;\n(function (DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = new Map();\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the mime is: image/png\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from '../../../base/common/arrays.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport * as types from '../../../base/common/types.js';\nimport * as nls from '../../../nls.js';\nimport { getLanguageTagSettingPlainKey } from './configuration.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport const Extensions = {\n    Configuration: 'base.contributions.configuration'\n};\nexport const allSettings = { properties: {}, patternProperties: {} };\nexport const applicationSettings = { properties: {}, patternProperties: {} };\nexport const machineSettings = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings = { properties: {}, patternProperties: {} };\nexport const windowSettings = { properties: {}, patternProperties: {} };\nexport const resourceSettings = { properties: {}, patternProperties: {} };\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\nconst contributionRegistry = Registry.as(JSONExtensions.JSONContribution);\nclass ConfigurationRegistry {\n    constructor() {\n        this.registeredConfigurationDefaults = [];\n        this.overrideIdentifiers = new Set();\n        this._onDidSchemaChange = new Emitter();\n        this._onDidUpdateConfiguration = new Emitter();\n        this.configurationDefaultsOverrides = new Map();\n        this.defaultLanguageConfigurationOverridesNode = {\n            id: 'defaultOverrides',\n            title: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n            properties: {}\n        };\n        this.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n        this.resourceLanguageSettingsSchema = {\n            properties: {},\n            patternProperties: {},\n            additionalProperties: true,\n            allowTrailingCommas: true,\n            allowComments: true\n        };\n        this.configurationProperties = {};\n        this.policyConfigurations = new Map();\n        this.excludedConfigurationProperties = {};\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this.registerOverridePropertyPatternKey();\n    }\n    registerConfiguration(configuration, validate = true) {\n        this.registerConfigurations([configuration], validate);\n    }\n    registerConfigurations(configurations, validate = true) {\n        const properties = new Set();\n        this.doRegisterConfigurations(configurations, validate, properties);\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties });\n    }\n    registerDefaultConfigurations(configurationDefaults) {\n        const properties = new Set();\n        this.doRegisterDefaultConfigurations(configurationDefaults, properties);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n    }\n    doRegisterDefaultConfigurations(configurationDefaults, bucket) {\n        this.registeredConfigurationDefaults.push(...configurationDefaults);\n        const overrideIdentifiers = [];\n        for (const { overrides, source } of configurationDefaults) {\n            for (const key in overrides) {\n                bucket.add(key);\n                const configurationDefaultOverridesForKey = this.configurationDefaultsOverrides.get(key)\n                    ?? this.configurationDefaultsOverrides.set(key, { configurationDefaultOverrides: [] }).get(key);\n                const value = overrides[key];\n                configurationDefaultOverridesForKey.configurationDefaultOverrides.push({ value, source });\n                // Configuration defaults for Override Identifiers\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    const newDefaultOverride = this.mergeDefaultConfigurationsForOverrideIdentifier(key, value, source, configurationDefaultOverridesForKey.configurationDefaultOverrideValue);\n                    if (!newDefaultOverride) {\n                        continue;\n                    }\n                    configurationDefaultOverridesForKey.configurationDefaultOverrideValue = newDefaultOverride;\n                    this.updateDefaultOverrideProperty(key, newDefaultOverride, source);\n                    overrideIdentifiers.push(...overrideIdentifiersFromKey(key));\n                }\n                // Configuration defaults for Configuration Properties\n                else {\n                    const newDefaultOverride = this.mergeDefaultConfigurationsForConfigurationProperty(key, value, source, configurationDefaultOverridesForKey.configurationDefaultOverrideValue);\n                    if (!newDefaultOverride) {\n                        continue;\n                    }\n                    configurationDefaultOverridesForKey.configurationDefaultOverrideValue = newDefaultOverride;\n                    const property = this.configurationProperties[key];\n                    if (property) {\n                        this.updatePropertyDefaultValue(key, property);\n                        this.updateSchema(key, property);\n                    }\n                }\n            }\n        }\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n    }\n    updateDefaultOverrideProperty(key, newDefaultOverride, source) {\n        const property = {\n            type: 'object',\n            default: newDefaultOverride.value,\n            description: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for the {0} language.\", getLanguageTagSettingPlainKey(key)),\n            $ref: resourceLanguageSettingsSchemaId,\n            defaultDefaultValue: newDefaultOverride.value,\n            source,\n            defaultValueSource: source\n        };\n        this.configurationProperties[key] = property;\n        this.defaultLanguageConfigurationOverridesNode.properties[key] = property;\n    }\n    mergeDefaultConfigurationsForOverrideIdentifier(overrideIdentifier, configurationValueObject, valueSource, existingDefaultOverride) {\n        const defaultValue = existingDefaultOverride?.value || {};\n        const source = existingDefaultOverride?.source ?? new Map();\n        // This should not happen\n        if (!(source instanceof Map)) {\n            console.error('objectConfigurationSources is not a Map');\n            return undefined;\n        }\n        for (const propertyKey of Object.keys(configurationValueObject)) {\n            const propertyDefaultValue = configurationValueObject[propertyKey];\n            const isObjectSetting = types.isObject(propertyDefaultValue) &&\n                (types.isUndefined(defaultValue[propertyKey]) || types.isObject(defaultValue[propertyKey]));\n            // If the default value is an object, merge the objects and store the source of each keys\n            if (isObjectSetting) {\n                defaultValue[propertyKey] = { ...(defaultValue[propertyKey] ?? {}), ...propertyDefaultValue };\n                // Track the source of each value in the object\n                if (valueSource) {\n                    for (const objectKey in propertyDefaultValue) {\n                        source.set(`${propertyKey}.${objectKey}`, valueSource);\n                    }\n                }\n            }\n            // Primitive values are overridden\n            else {\n                defaultValue[propertyKey] = propertyDefaultValue;\n                if (valueSource) {\n                    source.set(propertyKey, valueSource);\n                }\n                else {\n                    source.delete(propertyKey);\n                }\n            }\n        }\n        return { value: defaultValue, source };\n    }\n    mergeDefaultConfigurationsForConfigurationProperty(propertyKey, value, valuesSource, existingDefaultOverride) {\n        const property = this.configurationProperties[propertyKey];\n        const existingDefaultValue = existingDefaultOverride?.value ?? property?.defaultDefaultValue;\n        let source = valuesSource;\n        const isObjectSetting = types.isObject(value) &&\n            (property !== undefined && property.type === 'object' ||\n                property === undefined && (types.isUndefined(existingDefaultValue) || types.isObject(existingDefaultValue)));\n        // If the default value is an object, merge the objects and store the source of each keys\n        if (isObjectSetting) {\n            source = existingDefaultOverride?.source ?? new Map();\n            // This should not happen\n            if (!(source instanceof Map)) {\n                console.error('defaultValueSource is not a Map');\n                return undefined;\n            }\n            for (const objectKey in value) {\n                if (valuesSource) {\n                    source.set(`${propertyKey}.${objectKey}`, valuesSource);\n                }\n            }\n            value = { ...(types.isObject(existingDefaultValue) ? existingDefaultValue : {}), ...value };\n        }\n        return { value, source };\n    }\n    registerOverrideIdentifiers(overrideIdentifiers) {\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n        this._onDidSchemaChange.fire();\n    }\n    doRegisterOverrideIdentifiers(overrideIdentifiers) {\n        for (const overrideIdentifier of overrideIdentifiers) {\n            this.overrideIdentifiers.add(overrideIdentifier);\n        }\n        this.updateOverridePropertyPatternKey();\n    }\n    doRegisterConfigurations(configurations, validate, bucket) {\n        configurations.forEach(configuration => {\n            this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo, configuration.restrictedProperties, undefined, bucket);\n            this.configurationContributors.push(configuration);\n            this.registerJSONConfiguration(configuration);\n        });\n    }\n    validateAndRegisterProperties(configuration, validate = true, extensionInfo, restrictedProperties, scope = 3 /* ConfigurationScope.WINDOW */, bucket) {\n        scope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n        const properties = configuration.properties;\n        if (properties) {\n            for (const key in properties) {\n                const property = properties[key];\n                if (validate && validateProperty(key, property)) {\n                    delete properties[key];\n                    continue;\n                }\n                property.source = extensionInfo;\n                // update default value\n                property.defaultDefaultValue = properties[key].default;\n                this.updatePropertyDefaultValue(key, property);\n                // update scope\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    property.scope = undefined; // No scope for overridable properties `[${identifier}]`\n                }\n                else {\n                    property.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n                    property.restricted = types.isUndefinedOrNull(property.restricted) ? !!restrictedProperties?.includes(key) : property.restricted;\n                }\n                // Add to properties maps\n                // Property is included by default if 'included' is unspecified\n                if (properties[key].hasOwnProperty('included') && !properties[key].included) {\n                    this.excludedConfigurationProperties[key] = properties[key];\n                    delete properties[key];\n                    continue;\n                }\n                else {\n                    this.configurationProperties[key] = properties[key];\n                    if (properties[key].policy?.name) {\n                        this.policyConfigurations.set(properties[key].policy.name, key);\n                    }\n                }\n                if (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n                    // If not set, default deprecationMessage to the markdown source\n                    properties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n                }\n                bucket.add(key);\n            }\n        }\n        const subNodes = configuration.allOf;\n        if (subNodes) {\n            for (const node of subNodes) {\n                this.validateAndRegisterProperties(node, validate, extensionInfo, restrictedProperties, scope, bucket);\n            }\n        }\n    }\n    getConfigurationProperties() {\n        return this.configurationProperties;\n    }\n    getPolicyConfigurations() {\n        return this.policyConfigurations;\n    }\n    registerJSONConfiguration(configuration) {\n        const register = (configuration) => {\n            const properties = configuration.properties;\n            if (properties) {\n                for (const key in properties) {\n                    this.updateSchema(key, properties[key]);\n                }\n            }\n            const subNodes = configuration.allOf;\n            subNodes?.forEach(register);\n        };\n        register(configuration);\n    }\n    updateSchema(key, property) {\n        allSettings.properties[key] = property;\n        switch (property.scope) {\n            case 1 /* ConfigurationScope.APPLICATION */:\n                applicationSettings.properties[key] = property;\n                break;\n            case 2 /* ConfigurationScope.MACHINE */:\n                machineSettings.properties[key] = property;\n                break;\n            case 6 /* ConfigurationScope.MACHINE_OVERRIDABLE */:\n                machineOverridableSettings.properties[key] = property;\n                break;\n            case 3 /* ConfigurationScope.WINDOW */:\n                windowSettings.properties[key] = property;\n                break;\n            case 4 /* ConfigurationScope.RESOURCE */:\n                resourceSettings.properties[key] = property;\n                break;\n            case 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */:\n                resourceSettings.properties[key] = property;\n                this.resourceLanguageSettingsSchema.properties[key] = property;\n                break;\n        }\n    }\n    updateOverridePropertyPatternKey() {\n        for (const overrideIdentifier of this.overrideIdentifiers.values()) {\n            const overrideIdentifierProperty = `[${overrideIdentifier}]`;\n            const resourceLanguagePropertiesSchema = {\n                type: 'object',\n                description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n                errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n                $ref: resourceLanguageSettingsSchemaId,\n            };\n            this.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n            allSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            applicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            windowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            resourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n        }\n    }\n    registerOverridePropertyPatternKey() {\n        const resourceLanguagePropertiesSchema = {\n            type: 'object',\n            description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n            errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n            $ref: resourceLanguageSettingsSchemaId,\n        };\n        allSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        applicationSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineOverridableSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        windowSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        resourceSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        this._onDidSchemaChange.fire();\n    }\n    updatePropertyDefaultValue(key, property) {\n        const configurationdefaultOverride = this.configurationDefaultsOverrides.get(key)?.configurationDefaultOverrideValue;\n        let defaultValue = undefined;\n        let defaultSource = undefined;\n        if (configurationdefaultOverride\n            && (!property.disallowConfigurationDefault || !configurationdefaultOverride.source) // Prevent overriding the default value if the property is disallowed to be overridden by configuration defaults from extensions\n        ) {\n            defaultValue = configurationdefaultOverride.value;\n            defaultSource = configurationdefaultOverride.source;\n        }\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = property.defaultDefaultValue;\n            defaultSource = undefined;\n        }\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = getDefaultValue(property.type);\n        }\n        property.default = defaultValue;\n        property.defaultValueSource = defaultSource;\n    }\n}\nconst OVERRIDE_IDENTIFIER_PATTERN = `\\\\[([^\\\\]]+)\\\\]`;\nconst OVERRIDE_IDENTIFIER_REGEX = new RegExp(OVERRIDE_IDENTIFIER_PATTERN, 'g');\nexport const OVERRIDE_PROPERTY_PATTERN = `^(${OVERRIDE_IDENTIFIER_PATTERN})+$`;\nexport const OVERRIDE_PROPERTY_REGEX = new RegExp(OVERRIDE_PROPERTY_PATTERN);\nexport function overrideIdentifiersFromKey(key) {\n    const identifiers = [];\n    if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n        let matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        while (matches?.length) {\n            const identifier = matches[1].trim();\n            if (identifier) {\n                identifiers.push(identifier);\n            }\n            matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        }\n    }\n    return distinct(identifiers);\n}\nexport function getDefaultValue(type) {\n    const t = Array.isArray(type) ? type[0] : type;\n    switch (t) {\n        case 'boolean':\n            return false;\n        case 'integer':\n        case 'number':\n            return 0;\n        case 'string':\n            return '';\n        case 'array':\n            return [];\n        case 'object':\n            return {};\n        default:\n            return null;\n    }\n}\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\nexport function validateProperty(property, schema) {\n    if (!property.trim()) {\n        return nls.localize('config.property.empty', \"Cannot register an empty property\");\n    }\n    if (OVERRIDE_PROPERTY_REGEX.test(property)) {\n        return nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n    }\n    if (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n        return nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n    }\n    if (schema.policy?.name && configurationRegistry.getPolicyConfigurations().get(schema.policy?.name) !== undefined) {\n        return nls.localize('config.policy.duplicate', \"Cannot register '{0}'. The associated policy {1} is already registered with {2}.\", property, schema.policy?.name, configurationRegistry.getPolicyConfigurations().get(schema.policy?.name));\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalState } from '../../../base/common/errors.js';\nimport { localize } from '../../../nls.js';\nfunction hintDidYouMean(...meant) {\n    switch (meant.length) {\n        case 1:\n            return localize('contextkey.scanner.hint.didYouMean1', \"Did you mean {0}?\", meant[0]);\n        case 2:\n            return localize('contextkey.scanner.hint.didYouMean2', \"Did you mean {0} or {1}?\", meant[0], meant[1]);\n        case 3:\n            return localize('contextkey.scanner.hint.didYouMean3', \"Did you mean {0}, {1} or {2}?\", meant[0], meant[1], meant[2]);\n        default: // we just don't expect that many\n            return undefined;\n    }\n}\nconst hintDidYouForgetToOpenOrCloseQuote = localize('contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote', \"Did you forget to open or close the quote?\");\nconst hintDidYouForgetToEscapeSlash = localize('contextkey.scanner.hint.didYouForgetToEscapeSlash', \"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\\\\\/\\'.\");\n/**\n * A simple scanner for context keys.\n *\n * Example:\n *\n * ```ts\n * const scanner = new Scanner().reset('resourceFileName =~ /docker/ && !config.docker.enabled');\n * const tokens = [...scanner];\n * if (scanner.errorTokens.length > 0) {\n *     scanner.errorTokens.forEach(err => console.error(`Unexpected token at ${err.offset}: ${err.lexeme}\\nHint: ${err.additional}`));\n * } else {\n *     // process tokens\n * }\n * ```\n */\nexport class Scanner {\n    constructor() {\n        this._input = '';\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        // u - unicode, y - sticky // TODO@ulugbekna: we accept double quotes as part of the string rather than as a delimiter (to preserve old parser's behavior)\n        this.stringRe = /[a-zA-Z0-9_<>\\-\\./\\\\:\\*\\?\\+\\[\\]\\^,#@;\"%\\$\\p{L}-]+/uy;\n    }\n    static getLexeme(token) {\n        switch (token.type) {\n            case 0 /* TokenType.LParen */:\n                return '(';\n            case 1 /* TokenType.RParen */:\n                return ')';\n            case 2 /* TokenType.Neg */:\n                return '!';\n            case 3 /* TokenType.Eq */:\n                return token.isTripleEq ? '===' : '==';\n            case 4 /* TokenType.NotEq */:\n                return token.isTripleEq ? '!==' : '!=';\n            case 5 /* TokenType.Lt */:\n                return '<';\n            case 6 /* TokenType.LtEq */:\n                return '<=';\n            case 7 /* TokenType.Gt */:\n                return '>=';\n            case 8 /* TokenType.GtEq */:\n                return '>=';\n            case 9 /* TokenType.RegexOp */:\n                return '=~';\n            case 10 /* TokenType.RegexStr */:\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                return 'true';\n            case 12 /* TokenType.False */:\n                return 'false';\n            case 13 /* TokenType.In */:\n                return 'in';\n            case 14 /* TokenType.Not */:\n                return 'not';\n            case 15 /* TokenType.And */:\n                return '&&';\n            case 16 /* TokenType.Or */:\n                return '||';\n            case 17 /* TokenType.Str */:\n                return token.lexeme;\n            case 18 /* TokenType.QuotedStr */:\n                return token.lexeme;\n            case 19 /* TokenType.Error */:\n                return token.lexeme;\n            case 20 /* TokenType.EOF */:\n                return 'EOF';\n            default:\n                throw illegalState(`unhandled token type: ${JSON.stringify(token)}; have you forgotten to add a case?`);\n        }\n    }\n    static { this._regexFlags = new Set(['i', 'g', 's', 'm', 'y', 'u'].map(ch => ch.charCodeAt(0))); }\n    static { this._keywords = new Map([\n        ['not', 14 /* TokenType.Not */],\n        ['in', 13 /* TokenType.In */],\n        ['false', 12 /* TokenType.False */],\n        ['true', 11 /* TokenType.True */],\n    ]); }\n    reset(value) {\n        this._input = value;\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        return this;\n    }\n    scan() {\n        while (!this._isAtEnd()) {\n            this._start = this._current;\n            const ch = this._advance();\n            switch (ch) {\n                case 40 /* CharCode.OpenParen */:\n                    this._addToken(0 /* TokenType.LParen */);\n                    break;\n                case 41 /* CharCode.CloseParen */:\n                    this._addToken(1 /* TokenType.RParen */);\n                    break;\n                case 33 /* CharCode.ExclamationMark */:\n                    if (this._match(61 /* CharCode.Equals */)) {\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `!==`\n                        this._tokens.push({ type: 4 /* TokenType.NotEq */, offset: this._start, isTripleEq });\n                    }\n                    else {\n                        this._addToken(2 /* TokenType.Neg */);\n                    }\n                    break;\n                case 39 /* CharCode.SingleQuote */:\n                    this._quotedString();\n                    break;\n                case 47 /* CharCode.Slash */:\n                    this._regex();\n                    break;\n                case 61 /* CharCode.Equals */:\n                    if (this._match(61 /* CharCode.Equals */)) { // support `==`\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `===`\n                        this._tokens.push({ type: 3 /* TokenType.Eq */, offset: this._start, isTripleEq });\n                    }\n                    else if (this._match(126 /* CharCode.Tilde */)) {\n                        this._addToken(9 /* TokenType.RegexOp */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('==', '=~'));\n                    }\n                    break;\n                case 60 /* CharCode.LessThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 6 /* TokenType.LtEq */ : 5 /* TokenType.Lt */);\n                    break;\n                case 62 /* CharCode.GreaterThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 8 /* TokenType.GtEq */ : 7 /* TokenType.Gt */);\n                    break;\n                case 38 /* CharCode.Ampersand */:\n                    if (this._match(38 /* CharCode.Ampersand */)) {\n                        this._addToken(15 /* TokenType.And */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('&&'));\n                    }\n                    break;\n                case 124 /* CharCode.Pipe */:\n                    if (this._match(124 /* CharCode.Pipe */)) {\n                        this._addToken(16 /* TokenType.Or */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('||'));\n                    }\n                    break;\n                // TODO@ulugbekna: 1) rewrite using a regex 2) reconsider what characters are considered whitespace, including unicode, nbsp, etc.\n                case 32 /* CharCode.Space */:\n                case 13 /* CharCode.CarriageReturn */:\n                case 9 /* CharCode.Tab */:\n                case 10 /* CharCode.LineFeed */:\n                case 160 /* CharCode.NoBreakSpace */: // &nbsp\n                    break;\n                default:\n                    this._string();\n            }\n        }\n        this._start = this._current;\n        this._addToken(20 /* TokenType.EOF */);\n        return Array.from(this._tokens);\n    }\n    _match(expected) {\n        if (this._isAtEnd()) {\n            return false;\n        }\n        if (this._input.charCodeAt(this._current) !== expected) {\n            return false;\n        }\n        this._current++;\n        return true;\n    }\n    _advance() {\n        return this._input.charCodeAt(this._current++);\n    }\n    _peek() {\n        return this._isAtEnd() ? 0 /* CharCode.Null */ : this._input.charCodeAt(this._current);\n    }\n    _addToken(type) {\n        this._tokens.push({ type, offset: this._start });\n    }\n    _error(additional) {\n        const offset = this._start;\n        const lexeme = this._input.substring(this._start, this._current);\n        const errToken = { type: 19 /* TokenType.Error */, offset: this._start, lexeme };\n        this._errors.push({ offset, lexeme, additionalInfo: additional });\n        this._tokens.push(errToken);\n    }\n    _string() {\n        this.stringRe.lastIndex = this._start;\n        const match = this.stringRe.exec(this._input);\n        if (match) {\n            this._current = this._start + match[0].length;\n            const lexeme = this._input.substring(this._start, this._current);\n            const keyword = Scanner._keywords.get(lexeme);\n            if (keyword) {\n                this._addToken(keyword);\n            }\n            else {\n                this._tokens.push({ type: 17 /* TokenType.Str */, lexeme, offset: this._start });\n            }\n        }\n    }\n    // captures the lexeme without the leading and trailing '\n    _quotedString() {\n        while (this._peek() !== 39 /* CharCode.SingleQuote */ && !this._isAtEnd()) { // TODO@ulugbekna: add support for escaping ' ?\n            this._advance();\n        }\n        if (this._isAtEnd()) {\n            this._error(hintDidYouForgetToOpenOrCloseQuote);\n            return;\n        }\n        // consume the closing '\n        this._advance();\n        this._tokens.push({ type: 18 /* TokenType.QuotedStr */, lexeme: this._input.substring(this._start + 1, this._current - 1), offset: this._start + 1 });\n    }\n    /*\n     * Lexing a regex expression: /.../[igsmyu]*\n     * Based on https://github.com/microsoft/TypeScript/blob/9247ef115e617805983740ba795d7a8164babf89/src/compiler/scanner.ts#L2129-L2181\n     *\n     * Note that we want slashes within a regex to be escaped, e.g., /file:\\\\/\\\\/\\\\// should match `file:///`\n     */\n    _regex() {\n        let p = this._current;\n        let inEscape = false;\n        let inCharacterClass = false;\n        while (true) {\n            if (p >= this._input.length) {\n                this._current = p;\n                this._error(hintDidYouForgetToEscapeSlash);\n                return;\n            }\n            const ch = this._input.charCodeAt(p);\n            if (inEscape) { // parsing an escape character\n                inEscape = false;\n            }\n            else if (ch === 47 /* CharCode.Slash */ && !inCharacterClass) { // end of regex\n                p++;\n                break;\n            }\n            else if (ch === 91 /* CharCode.OpenSquareBracket */) {\n                inCharacterClass = true;\n            }\n            else if (ch === 92 /* CharCode.Backslash */) {\n                inEscape = true;\n            }\n            else if (ch === 93 /* CharCode.CloseSquareBracket */) {\n                inCharacterClass = false;\n            }\n            p++;\n        }\n        // Consume flags // TODO@ulugbekna: use regex instead\n        while (p < this._input.length && Scanner._regexFlags.has(this._input.charCodeAt(p))) {\n            p++;\n        }\n        this._current = p;\n        const lexeme = this._input.substring(this._start, this._current);\n        this._tokens.push({ type: 10 /* TokenType.RegexStr */, lexeme, offset: this._start });\n    }\n    _isAtEnd() {\n        return this._current >= this._input.length;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\nimport { Scanner } from './scanner.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nconst CONSTANT_VALUES = new Map();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst defaultConfig = {\n    regexParsingWithErrorRecovery: true\n};\nconst errorEmptyString = localize('contextkey.parser.error.emptyString', \"Empty context key expression\");\nconst hintEmptyString = localize('contextkey.parser.error.emptyString.hint', \"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.\");\nconst errorNoInAfterNot = localize('contextkey.parser.error.noInAfterNot', \"'in' after 'not'.\");\nconst errorClosingParenthesis = localize('contextkey.parser.error.closingParenthesis', \"closing parenthesis ')'\");\nconst errorUnexpectedToken = localize('contextkey.parser.error.unexpectedToken', \"Unexpected token\");\nconst hintUnexpectedToken = localize('contextkey.parser.error.unexpectedToken.hint', \"Did you forget to put && or || before the token?\");\nconst errorUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF', \"Unexpected end of expression\");\nconst hintUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF.hint', \"Did you forget to put a context key?\");\n/**\n * A parser for context key expressions.\n *\n * Example:\n * ```ts\n * const parser = new Parser();\n * const expr = parser.parse('foo == \"bar\" && baz == true');\n *\n * if (expr === undefined) {\n * \t// there were lexing or parsing errors\n * \t// process lexing errors with `parser.lexingErrors`\n *  // process parsing errors with `parser.parsingErrors`\n * } else {\n * \t// expr is a valid expression\n * }\n * ```\n */\nexport class Parser {\n    // Note: this doesn't produce an exact syntax tree but a normalized one\n    // ContextKeyExpression's that we use as AST nodes do not expose constructors that do not normalize\n    static { this._parseError = new Error(); }\n    constructor(_config = defaultConfig) {\n        this._config = _config;\n        // lifetime note: `_scanner` lives as long as the parser does, i.e., is not reset between calls to `parse`\n        this._scanner = new Scanner();\n        // lifetime note: `_tokens`, `_current`, and `_parsingErrors` must be reset between calls to `parse`\n        this._tokens = [];\n        this._current = 0; // invariant: 0 <= this._current < this._tokens.length ; any incrementation of this value must first call `_isAtEnd`\n        this._parsingErrors = [];\n        this._flagsGYRe = /g|y/g;\n    }\n    /**\n     * Parse a context key expression.\n     *\n     * @param input the expression to parse\n     * @returns the parsed expression or `undefined` if there's an error - call `lexingErrors` and `parsingErrors` to see the errors\n     */\n    parse(input) {\n        if (input === '') {\n            this._parsingErrors.push({ message: errorEmptyString, offset: 0, lexeme: '', additionalInfo: hintEmptyString });\n            return undefined;\n        }\n        this._tokens = this._scanner.reset(input).scan();\n        // @ulugbekna: we do not stop parsing if there are lexing errors to be able to reconstruct regexes with unescaped slashes; TODO@ulugbekna: make this respect config option for recovery\n        this._current = 0;\n        this._parsingErrors = [];\n        try {\n            const expr = this._expr();\n            if (!this._isAtEnd()) {\n                const peek = this._peek();\n                const additionalInfo = peek.type === 17 /* TokenType.Str */ ? hintUnexpectedToken : undefined;\n                this._parsingErrors.push({ message: errorUnexpectedToken, offset: peek.offset, lexeme: Scanner.getLexeme(peek), additionalInfo });\n                throw Parser._parseError;\n            }\n            return expr;\n        }\n        catch (e) {\n            if (!(e === Parser._parseError)) {\n                throw e;\n            }\n            return undefined;\n        }\n    }\n    _expr() {\n        return this._or();\n    }\n    _or() {\n        const expr = [this._and()];\n        while (this._matchOne(16 /* TokenType.Or */)) {\n            const right = this._and();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.or(...expr);\n    }\n    _and() {\n        const expr = [this._term()];\n        while (this._matchOne(15 /* TokenType.And */)) {\n            const right = this._term();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.and(...expr);\n    }\n    _term() {\n        if (this._matchOne(2 /* TokenType.Neg */)) {\n            const peek = this._peek();\n            switch (peek.type) {\n                case 11 /* TokenType.True */:\n                    this._advance();\n                    return ContextKeyFalseExpr.INSTANCE;\n                case 12 /* TokenType.False */:\n                    this._advance();\n                    return ContextKeyTrueExpr.INSTANCE;\n                case 0 /* TokenType.LParen */: {\n                    this._advance();\n                    const expr = this._expr();\n                    this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                    return expr?.negate();\n                }\n                case 17 /* TokenType.Str */:\n                    this._advance();\n                    return ContextKeyNotExpr.create(peek.lexeme);\n                default:\n                    throw this._errExpectedButGot(`KEY | true | false | '(' expression ')'`, peek);\n            }\n        }\n        return this._primary();\n    }\n    _primary() {\n        const peek = this._peek();\n        switch (peek.type) {\n            case 11 /* TokenType.True */:\n                this._advance();\n                return ContextKeyExpr.true();\n            case 12 /* TokenType.False */:\n                this._advance();\n                return ContextKeyExpr.false();\n            case 0 /* TokenType.LParen */: {\n                this._advance();\n                const expr = this._expr();\n                this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                return expr;\n            }\n            case 17 /* TokenType.Str */: {\n                // KEY\n                const key = peek.lexeme;\n                this._advance();\n                // =~ regex\n                if (this._matchOne(9 /* TokenType.RegexOp */)) {\n                    // @ulugbekna: we need to reconstruct the regex from the tokens because some extensions use unescaped slashes in regexes\n                    const expr = this._peek();\n                    if (!this._config.regexParsingWithErrorRecovery) {\n                        this._advance();\n                        if (expr.type !== 10 /* TokenType.RegexStr */) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        const regexLexeme = expr.lexeme;\n                        const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                        const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                        let regexp;\n                        try {\n                            regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                        }\n                        catch (e) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        return ContextKeyRegexExpr.create(key, regexp);\n                    }\n                    switch (expr.type) {\n                        case 10 /* TokenType.RegexStr */:\n                        case 19 /* TokenType.Error */: { // also handle an ErrorToken in case of smth such as /(/file)/\n                            const lexemeReconstruction = [expr.lexeme]; // /REGEX/ or /REGEX/FLAGS\n                            this._advance();\n                            let followingToken = this._peek();\n                            let parenBalance = 0;\n                            for (let i = 0; i < expr.lexeme.length; i++) {\n                                if (expr.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                    parenBalance++;\n                                }\n                                else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                    parenBalance--;\n                                }\n                            }\n                            while (!this._isAtEnd() && followingToken.type !== 15 /* TokenType.And */ && followingToken.type !== 16 /* TokenType.Or */) {\n                                switch (followingToken.type) {\n                                    case 0 /* TokenType.LParen */:\n                                        parenBalance++;\n                                        break;\n                                    case 1 /* TokenType.RParen */:\n                                        parenBalance--;\n                                        break;\n                                    case 10 /* TokenType.RegexStr */:\n                                    case 18 /* TokenType.QuotedStr */:\n                                        for (let i = 0; i < followingToken.lexeme.length; i++) {\n                                            if (followingToken.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                                parenBalance++;\n                                            }\n                                            else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                                parenBalance--;\n                                            }\n                                        }\n                                }\n                                if (parenBalance < 0) {\n                                    break;\n                                }\n                                lexemeReconstruction.push(Scanner.getLexeme(followingToken));\n                                this._advance();\n                                followingToken = this._peek();\n                            }\n                            const regexLexeme = lexemeReconstruction.join('');\n                            const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                            const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                            let regexp;\n                            try {\n                                regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                            }\n                            catch (e) {\n                                throw this._errExpectedButGot(`REGEX`, expr);\n                            }\n                            return ContextKeyExpr.regex(key, regexp);\n                        }\n                        case 18 /* TokenType.QuotedStr */: {\n                            const serializedValue = expr.lexeme;\n                            this._advance();\n                            // replicate old regex parsing behavior\n                            let regex = null;\n                            if (!isFalsyOrWhitespace(serializedValue)) {\n                                const start = serializedValue.indexOf('/');\n                                const end = serializedValue.lastIndexOf('/');\n                                if (start !== end && start >= 0) {\n                                    const value = serializedValue.slice(start + 1, end);\n                                    const caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n                                    try {\n                                        regex = new RegExp(value, caseIgnoreFlag);\n                                    }\n                                    catch (_e) {\n                                        throw this._errExpectedButGot(`REGEX`, expr);\n                                    }\n                                }\n                            }\n                            if (regex === null) {\n                                throw this._errExpectedButGot('REGEX', expr);\n                            }\n                            return ContextKeyRegexExpr.create(key, regex);\n                        }\n                        default:\n                            throw this._errExpectedButGot('REGEX', this._peek());\n                    }\n                }\n                // [ 'not' 'in' value ]\n                if (this._matchOne(14 /* TokenType.Not */)) {\n                    this._consume(13 /* TokenType.In */, errorNoInAfterNot);\n                    const right = this._value();\n                    return ContextKeyExpr.notIn(key, right);\n                }\n                // [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in') value ]\n                const maybeOp = this._peek().type;\n                switch (maybeOp) {\n                    case 3 /* TokenType.Eq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // to preserve old parser behavior: \"foo == 'true'\" is preserved as \"foo == 'true'\", but \"foo == true\" is optimized as \"foo\"\n                            return ContextKeyExpr.equals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.has(key);\n                            case 'false':\n                                return ContextKeyExpr.not(key);\n                            default:\n                                return ContextKeyExpr.equals(key, right);\n                        }\n                    }\n                    case 4 /* TokenType.NotEq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // same as above with \"foo != 'true'\"\n                            return ContextKeyExpr.notEquals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.not(key);\n                            case 'false':\n                                return ContextKeyExpr.has(key);\n                            default:\n                                return ContextKeyExpr.notEquals(key, right);\n                        }\n                    }\n                    // TODO: ContextKeyExpr.smaller(key, right) accepts only `number` as `right` AND during eval of this node, we just eval to `false` if `right` is not a number\n                    // consequently, package.json linter should _warn_ the user if they're passing undesired things to ops\n                    case 5 /* TokenType.Lt */:\n                        this._advance();\n                        return ContextKeySmallerExpr.create(key, this._value());\n                    case 6 /* TokenType.LtEq */:\n                        this._advance();\n                        return ContextKeySmallerEqualsExpr.create(key, this._value());\n                    case 7 /* TokenType.Gt */:\n                        this._advance();\n                        return ContextKeyGreaterExpr.create(key, this._value());\n                    case 8 /* TokenType.GtEq */:\n                        this._advance();\n                        return ContextKeyGreaterEqualsExpr.create(key, this._value());\n                    case 13 /* TokenType.In */:\n                        this._advance();\n                        return ContextKeyExpr.in(key, this._value());\n                    default:\n                        return ContextKeyExpr.has(key);\n                }\n            }\n            case 20 /* TokenType.EOF */:\n                this._parsingErrors.push({ message: errorUnexpectedEOF, offset: peek.offset, lexeme: '', additionalInfo: hintUnexpectedEOF });\n                throw Parser._parseError;\n            default:\n                throw this._errExpectedButGot(`true | false | KEY \\n\\t| KEY '=~' REGEX \\n\\t| KEY ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in' | 'not' 'in') value`, this._peek());\n        }\n    }\n    _value() {\n        const token = this._peek();\n        switch (token.type) {\n            case 17 /* TokenType.Str */:\n            case 18 /* TokenType.QuotedStr */:\n                this._advance();\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                this._advance();\n                return 'true';\n            case 12 /* TokenType.False */:\n                this._advance();\n                return 'false';\n            case 13 /* TokenType.In */: // we support `in` as a value, e.g., \"when\": \"languageId == in\" - exists in existing extensions\n                this._advance();\n                return 'in';\n            default:\n                // this allows \"when\": \"foo == \" which's used by existing extensions\n                // we do not call `_advance` on purpose - we don't want to eat unintended tokens\n                return '';\n        }\n    }\n    _removeFlagsGY(flags) {\n        return flags.replaceAll(this._flagsGYRe, '');\n    }\n    // careful: this can throw if current token is the initial one (ie index = 0)\n    _previous() {\n        return this._tokens[this._current - 1];\n    }\n    _matchOne(token) {\n        if (this._check(token)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    }\n    _advance() {\n        if (!this._isAtEnd()) {\n            this._current++;\n        }\n        return this._previous();\n    }\n    _consume(type, message) {\n        if (this._check(type)) {\n            return this._advance();\n        }\n        throw this._errExpectedButGot(message, this._peek());\n    }\n    _errExpectedButGot(expected, got, additionalInfo) {\n        const message = localize('contextkey.parser.error.expectedButGot', \"Expected: {0}\\nReceived: '{1}'.\", expected, Scanner.getLexeme(got));\n        const offset = got.offset;\n        const lexeme = Scanner.getLexeme(got);\n        this._parsingErrors.push({ message, offset, lexeme, additionalInfo });\n        return Parser._parseError;\n    }\n    _check(type) {\n        return this._peek().type === type;\n    }\n    _peek() {\n        return this._tokens[this._current];\n    }\n    _isAtEnd() {\n        return this._peek().type === 20 /* TokenType.EOF */;\n    }\n}\nexport class ContextKeyExpr {\n    static false() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n    static true() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n    static has(key) {\n        return ContextKeyDefinedExpr.create(key);\n    }\n    static equals(key, value) {\n        return ContextKeyEqualsExpr.create(key, value);\n    }\n    static notEquals(key, value) {\n        return ContextKeyNotEqualsExpr.create(key, value);\n    }\n    static regex(key, value) {\n        return ContextKeyRegexExpr.create(key, value);\n    }\n    static in(key, value) {\n        return ContextKeyInExpr.create(key, value);\n    }\n    static notIn(key, value) {\n        return ContextKeyNotInExpr.create(key, value);\n    }\n    static not(key) {\n        return ContextKeyNotExpr.create(key);\n    }\n    static and(...expr) {\n        return ContextKeyAndExpr.create(expr, null, true);\n    }\n    static or(...expr) {\n        return ContextKeyOrExpr.create(expr, null, true);\n    }\n    static { this._parser = new Parser({ regexParsingWithErrorRecovery: false }); }\n    static deserialize(serialized) {\n        if (serialized === undefined || serialized === null) { // an empty string needs to be handled by the parser to get a corresponding parsing error reported\n            return undefined;\n        }\n        const expr = this._parser.parse(serialized);\n        return expr;\n    }\n}\nexport function expressionsAreEqualWithConstantSubstitution(a, b) {\n    const aExpr = a ? a.substituteConstants() : undefined;\n    const bExpr = b ? b.substituteConstants() : undefined;\n    if (!aExpr && !bExpr) {\n        return true;\n    }\n    if (!aExpr || !bExpr) {\n        return false;\n    }\n    return aExpr.equals(bExpr);\n}\nfunction cmp(a, b) {\n    return a.cmp(b);\n}\nexport class ContextKeyFalseExpr {\n    static { this.INSTANCE = new ContextKeyFalseExpr(); }\n    constructor() {\n        this.type = 0 /* ContextKeyExprType.False */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return false;\n    }\n    serialize() {\n        return 'false';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n}\nexport class ContextKeyTrueExpr {\n    static { this.INSTANCE = new ContextKeyTrueExpr(); }\n    constructor() {\n        this.type = 1 /* ContextKeyExprType.True */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return true;\n    }\n    serialize() {\n        return 'true';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n}\nexport class ContextKeyDefinedExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return new ContextKeyDefinedExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 2 /* ContextKeyExprType.Defined */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!!context.getValue(this.key));\n    }\n    serialize() {\n        return this.key;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            return (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return new ContextKeyEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 4 /* ContextKeyExprType.Equals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional ==\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) == this.value);\n    }\n    serialize() {\n        return `${this.key} == '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 10 /* ContextKeyExprType.In */;\n        this.negated = null;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.valueKey, other.key, other.valueKey);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.valueKey === other.valueKey);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const source = context.getValue(this.valueKey);\n        const item = context.getValue(this.key);\n        if (Array.isArray(source)) {\n            return source.includes(item);\n        }\n        if (typeof item === 'string' && typeof source === 'object' && source !== null) {\n            return hasOwnProperty.call(source, item);\n        }\n        return false;\n    }\n    serialize() {\n        return `${this.key} in '${this.valueKey}'`;\n    }\n    keys() {\n        return [this.key, this.valueKey];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyNotInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 11 /* ContextKeyExprType.NotIn */;\n        this._negated = ContextKeyInExpr.create(key, valueKey);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._negated.cmp(other._negated);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._negated.equals(other._negated);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._negated.evaluate(context);\n    }\n    serialize() {\n        return `${this.key} not in '${this.valueKey}'`;\n    }\n    keys() {\n        return this._negated.keys();\n    }\n    negate() {\n        return this._negated;\n    }\n}\nexport class ContextKeyNotEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            if (value) {\n                return ContextKeyNotExpr.create(key, negated);\n            }\n            return ContextKeyDefinedExpr.create(key, negated);\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 5 /* ContextKeyExprType.NotEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional !=\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) != this.value);\n    }\n    serialize() {\n        return `${this.key} != '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 3 /* ContextKeyExprType.Not */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!context.getValue(this.key));\n    }\n    serialize() {\n        return `!${this.key}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyDefinedExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nfunction withFloatOrStr(value, callback) {\n    if (typeof value === 'string') {\n        const n = parseFloat(value);\n        if (!isNaN(n)) {\n            value = n;\n        }\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n        return callback(value);\n    }\n    return ContextKeyFalseExpr.INSTANCE;\n}\nexport class ContextKeyGreaterExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 12 /* ContextKeyExprType.Greater */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) > this.value);\n    }\n    serialize() {\n        return `${this.key} > ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyGreaterEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 13 /* ContextKeyExprType.GreaterEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) >= this.value);\n    }\n    serialize() {\n        return `${this.key} >= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 14 /* ContextKeyExprType.Smaller */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) < this.value);\n    }\n    serialize() {\n        return `${this.key} < ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 15 /* ContextKeyExprType.SmallerEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) <= this.value);\n    }\n    serialize() {\n        return `${this.key} <= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyRegexExpr {\n    static create(key, regexp) {\n        return new ContextKeyRegexExpr(key, regexp);\n    }\n    constructor(key, regexp) {\n        this.key = key;\n        this.regexp = regexp;\n        this.type = 7 /* ContextKeyExprType.Regex */;\n        this.negated = null;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.key < other.key) {\n            return -1;\n        }\n        if (this.key > other.key) {\n            return 1;\n        }\n        const thisSource = this.regexp ? this.regexp.source : '';\n        const otherSource = other.regexp ? other.regexp.source : '';\n        if (thisSource < otherSource) {\n            return -1;\n        }\n        if (thisSource > otherSource) {\n            return 1;\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            const thisSource = this.regexp ? this.regexp.source : '';\n            const otherSource = other.regexp ? other.regexp.source : '';\n            return (this.key === other.key && thisSource === otherSource);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const value = context.getValue(this.key);\n        return this.regexp ? this.regexp.test(value) : false;\n    }\n    serialize() {\n        const value = this.regexp\n            ? `/${this.regexp.source}/${this.regexp.flags}`\n            : '/invalid/';\n        return `${this.key} =~ ${value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotRegexExpr.create(this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotRegexExpr {\n    static create(actual) {\n        return new ContextKeyNotRegexExpr(actual);\n    }\n    constructor(_actual) {\n        this._actual = _actual;\n        this.type = 8 /* ContextKeyExprType.NotRegex */;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._actual.cmp(other._actual);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._actual.equals(other._actual);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._actual.evaluate(context);\n    }\n    serialize() {\n        return `!(${this._actual.serialize()})`;\n    }\n    keys() {\n        return this._actual.keys();\n    }\n    negate() {\n        return this._actual;\n    }\n}\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr) {\n    // Allocate array only if there is a difference\n    let newArr = null;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const newExpr = arr[i].substituteConstants();\n        if (arr[i] !== newExpr) {\n            // something has changed!\n            // allocate array on first difference\n            if (newArr === null) {\n                newArr = [];\n                for (let j = 0; j < i; j++) {\n                    newArr[j] = arr[j];\n                }\n            }\n        }\n        if (newArr !== null) {\n            newArr[i] = newExpr;\n        }\n    }\n    if (newArr === null) {\n        return arr;\n    }\n    return newArr;\n}\nexport class ContextKeyAndExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyAndExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 6 /* ContextKeyExprType.And */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyAndExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (!this.expr[i].evaluate(context)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        const expr = [];\n        let hasTrue = false;\n        for (const e of arr) {\n            if (!e) {\n                continue;\n            }\n            if (e.type === 1 /* ContextKeyExprType.True */) {\n                // anything && true ==> anything\n                hasTrue = true;\n                continue;\n            }\n            if (e.type === 0 /* ContextKeyExprType.False */) {\n                // anything && false ==> false\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            if (e.type === 6 /* ContextKeyExprType.And */) {\n                expr.push(...e.expr);\n                continue;\n            }\n            expr.push(e);\n        }\n        if (expr.length === 0 && hasTrue) {\n            return ContextKeyTrueExpr.INSTANCE;\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        expr.sort(cmp);\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // We must distribute any OR expression because we don't support parens\n        // OR extensions will be at the end (due to sorting rules)\n        while (expr.length > 1) {\n            const lastElement = expr[expr.length - 1];\n            if (lastElement.type !== 9 /* ContextKeyExprType.Or */) {\n                break;\n            }\n            // pop the last element\n            expr.pop();\n            // pop the second to last element\n            const secondToLastElement = expr.pop();\n            const isFinished = (expr.length === 0);\n            // distribute `lastElement` over `secondToLastElement`\n            const resultElement = ContextKeyOrExpr.create(lastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null, extraRedundantCheck)), null, isFinished);\n            if (resultElement) {\n                expr.push(resultElement);\n                expr.sort(cmp);\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve false AND expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A && !A case\n                        return ContextKeyFalseExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyAndExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' && ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyOrExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 9 /* ContextKeyExprType.Or */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyOrExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (this.expr[i].evaluate(context)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        let expr = [];\n        let hasFalse = false;\n        if (arr) {\n            for (let i = 0, len = arr.length; i < len; i++) {\n                const e = arr[i];\n                if (!e) {\n                    continue;\n                }\n                if (e.type === 0 /* ContextKeyExprType.False */) {\n                    // anything || false ==> anything\n                    hasFalse = true;\n                    continue;\n                }\n                if (e.type === 1 /* ContextKeyExprType.True */) {\n                    // anything || true ==> true\n                    return ContextKeyTrueExpr.INSTANCE;\n                }\n                if (e.type === 9 /* ContextKeyExprType.Or */) {\n                    expr = expr.concat(e.expr);\n                    continue;\n                }\n                expr.push(e);\n            }\n            if (expr.length === 0 && hasFalse) {\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            expr.sort(cmp);\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve true OR expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A || !A case\n                        return ContextKeyTrueExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyOrExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' || ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            // We don't support parens, so here we distribute the AND over the OR terminals\n            // We always take the first 2 AND pairs and distribute them\n            while (result.length > 1) {\n                const LEFT = result.shift();\n                const RIGHT = result.shift();\n                const all = [];\n                for (const left of getTerminals(LEFT)) {\n                    for (const right of getTerminals(RIGHT)) {\n                        all.push(ContextKeyAndExpr.create([left, right], null, false));\n                    }\n                }\n                result.unshift(ContextKeyOrExpr.create(all, null, false));\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class RawContextKey extends ContextKeyDefinedExpr {\n    static { this._info = []; }\n    static all() {\n        return RawContextKey._info.values();\n    }\n    constructor(key, defaultValue, metaOrHide) {\n        super(key, null);\n        this._defaultValue = defaultValue;\n        // collect all context keys into a central place\n        if (typeof metaOrHide === 'object') {\n            RawContextKey._info.push({ ...metaOrHide, key });\n        }\n        else if (metaOrHide !== true) {\n            RawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n        }\n    }\n    bindTo(target) {\n        return target.createKey(this.key, this._defaultValue);\n    }\n    getValue(target) {\n        return target.getContextKeyValue(this.key);\n    }\n    toNegated() {\n        return this.negate();\n    }\n    isEqualTo(value) {\n        return ContextKeyEqualsExpr.create(this.key, value);\n    }\n}\nexport const IContextKeyService = createDecorator('contextKeyService');\nfunction cmp1(key1, key2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    return 0;\n}\nfunction cmp2(key1, value1, key2, value2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    if (value1 < value2) {\n        return -1;\n    }\n    if (value1 > value2) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p, q) {\n    if (p.type === 0 /* ContextKeyExprType.False */ || q.type === 1 /* ContextKeyExprType.True */) {\n        // false implies anything\n        // anything implies true\n        return true;\n    }\n    if (p.type === 9 /* ContextKeyExprType.Or */) {\n        if (q.type === 9 /* ContextKeyExprType.Or */) {\n            // `a || b || c` can only imply something like `a || b || c || d`\n            return allElementsIncluded(p.expr, q.expr);\n        }\n        return false;\n    }\n    if (q.type === 9 /* ContextKeyExprType.Or */) {\n        for (const element of q.expr) {\n            if (implies(p, element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (p.type === 6 /* ContextKeyExprType.And */) {\n        if (q.type === 6 /* ContextKeyExprType.And */) {\n            // `a && b && c` implies `a && c`\n            return allElementsIncluded(q.expr, p.expr);\n        }\n        for (const element of p.expr) {\n            if (implies(element, q)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return p.equals(q);\n}\n/**\n * Returns true if all elements in `p` are also present in `q`.\n * The two arrays are assumed to be sorted\n */\nfunction allElementsIncluded(p, q) {\n    let pIndex = 0;\n    let qIndex = 0;\n    while (pIndex < p.length && qIndex < q.length) {\n        const cmp = p[pIndex].cmp(q[qIndex]);\n        if (cmp < 0) {\n            // an element from `p` is missing from `q`\n            return false;\n        }\n        else if (cmp === 0) {\n            pIndex++;\n            qIndex++;\n        }\n        else {\n            qIndex++;\n        }\n    }\n    return (pIndex === p.length);\n}\nfunction getTerminals(node) {\n    if (node.type === 9 /* ContextKeyExprType.Or */) {\n        return node.expr;\n    }\n    return [node];\n}\n","import { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ITreeSitterParserService = createDecorator('treeSitterParserService');\n","import { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ITextResourceConfigurationService = createDecorator('textResourceConfigurationService');\nexport const ITextResourcePropertiesService = createDecorator('textResourcePropertiesService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Lazy } from './lazy.js';\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = new Lazy(() => new Uint8Array(256));\nlet textDecoder;\nexport class VSBuffer {\n    /**\n     * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n     * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n     * which is not transferrable.\n     */\n    static wrap(actual) {\n        if (hasBuffer && !(Buffer.isBuffer(actual))) {\n            // https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n            // Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n            actual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n        }\n        return new VSBuffer(actual);\n    }\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.byteLength = this.buffer.byteLength;\n    }\n    toString() {\n        if (hasBuffer) {\n            return this.buffer.toString();\n        }\n        else {\n            if (!textDecoder) {\n                textDecoder = new TextDecoder();\n            }\n            return textDecoder.decode(this.buffer);\n        }\n    }\n}\nexport function readUInt16LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0));\n}\nexport function writeUInt16LE(destination, value, offset) {\n    destination[offset + 0] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 1] = (value & 0b11111111);\n}\nexport function readUInt32BE(source, offset) {\n    return (source[offset] * 2 ** 24\n        + source[offset + 1] * 2 ** 16\n        + source[offset + 2] * 2 ** 8\n        + source[offset + 3]);\n}\nexport function writeUInt32BE(destination, value, offset) {\n    destination[offset + 3] = value;\n    value = value >>> 8;\n    destination[offset + 2] = value;\n    value = value >>> 8;\n    destination[offset + 1] = value;\n    value = value >>> 8;\n    destination[offset] = value;\n}\nexport function readUInt8(source, offset) {\n    return source[offset];\n}\nexport function writeUInt8(destination, value, offset) {\n    destination[offset] = value;\n}\n","import { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ILogService = createDecorator('logService');\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Off\"] = 0] = \"Off\";\n    LogLevel[LogLevel[\"Trace\"] = 1] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 2] = \"Debug\";\n    LogLevel[LogLevel[\"Info\"] = 3] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 4] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 5] = \"Error\";\n})(LogLevel || (LogLevel = {}));\nexport const DEFAULT_LOG_LEVEL = LogLevel.Info;\nexport class AbstractLogger extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.level = DEFAULT_LOG_LEVEL;\n        this._onDidChangeLogLevel = this._register(new Emitter());\n        this.onDidChangeLogLevel = this._onDidChangeLogLevel.event;\n    }\n    setLevel(level) {\n        if (this.level !== level) {\n            this.level = level;\n            this._onDidChangeLogLevel.fire(this.level);\n        }\n    }\n    getLevel() {\n        return this.level;\n    }\n    checkLogLevel(level) {\n        return this.level !== LogLevel.Off && this.level <= level;\n    }\n}\nexport class ConsoleLogger extends AbstractLogger {\n    constructor(logLevel = DEFAULT_LOG_LEVEL, useColors = true) {\n        super();\n        this.useColors = useColors;\n        this.setLevel(logLevel);\n    }\n    trace(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Trace)) {\n            if (this.useColors) {\n                console.log('%cTRACE', 'color: #888', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    debug(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Debug)) {\n            if (this.useColors) {\n                console.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    info(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Info)) {\n            if (this.useColors) {\n                console.log('%c INFO', 'color: #33f', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    warn(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Warning)) {\n            if (this.useColors) {\n                console.log('%c WARN', 'color: #993', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    error(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Error)) {\n            if (this.useColors) {\n                console.log('%c  ERR', 'color: #f33', message, ...args);\n            }\n            else {\n                console.error(message, ...args);\n            }\n        }\n    }\n}\nexport class MultiplexLogger extends AbstractLogger {\n    constructor(loggers) {\n        super();\n        this.loggers = loggers;\n        if (loggers.length) {\n            this.setLevel(loggers[0].getLevel());\n        }\n    }\n    setLevel(level) {\n        for (const logger of this.loggers) {\n            logger.setLevel(level);\n        }\n        super.setLevel(level);\n    }\n    trace(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.trace(message, ...args);\n        }\n    }\n    debug(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.debug(message, ...args);\n        }\n    }\n    info(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.info(message, ...args);\n        }\n    }\n    warn(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.warn(message, ...args);\n        }\n    }\n    error(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.error(message, ...args);\n        }\n    }\n    dispose() {\n        for (const logger of this.loggers) {\n            logger.dispose();\n        }\n        super.dispose();\n    }\n}\nexport function LogLevelToString(logLevel) {\n    switch (logLevel) {\n        case LogLevel.Trace: return 'trace';\n        case LogLevel.Debug: return 'debug';\n        case LogLevel.Info: return 'info';\n        case LogLevel.Warning: return 'warn';\n        case LogLevel.Error: return 'error';\n        case LogLevel.Off: return 'off';\n    }\n}\n// Contexts\nexport const CONTEXT_LOG_LEVEL = new RawContextKey('logLevel', LogLevelToString(LogLevel.Info));\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { activeContrastBorder, editorBackground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight, editorWarningBackground } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\n/**\n * Definition of the editor colors\n */\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', null, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', { dark: '#282828', light: '#eeeeee', hcDark: '#f38518', hcLight: contrastBorder }, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', { dark: '#ffffff0b', light: '#fdff0033', hcDark: null, hcLight: null }, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'));\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'));\nexport const editorCursorForeground = registerColor('editorCursor.foreground', { dark: '#AEAFAD', light: Color.black, hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('caret', 'Color of the editor cursor.'));\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorMultiCursorPrimaryForeground = registerColor('editorMultiCursor.primary.foreground', editorCursorForeground, nls.localize('editorMultiCursorPrimaryForeground', 'Color of the primary editor cursor when multiple cursors are present.'));\nexport const editorMultiCursorPrimaryBackground = registerColor('editorMultiCursor.primary.background', editorCursorBackground, nls.localize('editorMultiCursorPrimaryBackground', 'The background color of the primary editor cursor when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorMultiCursorSecondaryForeground = registerColor('editorMultiCursor.secondary.foreground', editorCursorForeground, nls.localize('editorMultiCursorSecondaryForeground', 'Color of secondary editor cursors when multiple cursors are present.'));\nexport const editorMultiCursorSecondaryBackground = registerColor('editorMultiCursor.secondary.background', editorCursorBackground, nls.localize('editorMultiCursorSecondaryBackground', 'The background color of secondary editor cursors when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', { dark: '#e3e4e229', light: '#33333333', hcDark: '#e3e4e229', hcLight: '#CCCCCC' }, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', { dark: '#858585', light: '#237893', hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\nexport const deprecatedEditorIndentGuides = registerColor('editorIndentGuide.background', editorWhitespaces, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'), false, nls.localize('deprecatedEditorIndentGuides', '\\'editorIndentGuide.background\\' is deprecated. Use \\'editorIndentGuide.background1\\' instead.'));\nexport const deprecatedEditorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', editorWhitespaces, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'), false, nls.localize('deprecatedEditorActiveIndentGuide', '\\'editorIndentGuide.activeBackground\\' is deprecated. Use \\'editorIndentGuide.activeBackground1\\' instead.'));\nexport const editorIndentGuide1 = registerColor('editorIndentGuide.background1', deprecatedEditorIndentGuides, nls.localize('editorIndentGuides1', 'Color of the editor indentation guides (1).'));\nexport const editorIndentGuide2 = registerColor('editorIndentGuide.background2', '#00000000', nls.localize('editorIndentGuides2', 'Color of the editor indentation guides (2).'));\nexport const editorIndentGuide3 = registerColor('editorIndentGuide.background3', '#00000000', nls.localize('editorIndentGuides3', 'Color of the editor indentation guides (3).'));\nexport const editorIndentGuide4 = registerColor('editorIndentGuide.background4', '#00000000', nls.localize('editorIndentGuides4', 'Color of the editor indentation guides (4).'));\nexport const editorIndentGuide5 = registerColor('editorIndentGuide.background5', '#00000000', nls.localize('editorIndentGuides5', 'Color of the editor indentation guides (5).'));\nexport const editorIndentGuide6 = registerColor('editorIndentGuide.background6', '#00000000', nls.localize('editorIndentGuides6', 'Color of the editor indentation guides (6).'));\nexport const editorActiveIndentGuide1 = registerColor('editorIndentGuide.activeBackground1', deprecatedEditorActiveIndentGuides, nls.localize('editorActiveIndentGuide1', 'Color of the active editor indentation guides (1).'));\nexport const editorActiveIndentGuide2 = registerColor('editorIndentGuide.activeBackground2', '#00000000', nls.localize('editorActiveIndentGuide2', 'Color of the active editor indentation guides (2).'));\nexport const editorActiveIndentGuide3 = registerColor('editorIndentGuide.activeBackground3', '#00000000', nls.localize('editorActiveIndentGuide3', 'Color of the active editor indentation guides (3).'));\nexport const editorActiveIndentGuide4 = registerColor('editorIndentGuide.activeBackground4', '#00000000', nls.localize('editorActiveIndentGuide4', 'Color of the active editor indentation guides (4).'));\nexport const editorActiveIndentGuide5 = registerColor('editorIndentGuide.activeBackground5', '#00000000', nls.localize('editorActiveIndentGuide5', 'Color of the active editor indentation guides (5).'));\nexport const editorActiveIndentGuide6 = registerColor('editorIndentGuide.activeBackground6', '#00000000', nls.localize('editorActiveIndentGuide6', 'Color of the active editor indentation guides (6).'));\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', { dark: '#c6c6c6', light: '#0B216F', hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', deprecatedEditorActiveLineNumber, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport const editorDimmedLineNumber = registerColor('editorLineNumber.dimmedForeground', null, nls.localize('editorDimmedLineNumber', 'Color of the final editor line when editor.renderFinalNewline is set to dimmed.'));\nexport const editorRuler = registerColor('editorRuler.foreground', { dark: '#5A5A5A', light: Color.lightgrey, hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorRuler', 'Color of the editor rulers.'));\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', { dark: '#999999', light: '#919191', hcDark: '#999999', hcLight: '#292929' }, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', { dark: '#0064001a', light: '#0064001a', hcDark: '#0064001a', hcLight: '#0000' }, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', { dark: '#888', light: '#B9B9B9', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', { dark: '#7f7f7f4d', light: '#7f7f7f4d', hcDark: '#7f7f7f4d', hcLight: '#666666' }, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler.'));\nexport const editorGutter = registerColor('editorGutter.background', editorBackground, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: contrastBorder }, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', { dark: Color.fromHex('#000a'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\nexport const ghostTextBorder = registerColor('editorGhostText.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: Color.fromHex('#292929').transparent(0.8) }, nls.localize('editorGhostTextBorder', 'Border color of ghost text in the editor.'));\nexport const ghostTextForeground = registerColor('editorGhostText.foreground', { dark: Color.fromHex('#ffffff56'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('editorGhostTextForeground', 'Foreground color of the ghost text in the editor.'));\nexport const ghostTextBackground = registerColor('editorGhostText.background', null, nls.localize('editorGhostTextBackground', 'Background color of the ghost text in the editor.'));\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', rulerRangeDefault, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder }, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\nexport const editorBracketHighlightingForeground1 = registerColor('editorBracketHighlight.foreground1', { dark: '#FFD700', light: '#0431FAFF', hcDark: '#FFD700', hcLight: '#0431FAFF' }, nls.localize('editorBracketHighlightForeground1', 'Foreground color of brackets (1). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground2 = registerColor('editorBracketHighlight.foreground2', { dark: '#DA70D6', light: '#319331FF', hcDark: '#DA70D6', hcLight: '#319331FF' }, nls.localize('editorBracketHighlightForeground2', 'Foreground color of brackets (2). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground3 = registerColor('editorBracketHighlight.foreground3', { dark: '#179FFF', light: '#7B3814FF', hcDark: '#87CEFA', hcLight: '#7B3814FF' }, nls.localize('editorBracketHighlightForeground3', 'Foreground color of brackets (3). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground4 = registerColor('editorBracketHighlight.foreground4', '#00000000', nls.localize('editorBracketHighlightForeground4', 'Foreground color of brackets (4). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground5 = registerColor('editorBracketHighlight.foreground5', '#00000000', nls.localize('editorBracketHighlightForeground5', 'Foreground color of brackets (5). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground6 = registerColor('editorBracketHighlight.foreground6', '#00000000', nls.localize('editorBracketHighlightForeground6', 'Foreground color of brackets (6). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingUnexpectedBracketForeground = registerColor('editorBracketHighlight.unexpectedBracket.foreground', { dark: new Color(new RGBA(255, 18, 18, 0.8)), light: new Color(new RGBA(255, 18, 18, 0.8)), hcDark: 'new Color(new RGBA(255, 50, 50, 1))', hcLight: '#B5200D' }, nls.localize('editorBracketHighlightUnexpectedBracketForeground', 'Foreground color of unexpected brackets.'));\nexport const editorBracketPairGuideBackground1 = registerColor('editorBracketPairGuide.background1', '#00000000', nls.localize('editorBracketPairGuide.background1', 'Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground2 = registerColor('editorBracketPairGuide.background2', '#00000000', nls.localize('editorBracketPairGuide.background2', 'Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground3 = registerColor('editorBracketPairGuide.background3', '#00000000', nls.localize('editorBracketPairGuide.background3', 'Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground4 = registerColor('editorBracketPairGuide.background4', '#00000000', nls.localize('editorBracketPairGuide.background4', 'Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground5 = registerColor('editorBracketPairGuide.background5', '#00000000', nls.localize('editorBracketPairGuide.background5', 'Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground6 = registerColor('editorBracketPairGuide.background6', '#00000000', nls.localize('editorBracketPairGuide.background6', 'Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground1 = registerColor('editorBracketPairGuide.activeBackground1', '#00000000', nls.localize('editorBracketPairGuide.activeBackground1', 'Background color of active bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground2 = registerColor('editorBracketPairGuide.activeBackground2', '#00000000', nls.localize('editorBracketPairGuide.activeBackground2', 'Background color of active bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground3 = registerColor('editorBracketPairGuide.activeBackground3', '#00000000', nls.localize('editorBracketPairGuide.activeBackground3', 'Background color of active bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground4 = registerColor('editorBracketPairGuide.activeBackground4', '#00000000', nls.localize('editorBracketPairGuide.activeBackground4', 'Background color of active bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground5 = registerColor('editorBracketPairGuide.activeBackground5', '#00000000', nls.localize('editorBracketPairGuide.activeBackground5', 'Background color of active bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground6 = registerColor('editorBracketPairGuide.activeBackground6', '#00000000', nls.localize('editorBracketPairGuide.activeBackground6', 'Background color of active bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorUnicodeHighlightBorder = registerColor('editorUnicodeHighlight.border', editorWarningForeground, nls.localize('editorUnicodeHighlight.border', 'Border color used to highlight unicode characters.'));\nexport const editorUnicodeHighlightBackground = registerColor('editorUnicodeHighlight.background', editorWarningBackground, nls.localize('editorUnicodeHighlight.background', 'Background color used to highlight unicode characters.'));\n// contains all color rules that used to defined in editor/browser/widget/editor.css\nregisterThemingParticipant((theme, collector) => {\n    const background = theme.getColor(editorBackground);\n    const lineHighlight = theme.getColor(editorLineHighlight);\n    const imeBackground = (lineHighlight && !lineHighlight.isTransparent() ? lineHighlight : background);\n    if (imeBackground) {\n        collector.addRule(`.monaco-editor .inputarea.ime-input { background-color: ${imeBackground}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport * as platform from '../../registry/common/platform.js';\nexport const Extensions = {\n    JSONContribution: 'base.contributions.json'\n};\nfunction normalizeId(id) {\n    if (id.length > 0 && id.charAt(id.length - 1) === '#') {\n        return id.substring(0, id.length - 1);\n    }\n    return id;\n}\nclass JSONContributionRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.schemasById = {};\n    }\n    registerSchema(uri, unresolvedSchemaContent) {\n        this.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n        this._onDidChangeSchema.fire(uri);\n    }\n    notifySchemaChanged(uri) {\n        this._onDidChangeSchema.fire(uri);\n    }\n}\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ILanguageFeaturesService = createDecorator('ILanguageFeaturesService');\n","export const Mimes = Object.freeze({\n    text: 'text/plain',\n    binary: 'application/octet-stream',\n    unknown: 'application/unknown',\n    markdown: 'text/markdown',\n    latex: 'text/latex',\n    uriList: 'text/uri-list',\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { Mimes } from '../../../base/common/mime.js';\nimport { Extensions as ConfigurationExtensions } from '../../../platform/configuration/common/configurationRegistry.js';\n// Define extension point ids\nexport const Extensions = {\n    ModesRegistry: 'editor.modesRegistry'\n};\nexport class EditorModesRegistry {\n    constructor() {\n        this._onDidChangeLanguages = new Emitter();\n        this.onDidChangeLanguages = this._onDidChangeLanguages.event;\n        this._languages = [];\n    }\n    registerLanguage(def) {\n        this._languages.push(def);\n        this._onDidChangeLanguages.fire(undefined);\n        return {\n            dispose: () => {\n                for (let i = 0, len = this._languages.length; i < len; i++) {\n                    if (this._languages[i] === def) {\n                        this._languages.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    getLanguages() {\n        return this._languages;\n    }\n}\nexport const ModesRegistry = new EditorModesRegistry();\nRegistry.add(Extensions.ModesRegistry, ModesRegistry);\nexport const PLAINTEXT_LANGUAGE_ID = 'plaintext';\nexport const PLAINTEXT_EXTENSION = '.txt';\nModesRegistry.registerLanguage({\n    id: PLAINTEXT_LANGUAGE_ID,\n    extensions: [PLAINTEXT_EXTENSION],\n    aliases: [nls.localize('plainText.alias', \"Plain Text\"), 'text'],\n    mimetypes: [Mimes.text]\n});\nRegistry.as(ConfigurationExtensions.Configuration)\n    .registerDefaultConfigurations([{\n        overrides: {\n            '[plaintext]': {\n                'editor.unicodeHighlight.ambiguousCharacters': false,\n                'editor.unicodeHighlight.invisibleCharacters': false\n            }\n        }\n    }]);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { parse } from '../../../base/common/glob.js';\nimport { Mimes } from '../../../base/common/mime.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { basename, posix } from '../../../base/common/path.js';\nimport { DataUri } from '../../../base/common/resources.js';\nimport { startsWithUTF8BOM } from '../../../base/common/strings.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nlet registeredAssociations = [];\nlet nonUserRegisteredAssociations = [];\nlet userRegisteredAssociations = [];\n/**\n * Associate a language to the registry (platform).\n * * **NOTE**: This association will lose over associations registered using `registerConfiguredLanguageAssociation`.\n * * **NOTE**: Use `clearPlatformLanguageAssociations` to remove all associations registered using this function.\n */\nexport function registerPlatformLanguageAssociation(association, warnOnOverwrite = false) {\n    _registerLanguageAssociation(association, false, warnOnOverwrite);\n}\nfunction _registerLanguageAssociation(association, userConfigured, warnOnOverwrite) {\n    // Register\n    const associationItem = toLanguageAssociationItem(association, userConfigured);\n    registeredAssociations.push(associationItem);\n    if (!associationItem.userConfigured) {\n        nonUserRegisteredAssociations.push(associationItem);\n    }\n    else {\n        userRegisteredAssociations.push(associationItem);\n    }\n    // Check for conflicts unless this is a user configured association\n    if (warnOnOverwrite && !associationItem.userConfigured) {\n        registeredAssociations.forEach(a => {\n            if (a.mime === associationItem.mime || a.userConfigured) {\n                return; // same mime or userConfigured is ok\n            }\n            if (associationItem.extension && a.extension === associationItem.extension) {\n                console.warn(`Overwriting extension <<${associationItem.extension}>> to now point to mime <<${associationItem.mime}>>`);\n            }\n            if (associationItem.filename && a.filename === associationItem.filename) {\n                console.warn(`Overwriting filename <<${associationItem.filename}>> to now point to mime <<${associationItem.mime}>>`);\n            }\n            if (associationItem.filepattern && a.filepattern === associationItem.filepattern) {\n                console.warn(`Overwriting filepattern <<${associationItem.filepattern}>> to now point to mime <<${associationItem.mime}>>`);\n            }\n            if (associationItem.firstline && a.firstline === associationItem.firstline) {\n                console.warn(`Overwriting firstline <<${associationItem.firstline}>> to now point to mime <<${associationItem.mime}>>`);\n            }\n        });\n    }\n}\nfunction toLanguageAssociationItem(association, userConfigured) {\n    return {\n        id: association.id,\n        mime: association.mime,\n        filename: association.filename,\n        extension: association.extension,\n        filepattern: association.filepattern,\n        firstline: association.firstline,\n        userConfigured: userConfigured,\n        filenameLowercase: association.filename ? association.filename.toLowerCase() : undefined,\n        extensionLowercase: association.extension ? association.extension.toLowerCase() : undefined,\n        filepatternLowercase: association.filepattern ? parse(association.filepattern.toLowerCase()) : undefined,\n        filepatternOnPath: association.filepattern ? association.filepattern.indexOf(posix.sep) >= 0 : false\n    };\n}\n/**\n * Clear language associations from the registry (platform).\n */\nexport function clearPlatformLanguageAssociations() {\n    registeredAssociations = registeredAssociations.filter(a => a.userConfigured);\n    nonUserRegisteredAssociations = [];\n}\n/**\n * @see `getMimeTypes`\n */\nexport function getLanguageIds(resource, firstLine) {\n    return getAssociations(resource, firstLine).map(item => item.id);\n}\nfunction getAssociations(resource, firstLine) {\n    let path;\n    if (resource) {\n        switch (resource.scheme) {\n            case Schemas.file:\n                path = resource.fsPath;\n                break;\n            case Schemas.data: {\n                const metadata = DataUri.parseMetaData(resource);\n                path = metadata.get(DataUri.META_DATA_LABEL);\n                break;\n            }\n            case Schemas.vscodeNotebookCell:\n                // File path not relevant for language detection of cell\n                path = undefined;\n                break;\n            default:\n                path = resource.path;\n        }\n    }\n    if (!path) {\n        return [{ id: 'unknown', mime: Mimes.unknown }];\n    }\n    path = path.toLowerCase();\n    const filename = basename(path);\n    // 1.) User configured mappings have highest priority\n    const configuredLanguage = getAssociationByPath(path, filename, userRegisteredAssociations);\n    if (configuredLanguage) {\n        return [configuredLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n    }\n    // 2.) Registered mappings have middle priority\n    const registeredLanguage = getAssociationByPath(path, filename, nonUserRegisteredAssociations);\n    if (registeredLanguage) {\n        return [registeredLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n    }\n    // 3.) Firstline has lowest priority\n    if (firstLine) {\n        const firstlineLanguage = getAssociationByFirstline(firstLine);\n        if (firstlineLanguage) {\n            return [firstlineLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n        }\n    }\n    return [{ id: 'unknown', mime: Mimes.unknown }];\n}\nfunction getAssociationByPath(path, filename, associations) {\n    let filenameMatch = undefined;\n    let patternMatch = undefined;\n    let extensionMatch = undefined;\n    // We want to prioritize associations based on the order they are registered so that the last registered\n    // association wins over all other. This is for https://github.com/microsoft/vscode/issues/20074\n    for (let i = associations.length - 1; i >= 0; i--) {\n        const association = associations[i];\n        // First exact name match\n        if (filename === association.filenameLowercase) {\n            filenameMatch = association;\n            break; // take it!\n        }\n        // Longest pattern match\n        if (association.filepattern) {\n            if (!patternMatch || association.filepattern.length > patternMatch.filepattern.length) {\n                const target = association.filepatternOnPath ? path : filename; // match on full path if pattern contains path separator\n                if (association.filepatternLowercase?.(target)) {\n                    patternMatch = association;\n                }\n            }\n        }\n        // Longest extension match\n        if (association.extension) {\n            if (!extensionMatch || association.extension.length > extensionMatch.extension.length) {\n                if (filename.endsWith(association.extensionLowercase)) {\n                    extensionMatch = association;\n                }\n            }\n        }\n    }\n    // 1.) Exact name match has second highest priority\n    if (filenameMatch) {\n        return filenameMatch;\n    }\n    // 2.) Match on pattern\n    if (patternMatch) {\n        return patternMatch;\n    }\n    // 3.) Match on extension comes next\n    if (extensionMatch) {\n        return extensionMatch;\n    }\n    return undefined;\n}\nfunction getAssociationByFirstline(firstLine) {\n    if (startsWithUTF8BOM(firstLine)) {\n        firstLine = firstLine.substr(1);\n    }\n    if (firstLine.length > 0) {\n        // We want to prioritize associations based on the order they are registered so that the last registered\n        // association wins over all other. This is for https://github.com/microsoft/vscode/issues/20074\n        for (let i = registeredAssociations.length - 1; i >= 0; i--) {\n            const association = registeredAssociations[i];\n            if (!association.firstline) {\n                continue;\n            }\n            const matches = firstLine.match(association.firstline);\n            if (matches && matches.length > 0) {\n                return association;\n            }\n        }\n    }\n    return undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const IModelService = createDecorator('modelService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { regExpLeadsToEndlessLoop } from '../../../base/common/strings.js';\nimport { clearPlatformLanguageAssociations, getLanguageIds, registerPlatformLanguageAssociation } from './languagesAssociations.js';\nimport { ModesRegistry, PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst NULL_LANGUAGE_ID = 'vs.editor.nullLanguage';\nexport class LanguageIdCodec {\n    constructor() {\n        this._languageIdToLanguage = [];\n        this._languageToLanguageId = new Map();\n        this._register(NULL_LANGUAGE_ID, 0 /* LanguageId.Null */);\n        this._register(PLAINTEXT_LANGUAGE_ID, 1 /* LanguageId.PlainText */);\n        this._nextLanguageId = 2;\n    }\n    _register(language, languageId) {\n        this._languageIdToLanguage[languageId] = language;\n        this._languageToLanguageId.set(language, languageId);\n    }\n    register(language) {\n        if (this._languageToLanguageId.has(language)) {\n            return;\n        }\n        const languageId = this._nextLanguageId++;\n        this._register(language, languageId);\n    }\n    encodeLanguageId(languageId) {\n        return this._languageToLanguageId.get(languageId) || 0 /* LanguageId.Null */;\n    }\n    decodeLanguageId(languageId) {\n        return this._languageIdToLanguage[languageId] || NULL_LANGUAGE_ID;\n    }\n}\nexport class LanguagesRegistry extends Disposable {\n    static { this.instanceCount = 0; }\n    constructor(useModesRegistry = true, warnOnOverwrite = false) {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        LanguagesRegistry.instanceCount++;\n        this._warnOnOverwrite = warnOnOverwrite;\n        this.languageIdCodec = new LanguageIdCodec();\n        this._dynamicLanguages = [];\n        this._languages = {};\n        this._mimeTypesMap = {};\n        this._nameMap = {};\n        this._lowercaseNameMap = {};\n        if (useModesRegistry) {\n            this._initializeFromRegistry();\n            this._register(ModesRegistry.onDidChangeLanguages((m) => {\n                this._initializeFromRegistry();\n            }));\n        }\n    }\n    dispose() {\n        LanguagesRegistry.instanceCount--;\n        super.dispose();\n    }\n    _initializeFromRegistry() {\n        this._languages = {};\n        this._mimeTypesMap = {};\n        this._nameMap = {};\n        this._lowercaseNameMap = {};\n        clearPlatformLanguageAssociations();\n        const desc = [].concat(ModesRegistry.getLanguages()).concat(this._dynamicLanguages);\n        this._registerLanguages(desc);\n    }\n    _registerLanguages(desc) {\n        for (const d of desc) {\n            this._registerLanguage(d);\n        }\n        // Rebuild fast path maps\n        this._mimeTypesMap = {};\n        this._nameMap = {};\n        this._lowercaseNameMap = {};\n        Object.keys(this._languages).forEach((langId) => {\n            const language = this._languages[langId];\n            if (language.name) {\n                this._nameMap[language.name] = language.identifier;\n            }\n            language.aliases.forEach((alias) => {\n                this._lowercaseNameMap[alias.toLowerCase()] = language.identifier;\n            });\n            language.mimetypes.forEach((mimetype) => {\n                this._mimeTypesMap[mimetype] = language.identifier;\n            });\n        });\n        Registry.as(Extensions.Configuration).registerOverrideIdentifiers(this.getRegisteredLanguageIds());\n        this._onDidChange.fire();\n    }\n    _registerLanguage(lang) {\n        const langId = lang.id;\n        let resolvedLanguage;\n        if (hasOwnProperty.call(this._languages, langId)) {\n            resolvedLanguage = this._languages[langId];\n        }\n        else {\n            this.languageIdCodec.register(langId);\n            resolvedLanguage = {\n                identifier: langId,\n                name: null,\n                mimetypes: [],\n                aliases: [],\n                extensions: [],\n                filenames: [],\n                configurationFiles: [],\n                icons: []\n            };\n            this._languages[langId] = resolvedLanguage;\n        }\n        this._mergeLanguage(resolvedLanguage, lang);\n    }\n    _mergeLanguage(resolvedLanguage, lang) {\n        const langId = lang.id;\n        let primaryMime = null;\n        if (Array.isArray(lang.mimetypes) && lang.mimetypes.length > 0) {\n            resolvedLanguage.mimetypes.push(...lang.mimetypes);\n            primaryMime = lang.mimetypes[0];\n        }\n        if (!primaryMime) {\n            primaryMime = `text/x-${langId}`;\n            resolvedLanguage.mimetypes.push(primaryMime);\n        }\n        if (Array.isArray(lang.extensions)) {\n            if (lang.configuration) {\n                // insert first as this appears to be the 'primary' language definition\n                resolvedLanguage.extensions = lang.extensions.concat(resolvedLanguage.extensions);\n            }\n            else {\n                resolvedLanguage.extensions = resolvedLanguage.extensions.concat(lang.extensions);\n            }\n            for (const extension of lang.extensions) {\n                registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, extension: extension }, this._warnOnOverwrite);\n            }\n        }\n        if (Array.isArray(lang.filenames)) {\n            for (const filename of lang.filenames) {\n                registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, filename: filename }, this._warnOnOverwrite);\n                resolvedLanguage.filenames.push(filename);\n            }\n        }\n        if (Array.isArray(lang.filenamePatterns)) {\n            for (const filenamePattern of lang.filenamePatterns) {\n                registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, filepattern: filenamePattern }, this._warnOnOverwrite);\n            }\n        }\n        if (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\n            let firstLineRegexStr = lang.firstLine;\n            if (firstLineRegexStr.charAt(0) !== '^') {\n                firstLineRegexStr = '^' + firstLineRegexStr;\n            }\n            try {\n                const firstLineRegex = new RegExp(firstLineRegexStr);\n                if (!regExpLeadsToEndlessLoop(firstLineRegex)) {\n                    registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, firstline: firstLineRegex }, this._warnOnOverwrite);\n                }\n            }\n            catch (err) {\n                // Most likely, the regex was bad\n                console.warn(`[${lang.id}]: Invalid regular expression \\`${firstLineRegexStr}\\`: `, err);\n            }\n        }\n        resolvedLanguage.aliases.push(langId);\n        let langAliases = null;\n        if (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\n            if (lang.aliases.length === 0) {\n                // signal that this language should not get a name\n                langAliases = [null];\n            }\n            else {\n                langAliases = lang.aliases;\n            }\n        }\n        if (langAliases !== null) {\n            for (const langAlias of langAliases) {\n                if (!langAlias || langAlias.length === 0) {\n                    continue;\n                }\n                resolvedLanguage.aliases.push(langAlias);\n            }\n        }\n        const containsAliases = (langAliases !== null && langAliases.length > 0);\n        if (containsAliases && langAliases[0] === null) {\n            // signal that this language should not get a name\n        }\n        else {\n            const bestName = (containsAliases ? langAliases[0] : null) || langId;\n            if (containsAliases || !resolvedLanguage.name) {\n                resolvedLanguage.name = bestName;\n            }\n        }\n        if (lang.configuration) {\n            resolvedLanguage.configurationFiles.push(lang.configuration);\n        }\n        if (lang.icon) {\n            resolvedLanguage.icons.push(lang.icon);\n        }\n    }\n    isRegisteredLanguageId(languageId) {\n        if (!languageId) {\n            return false;\n        }\n        return hasOwnProperty.call(this._languages, languageId);\n    }\n    getRegisteredLanguageIds() {\n        return Object.keys(this._languages);\n    }\n    getLanguageIdByLanguageName(languageName) {\n        const languageNameLower = languageName.toLowerCase();\n        if (!hasOwnProperty.call(this._lowercaseNameMap, languageNameLower)) {\n            return null;\n        }\n        return this._lowercaseNameMap[languageNameLower];\n    }\n    getLanguageIdByMimeType(mimeType) {\n        if (!mimeType) {\n            return null;\n        }\n        if (hasOwnProperty.call(this._mimeTypesMap, mimeType)) {\n            return this._mimeTypesMap[mimeType];\n        }\n        return null;\n    }\n    guessLanguageIdByFilepathOrFirstLine(resource, firstLine) {\n        if (!resource && !firstLine) {\n            return [];\n        }\n        return getLanguageIds(resource, firstLine);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n    constructor() {\n        this.data = new Map();\n    }\n    add(id, data) {\n        Assert.ok(Types.isString(id));\n        Assert.ok(Types.isObject(data));\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n        this.data.set(id, data);\n    }\n    as(id) {\n        return this.data.get(id) || null;\n    }\n}\nexport const Registry = new RegistryImpl();\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\nexport const foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport const disabledForeground = registerColor('disabledForeground', { dark: '#CCCCCC80', light: '#61616180', hcDark: '#A5A5A5', hcLight: '#7F7F7F' }, nls.localize('disabledForeground', \"Overall foreground for disabled elements. This color is only used if not overridden by a component.\"));\nexport const errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport const descriptionForeground = registerColor('descriptionForeground', { light: '#717171', dark: transparent(foreground, 0.7), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\nexport const iconForeground = registerColor('icon.foreground', { dark: '#C5C5C5', light: '#424242', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('iconForeground', \"The default color for icons in the workbench.\"));\nexport const focusBorder = registerColor('focusBorder', { dark: '#007FD4', light: '#0090F1', hcDark: '#F38518', hcLight: '#006BBD' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport const contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hcDark: '#6FC3DF', hcLight: '#0F4A85' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport const activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport const selectionBackground = registerColor('selection.background', null, nls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n// ------ text link\nexport const textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hcDark: '#21A6FF', hcLight: '#0F4A85' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport const textLinkActiveForeground = registerColor('textLink.activeForeground', { light: '#006AB1', dark: '#3794FF', hcDark: '#21A6FF', hcLight: '#0F4A85' }, nls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\nexport const textSeparatorForeground = registerColor('textSeparator.foreground', { light: '#0000002e', dark: '#ffffff2e', hcDark: Color.black, hcLight: '#292929' }, nls.localize('textSeparatorForeground', \"Color for text separators.\"));\n// ------ text preformat\nexport const textPreformatForeground = registerColor('textPreformat.foreground', { light: '#A31515', dark: '#D7BA7D', hcDark: '#000000', hcLight: '#FFFFFF' }, nls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\nexport const textPreformatBackground = registerColor('textPreformat.background', { light: '#0000001A', dark: '#FFFFFF1A', hcDark: '#FFFFFF', hcLight: '#09345f' }, nls.localize('textPreformatBackground', \"Background color for preformatted text segments.\"));\n// ------ text block quote\nexport const textBlockQuoteBackground = registerColor('textBlockQuote.background', { light: '#f2f2f2', dark: '#222222', hcDark: null, hcLight: '#F2F2F2' }, nls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\nexport const textBlockQuoteBorder = registerColor('textBlockQuote.border', { light: '#007acc80', dark: '#007acc80', hcDark: Color.white, hcLight: '#292929' }, nls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\n// ------ text code block\nexport const textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hcDark: Color.black, hcLight: '#F2F2F2' }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n// Import the colors we need\nimport { contrastBorder, focusBorder } from './baseColors.js';\n// ----- sash\nexport const sashHoverBorder = registerColor('sash.hoverBorder', focusBorder, nls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n// ----- badge\nexport const badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hcDark: Color.black, hcLight: '#0F4A85' }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport const badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hcDark: Color.white, hcLight: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\n// ----- scrollbar\nexport const scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hcDark: null, hcLight: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hcDark: transparent(contrastBorder, 0.6), hcLight: transparent(contrastBorder, 0.4) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hcDark: transparent(contrastBorder, 0.8), hcLight: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\n// ----- progress bar\nexport const progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent, lessProminent, darken, lighten } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, activeContrastBorder } from './baseColors.js';\nimport { scrollbarShadow, badgeBackground } from './miscColors.js';\n// ----- editor\nexport const editorBackground = registerColor('editor.background', { light: '#ffffff', dark: '#1E1E1E', hcDark: Color.black, hcLight: Color.white }, nls.localize('editorBackground', \"Editor background color.\"));\nexport const editorForeground = registerColor('editor.foreground', { light: '#333333', dark: '#BBBBBB', hcDark: Color.white, hcLight: foreground }, nls.localize('editorForeground', \"Editor default foreground color.\"));\nexport const editorStickyScrollBackground = registerColor('editorStickyScroll.background', editorBackground, nls.localize('editorStickyScrollBackground', \"Background color of sticky scroll in the editor\"));\nexport const editorStickyScrollHoverBackground = registerColor('editorStickyScrollHover.background', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('editorStickyScrollHoverBackground', \"Background color of sticky scroll on hover in the editor\"));\nexport const editorStickyScrollBorder = registerColor('editorStickyScroll.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorStickyScrollBorder', \"Border color of sticky scroll in the editor\"));\nexport const editorStickyScrollShadow = registerColor('editorStickyScroll.shadow', scrollbarShadow, nls.localize('editorStickyScrollShadow', \" Shadow color of sticky scroll in the editor\"));\nexport const editorWidgetBackground = registerColor('editorWidget.background', { dark: '#252526', light: '#F3F3F3', hcDark: '#0C141F', hcLight: Color.white }, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\nexport const editorWidgetForeground = registerColor('editorWidget.foreground', foreground, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\nexport const editorWidgetBorder = registerColor('editorWidget.border', { dark: '#454545', light: '#C8C8C8', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\nexport const editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', null, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\nexport const editorErrorBackground = registerColor('editorError.background', null, nls.localize('editorError.background', 'Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorErrorForeground = registerColor('editorError.foreground', { dark: '#F14C4C', light: '#E51400', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\nexport const editorErrorBorder = registerColor('editorError.border', { dark: null, light: null, hcDark: Color.fromHex('#E47777').transparent(0.8), hcLight: '#B5200D' }, nls.localize('errorBorder', 'If set, color of double underlines for errors in the editor.'));\nexport const editorWarningBackground = registerColor('editorWarning.background', null, nls.localize('editorWarning.background', 'Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorWarningForeground = registerColor('editorWarning.foreground', { dark: '#CCA700', light: '#BF8803', hcDark: '#FFD370', hcLight: '#895503' }, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\nexport const editorWarningBorder = registerColor('editorWarning.border', { dark: null, light: null, hcDark: Color.fromHex('#FFCC00').transparent(0.8), hcLight: Color.fromHex('#FFCC00').transparent(0.8) }, nls.localize('warningBorder', 'If set, color of double underlines for warnings in the editor.'));\nexport const editorInfoBackground = registerColor('editorInfo.background', null, nls.localize('editorInfo.background', 'Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorInfoForeground = registerColor('editorInfo.foreground', { dark: '#3794FF', light: '#1a85ff', hcDark: '#3794FF', hcLight: '#1a85ff' }, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\nexport const editorInfoBorder = registerColor('editorInfo.border', { dark: null, light: null, hcDark: Color.fromHex('#3794FF').transparent(0.8), hcLight: '#292929' }, nls.localize('infoBorder', 'If set, color of double underlines for infos in the editor.'));\nexport const editorHintForeground = registerColor('editorHint.foreground', { dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hcDark: null, hcLight: null }, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\nexport const editorHintBorder = registerColor('editorHint.border', { dark: null, light: null, hcDark: Color.fromHex('#eeeeee').transparent(0.8), hcLight: '#292929' }, nls.localize('hintBorder', 'If set, color of double underlines for hints in the editor.'));\nexport const editorActiveLinkForeground = registerColor('editorLink.activeForeground', { dark: '#4E94CE', light: Color.blue, hcDark: Color.cyan, hcLight: '#292929' }, nls.localize('activeLinkForeground', 'Color of active links.'));\n// ----- editor selection\nexport const editorSelectionBackground = registerColor('editor.selectionBackground', { light: '#ADD6FF', dark: '#264F78', hcDark: '#f3f518', hcLight: '#0F4A85' }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nexport const editorSelectionForeground = registerColor('editor.selectionForeground', { light: null, dark: null, hcDark: '#000000', hcLight: Color.white }, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\nexport const editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', { light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hcDark: transparent(editorSelectionBackground, 0.7), hcLight: transparent(editorSelectionBackground, 0.5) }, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', { light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hcDark: null, hcLight: null }, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n// ----- editor find\nexport const editorFindMatch = registerColor('editor.findMatchBackground', { light: '#A8AC94', dark: '#515C6A', hcDark: null, hcLight: null }, nls.localize('editorFindMatch', \"Color of the current search match.\"));\nexport const editorFindMatchForeground = registerColor('editor.findMatchForeground', null, nls.localize('editorFindMatchForeground', \"Text color of the current search match.\"));\nexport const editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', { light: '#EA5C0055', dark: '#EA5C0055', hcDark: null, hcLight: null }, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchHighlightForeground = registerColor('editor.findMatchHighlightForeground', null, nls.localize('findMatchHighlightForeground', \"Foreground color of the other search matches.\"), true);\nexport const editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', { dark: '#3a3d4166', light: '#b4b4b44d', hcDark: null, hcLight: null }, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchBorder = registerColor('editor.findMatchBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\nexport const editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\nexport const editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', { dark: null, light: null, hcDark: transparent(activeContrastBorder, 0.4), hcLight: transparent(activeContrastBorder, 0.4) }, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n// ----- editor hover\nexport const editorHoverHighlight = registerColor('editor.hoverHighlightBackground', { light: '#ADD6FF26', dark: '#264f7840', hcDark: '#ADD6FF26', hcLight: null }, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorHoverBackground = registerColor('editorHoverWidget.background', editorWidgetBackground, nls.localize('hoverBackground', 'Background color of the editor hover.'));\nexport const editorHoverForeground = registerColor('editorHoverWidget.foreground', editorWidgetForeground, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\nexport const editorHoverBorder = registerColor('editorHoverWidget.border', editorWidgetBorder, nls.localize('hoverBorder', 'Border color of the editor hover.'));\nexport const editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', { dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n// ----- editor inlay hint\nexport const editorInlayHintForeground = registerColor('editorInlayHint.foreground', { dark: '#969696', light: '#969696', hcDark: Color.white, hcLight: Color.black }, nls.localize('editorInlayHintForeground', 'Foreground color of inline hints'));\nexport const editorInlayHintBackground = registerColor('editorInlayHint.background', { dark: transparent(badgeBackground, .10), light: transparent(badgeBackground, .10), hcDark: transparent(Color.white, .10), hcLight: transparent(badgeBackground, .10) }, nls.localize('editorInlayHintBackground', 'Background color of inline hints'));\nexport const editorInlayHintTypeForeground = registerColor('editorInlayHint.typeForeground', editorInlayHintForeground, nls.localize('editorInlayHintForegroundTypes', 'Foreground color of inline hints for types'));\nexport const editorInlayHintTypeBackground = registerColor('editorInlayHint.typeBackground', editorInlayHintBackground, nls.localize('editorInlayHintBackgroundTypes', 'Background color of inline hints for types'));\nexport const editorInlayHintParameterForeground = registerColor('editorInlayHint.parameterForeground', editorInlayHintForeground, nls.localize('editorInlayHintForegroundParameter', 'Foreground color of inline hints for parameters'));\nexport const editorInlayHintParameterBackground = registerColor('editorInlayHint.parameterBackground', editorInlayHintBackground, nls.localize('editorInlayHintBackgroundParameter', 'Background color of inline hints for parameters'));\n// ----- editor lightbulb\nexport const editorLightBulbForeground = registerColor('editorLightBulb.foreground', { dark: '#FFCC00', light: '#DDB100', hcDark: '#FFCC00', hcLight: '#007ACC' }, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\nexport const editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', { dark: '#75BEFF', light: '#007ACC', hcDark: '#75BEFF', hcLight: '#007ACC' }, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\nexport const editorLightBulbAiForeground = registerColor('editorLightBulbAi.foreground', editorLightBulbForeground, nls.localize('editorLightBulbAiForeground', \"The color used for the lightbulb AI icon.\"));\n// ----- editor snippet\nexport const snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', { dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hcDark: new Color(new RGBA(124, 124, 124, 0.3)), hcLight: new Color(new RGBA(10, 50, 100, 0.2)) }, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\nexport const snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', null, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\nexport const snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', null, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\nexport const snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', { dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hcDark: '#525252', hcLight: '#292929' }, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final tabstop of a snippet.\"));\n// ----- diff editor\nexport const defaultInsertColor = new Color(new RGBA(155, 185, 85, .2));\nexport const defaultRemoveColor = new Color(new RGBA(255, 0, 0, .2));\nexport const diffInserted = registerColor('diffEditor.insertedTextBackground', { dark: '#9ccc2c33', light: '#9ccc2c40', hcDark: null, hcLight: null }, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemoved = registerColor('diffEditor.removedTextBackground', { dark: '#ff000033', light: '#ff000033', hcDark: null, hcLight: null }, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLine = registerColor('diffEditor.insertedLineBackground', { dark: defaultInsertColor, light: defaultInsertColor, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLines', 'Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemovedLine = registerColor('diffEditor.removedLineBackground', { dark: defaultRemoveColor, light: defaultRemoveColor, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLines', 'Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLineGutter = registerColor('diffEditorGutter.insertedLineBackground', null, nls.localize('diffEditorInsertedLineGutter', 'Background color for the margin where lines got inserted.'));\nexport const diffRemovedLineGutter = registerColor('diffEditorGutter.removedLineBackground', null, nls.localize('diffEditorRemovedLineGutter', 'Background color for the margin where lines got removed.'));\nexport const diffOverviewRulerInserted = registerColor('diffEditorOverview.insertedForeground', null, nls.localize('diffEditorOverviewInserted', 'Diff overview ruler foreground for inserted content.'));\nexport const diffOverviewRulerRemoved = registerColor('diffEditorOverview.removedForeground', null, nls.localize('diffEditorOverviewRemoved', 'Diff overview ruler foreground for removed content.'));\nexport const diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', { dark: null, light: null, hcDark: '#33ff2eff', hcLight: '#374E06' }, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\nexport const diffRemovedOutline = registerColor('diffEditor.removedTextBorder', { dark: null, light: null, hcDark: '#FF008F', hcLight: '#AD0707' }, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\nexport const diffBorder = registerColor('diffEditor.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\nexport const diffDiagonalFill = registerColor('diffEditor.diagonalFill', { dark: '#cccccc33', light: '#22222233', hcDark: null, hcLight: null }, nls.localize('diffDiagonalFill', \"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.\"));\nexport const diffUnchangedRegionBackground = registerColor('diffEditor.unchangedRegionBackground', 'sideBar.background', nls.localize('diffEditor.unchangedRegionBackground', \"The background color of unchanged blocks in the diff editor.\"));\nexport const diffUnchangedRegionForeground = registerColor('diffEditor.unchangedRegionForeground', 'foreground', nls.localize('diffEditor.unchangedRegionForeground', \"The foreground color of unchanged blocks in the diff editor.\"));\nexport const diffUnchangedTextBackground = registerColor('diffEditor.unchangedCodeBackground', { dark: '#74747429', light: '#b8b8b829', hcDark: null, hcLight: null }, nls.localize('diffEditor.unchangedCodeBackground', \"The background color of unchanged code in the diff editor.\"));\n// ----- widget\nexport const widgetShadow = registerColor('widget.shadow', { dark: transparent(Color.black, .36), light: transparent(Color.black, .16), hcDark: null, hcLight: null }, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\nexport const widgetBorder = registerColor('widget.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('widgetBorder', 'Border color of widgets such as find/replace inside the editor.'));\n// ----- toolbar\nexport const toolbarHoverBackground = registerColor('toolbar.hoverBackground', { dark: '#5a5d5e50', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('toolbarHoverBackground', \"Toolbar background when hovering over actions using the mouse\"));\nexport const toolbarHoverOutline = registerColor('toolbar.hoverOutline', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('toolbarHoverOutline', \"Toolbar outline when hovering over actions using the mouse\"));\nexport const toolbarActiveBackground = registerColor('toolbar.activeBackground', { dark: lighten(toolbarHoverBackground, 0.1), light: darken(toolbarHoverBackground, 0.1), hcDark: null, hcLight: null }, nls.localize('toolbarActiveBackground', \"Toolbar background when holding the mouse over actions\"));\n// ----- breadcumbs\nexport const breadcrumbsForeground = registerColor('breadcrumb.foreground', transparent(foreground, 0.8), nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsBackground = registerColor('breadcrumb.background', editorBackground, nls.localize('breadcrumbsBackground', \"Background color of breadcrumb items.\"));\nexport const breadcrumbsFocusForeground = registerColor('breadcrumb.focusForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsActiveSelectionForeground = registerColor('breadcrumb.activeSelectionForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsSelectedForeground', \"Color of selected breadcrumb items.\"));\nexport const breadcrumbsPickerBackground = registerColor('breadcrumbPicker.background', editorWidgetBackground, nls.localize('breadcrumbsSelectedBackground', \"Background color of breadcrumb item picker.\"));\n// ----- merge\nconst headerTransparency = 0.5;\nconst currentBaseColor = Color.fromHex('#40C8AE').transparent(headerTransparency);\nconst incomingBaseColor = Color.fromHex('#40A6FF').transparent(headerTransparency);\nconst commonBaseColor = Color.fromHex('#606060').transparent(0.4);\nconst contentTransparency = 0.4;\nconst rulerTransparency = 1;\nexport const mergeCurrentHeaderBackground = registerColor('merge.currentHeaderBackground', { dark: currentBaseColor, light: currentBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCurrentHeaderBackground', 'Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCurrentContentBackground = registerColor('merge.currentContentBackground', transparent(mergeCurrentHeaderBackground, contentTransparency), nls.localize('mergeCurrentContentBackground', 'Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingHeaderBackground = registerColor('merge.incomingHeaderBackground', { dark: incomingBaseColor, light: incomingBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeIncomingHeaderBackground', 'Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingContentBackground = registerColor('merge.incomingContentBackground', transparent(mergeIncomingHeaderBackground, contentTransparency), nls.localize('mergeIncomingContentBackground', 'Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonHeaderBackground = registerColor('merge.commonHeaderBackground', { dark: commonBaseColor, light: commonBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCommonHeaderBackground', 'Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonContentBackground = registerColor('merge.commonContentBackground', transparent(mergeCommonHeaderBackground, contentTransparency), nls.localize('mergeCommonContentBackground', 'Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeBorder = registerColor('merge.border', { dark: null, light: null, hcDark: '#C3DF6F', hcLight: '#007ACC' }, nls.localize('mergeBorder', 'Border color on headers and the splitter in inline merge-conflicts.'));\nexport const overviewRulerCurrentContentForeground = registerColor('editorOverviewRuler.currentContentForeground', { dark: transparent(mergeCurrentHeaderBackground, rulerTransparency), light: transparent(mergeCurrentHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCurrentContentForeground', 'Current overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerIncomingContentForeground = registerColor('editorOverviewRuler.incomingContentForeground', { dark: transparent(mergeIncomingHeaderBackground, rulerTransparency), light: transparent(mergeIncomingHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerIncomingContentForeground', 'Incoming overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerCommonContentForeground = registerColor('editorOverviewRuler.commonContentForeground', { dark: transparent(mergeCommonHeaderBackground, rulerTransparency), light: transparent(mergeCommonHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCommonContentForeground', 'Common ancestor overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', { dark: '#d186167e', light: '#d186167e', hcDark: '#AB5A00', hcLight: '#AB5A00' }, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', '#A0A0A0CC', nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\n// ----- problems\nexport const problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', editorErrorForeground, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\nexport const problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', editorWarningForeground, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\nexport const problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', editorInfoForeground, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n// Import the colors we need\nimport { editorInfoForeground, editorWarningForeground, editorWarningBorder, editorInfoBorder } from './editorColors.js';\nimport { scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground } from './miscColors.js';\nexport const minimapFindMatch = registerColor('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hcDark: '#AB5A00', hcLight: '#0F4A85' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\nexport const minimapSelectionOccurrenceHighlight = registerColor('minimap.selectionOccurrenceHighlight', { light: '#c9c9c9', dark: '#676767', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);\nexport const minimapSelection = registerColor('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\nexport const minimapInfo = registerColor('minimap.infoHighlight', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder }, nls.localize('minimapInfo', 'Minimap marker color for infos.'));\nexport const minimapWarning = registerColor('minimap.warningHighlight', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\nexport const minimapError = registerColor('minimap.errorHighlight', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('minimapError', 'Minimap marker color for errors.'));\nexport const minimapBackground = registerColor('minimap.background', null, nls.localize('minimapBackground', \"Minimap background color.\"));\nexport const minimapForegroundOpacity = registerColor('minimap.foregroundOpacity', Color.fromHex('#000f'), nls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.'));\nexport const minimapSliderBackground = registerColor('minimapSlider.background', transparent(scrollbarSliderBackground, 0.5), nls.localize('minimapSliderBackground', \"Minimap slider background color.\"));\nexport const minimapSliderHoverBackground = registerColor('minimapSlider.hoverBackground', transparent(scrollbarSliderHoverBackground, 0.5), nls.localize('minimapSliderHoverBackground', \"Minimap slider background color when hovering.\"));\nexport const minimapSliderActiveBackground = registerColor('minimapSlider.activeBackground', transparent(scrollbarSliderActiveBackground, 0.5), nls.localize('minimapSliderActiveBackground', \"Minimap slider background color when clicked on.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent, lighten, darken } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, focusBorder, iconForeground } from './baseColors.js';\nimport { editorWidgetBackground } from './editorColors.js';\n// ----- input\nexport const inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport const inputForeground = registerColor('input.foreground', foreground, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport const inputBorder = registerColor('input.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport const inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC', light: '#007ACC', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport const inputActiveOptionHoverBackground = registerColor('inputOption.hoverBackground', { dark: '#5a5d5e80', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('inputOption.hoverBackground', \"Background color of activated options in input fields.\"));\nexport const inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.4), light: transparent(focusBorder, 0.2), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('inputOption.activeBackground', \"Background hover color of options in input fields.\"));\nexport const inputActiveOptionForeground = registerColor('inputOption.activeForeground', { dark: Color.white, light: Color.black, hcDark: foreground, hcLight: foreground }, nls.localize('inputOption.activeForeground', \"Foreground color of activated options in input fields.\"));\nexport const inputPlaceholderForeground = registerColor('input.placeholderForeground', { light: transparent(foreground, 0.5), dark: transparent(foreground, 0.5), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('inputPlaceholderForeground', \"Input box foreground color for placeholder text.\"));\n// ----- input validation\nexport const inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport const inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport const inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport const inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport const inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport const inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport const inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport const inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport const inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\n// ----- select\nexport const selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport const selectListBackground = registerColor('dropdown.listBackground', { dark: null, light: null, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownListBackground', \"Dropdown list background.\"));\nexport const selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: foreground, hcDark: Color.white, hcLight: foreground }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport const selectBorder = registerColor('dropdown.border', { dark: selectBackground, light: '#CECECE', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('dropdownBorder', \"Dropdown border.\"));\n// ------ button\nexport const buttonForeground = registerColor('button.foreground', Color.white, nls.localize('buttonForeground', \"Button foreground color.\"));\nexport const buttonSeparator = registerColor('button.separator', transparent(buttonForeground, .4), nls.localize('buttonSeparator', \"Button separator color.\"));\nexport const buttonBackground = registerColor('button.background', { dark: '#0E639C', light: '#007ACC', hcDark: null, hcLight: '#0F4A85' }, nls.localize('buttonBackground', \"Button background color.\"));\nexport const buttonHoverBackground = registerColor('button.hoverBackground', { dark: lighten(buttonBackground, 0.2), light: darken(buttonBackground, 0.2), hcDark: buttonBackground, hcLight: buttonBackground }, nls.localize('buttonHoverBackground', \"Button background color when hovering.\"));\nexport const buttonBorder = registerColor('button.border', contrastBorder, nls.localize('buttonBorder', \"Button border color.\"));\nexport const buttonSecondaryForeground = registerColor('button.secondaryForeground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: foreground }, nls.localize('buttonSecondaryForeground', \"Secondary button foreground color.\"));\nexport const buttonSecondaryBackground = registerColor('button.secondaryBackground', { dark: '#3A3D41', light: '#5F6A79', hcDark: null, hcLight: Color.white }, nls.localize('buttonSecondaryBackground', \"Secondary button background color.\"));\nexport const buttonSecondaryHoverBackground = registerColor('button.secondaryHoverBackground', { dark: lighten(buttonSecondaryBackground, 0.2), light: darken(buttonSecondaryBackground, 0.2), hcDark: null, hcLight: null }, nls.localize('buttonSecondaryHoverBackground', \"Secondary button background color when hovering.\"));\n// ------ radio\nexport const radioActiveForeground = registerColor('radio.activeForeground', inputActiveOptionForeground, nls.localize('radioActiveForeground', \"Foreground color of active radio option.\"));\nexport const radioActiveBackground = registerColor('radio.activeBackground', inputActiveOptionBackground, nls.localize('radioBackground', \"Background color of active radio option.\"));\nexport const radioActiveBorder = registerColor('radio.activeBorder', inputActiveOptionBorder, nls.localize('radioActiveBorder', \"Border color of the active radio option.\"));\nexport const radioInactiveForeground = registerColor('radio.inactiveForeground', null, nls.localize('radioInactiveForeground', \"Foreground color of inactive radio option.\"));\nexport const radioInactiveBackground = registerColor('radio.inactiveBackground', null, nls.localize('radioInactiveBackground', \"Background color of inactive radio option.\"));\nexport const radioInactiveBorder = registerColor('radio.inactiveBorder', { light: transparent(radioActiveForeground, .2), dark: transparent(radioActiveForeground, .2), hcDark: transparent(radioActiveForeground, .4), hcLight: transparent(radioActiveForeground, .2) }, nls.localize('radioInactiveBorder', \"Border color of the inactive radio option.\"));\nexport const radioInactiveHoverBackground = registerColor('radio.inactiveHoverBackground', inputActiveOptionHoverBackground, nls.localize('radioHoverBackground', \"Background color of inactive active radio option when hovering.\"));\n// ------ checkbox\nexport const checkboxBackground = registerColor('checkbox.background', selectBackground, nls.localize('checkbox.background', \"Background color of checkbox widget.\"));\nexport const checkboxSelectBackground = registerColor('checkbox.selectBackground', editorWidgetBackground, nls.localize('checkbox.select.background', \"Background color of checkbox widget when the element it's in is selected.\"));\nexport const checkboxForeground = registerColor('checkbox.foreground', selectForeground, nls.localize('checkbox.foreground', \"Foreground color of checkbox widget.\"));\nexport const checkboxBorder = registerColor('checkbox.border', selectBorder, nls.localize('checkbox.border', \"Border color of checkbox widget.\"));\nexport const checkboxSelectBorder = registerColor('checkbox.selectBorder', iconForeground, nls.localize('checkbox.select.border', \"Border color of checkbox widget when the element it's in is selected.\"));\n// ------ keybinding label\nexport const keybindingLabelBackground = registerColor('keybindingLabel.background', { dark: new Color(new RGBA(128, 128, 128, 0.17)), light: new Color(new RGBA(221, 221, 221, 0.4)), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('keybindingLabelBackground', \"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelForeground = registerColor('keybindingLabel.foreground', { dark: Color.fromHex('#CCCCCC'), light: Color.fromHex('#555555'), hcDark: Color.white, hcLight: foreground }, nls.localize('keybindingLabelForeground', \"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBorder = registerColor('keybindingLabel.border', { dark: new Color(new RGBA(51, 51, 51, 0.6)), light: new Color(new RGBA(204, 204, 204, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: contrastBorder }, nls.localize('keybindingLabelBorder', \"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBottomBorder = registerColor('keybindingLabel.bottomBorder', { dark: new Color(new RGBA(68, 68, 68, 0.6)), light: new Color(new RGBA(187, 187, 187, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: foreground }, nls.localize('keybindingLabelBottomBorder', \"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\nimport { registerColor, transparent } from '../colorUtils.js';\nimport { foreground } from './baseColors.js';\nimport { editorErrorForeground, editorInfoForeground, editorWarningForeground } from './editorColors.js';\nimport { minimapFindMatch } from './minimapColors.js';\nexport const chartsForeground = registerColor('charts.foreground', foreground, nls.localize('chartsForeground', \"The foreground color used in charts.\"));\nexport const chartsLines = registerColor('charts.lines', transparent(foreground, .5), nls.localize('chartsLines', \"The color used for horizontal lines in charts.\"));\nexport const chartsRed = registerColor('charts.red', editorErrorForeground, nls.localize('chartsRed', \"The red color used in chart visualizations.\"));\nexport const chartsBlue = registerColor('charts.blue', editorInfoForeground, nls.localize('chartsBlue', \"The blue color used in chart visualizations.\"));\nexport const chartsYellow = registerColor('charts.yellow', editorWarningForeground, nls.localize('chartsYellow', \"The yellow color used in chart visualizations.\"));\nexport const chartsOrange = registerColor('charts.orange', minimapFindMatch, nls.localize('chartsOrange', \"The orange color used in chart visualizations.\"));\nexport const chartsGreen = registerColor('charts.green', { dark: '#89D185', light: '#388A34', hcDark: '#89D185', hcLight: '#374e06' }, nls.localize('chartsGreen', \"The green color used in chart visualizations.\"));\nexport const chartsPurple = registerColor('charts.purple', { dark: '#B180D7', light: '#652D90', hcDark: '#B180D7', hcLight: '#652D90' }, nls.localize('chartsPurple', \"The purple color used in chart visualizations.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, darken, lighten, transparent, ifDefinedThenElse } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, activeContrastBorder, focusBorder, iconForeground } from './baseColors.js';\nimport { editorWidgetBackground, editorFindMatchHighlightBorder, editorFindMatchHighlight, widgetShadow, editorWidgetForeground } from './editorColors.js';\nexport const listFocusBackground = registerColor('list.focusBackground', null, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusForeground = registerColor('list.focusForeground', null, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusOutline = registerColor('list.focusOutline', { dark: focusBorder, light: focusBorder, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('listFocusOutline', \"List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusAndSelectionOutline = registerColor('list.focusAndSelectionOutline', null, nls.localize('listFocusAndSelectionOutline', \"List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#04395E', light: '#0060C0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionIconForeground = registerColor('list.activeSelectionIconForeground', null, nls.localize('listActiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', null, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionIconForeground = registerColor('list.inactiveSelectionIconForeground', null, nls.localize('listInactiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', null, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusOutline = registerColor('list.inactiveFocusOutline', null, nls.localize('listInactiveFocusOutline', \"List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: Color.white.transparent(0.1), hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport const listHoverForeground = registerColor('list.hoverForeground', null, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport const listDropOverBackground = registerColor('list.dropBackground', { dark: '#062F4A', light: '#D6EBFF', hcDark: null, hcLight: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items over other items when using the mouse.\"));\nexport const listDropBetweenBackground = registerColor('list.dropBetweenBackground', { dark: iconForeground, light: iconForeground, hcDark: null, hcLight: null }, nls.localize('listDropBetweenBackground', \"List/Tree drag and drop border color when moving items between items when using the mouse.\"));\nexport const listHighlightForeground = registerColor('list.highlightForeground', { dark: '#2AAAFF', light: '#0066BF', hcDark: focusBorder, hcLight: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport const listFocusHighlightForeground = registerColor('list.focusHighlightForeground', { dark: listHighlightForeground, light: ifDefinedThenElse(listActiveSelectionBackground, listHighlightForeground, '#BBE7FF'), hcDark: listHighlightForeground, hcLight: listHighlightForeground }, nls.localize('listFocusHighlightForeground', 'List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.'));\nexport const listInvalidItemForeground = registerColor('list.invalidItemForeground', { dark: '#B89500', light: '#B89500', hcDark: '#B89500', hcLight: '#B5200D' }, nls.localize('invalidItemForeground', 'List/Tree foreground color for invalid items, for example an unresolved root in explorer.'));\nexport const listErrorForeground = registerColor('list.errorForeground', { dark: '#F88070', light: '#B01011', hcDark: null, hcLight: null }, nls.localize('listErrorForeground', 'Foreground color of list items containing errors.'));\nexport const listWarningForeground = registerColor('list.warningForeground', { dark: '#CCA700', light: '#855F00', hcDark: null, hcLight: null }, nls.localize('listWarningForeground', 'Foreground color of list items containing warnings.'));\nexport const listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: darken(editorWidgetBackground, 0), dark: lighten(editorWidgetBackground, 0), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hcDark: '#f38518', hcLight: '#007ACC' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport const listFilterWidgetShadow = registerColor('listFilterWidget.shadow', widgetShadow, nls.localize('listFilterWidgetShadow', 'Shadow color of the type filter widget in lists and trees.'));\nexport const listFilterMatchHighlight = registerColor('list.filterMatchBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('listFilterMatchHighlight', 'Background color of the filtered match.'));\nexport const listFilterMatchHighlightBorder = registerColor('list.filterMatchBorder', { dark: editorFindMatchHighlightBorder, light: editorFindMatchHighlightBorder, hcDark: contrastBorder, hcLight: activeContrastBorder }, nls.localize('listFilterMatchHighlightBorder', 'Border color of the filtered match.'));\nexport const listDeemphasizedForeground = registerColor('list.deemphasizedForeground', { dark: '#8C8C8C', light: '#8E8E90', hcDark: '#A7A8A9', hcLight: '#666666' }, nls.localize('listDeemphasizedForeground', \"List/Tree foreground color for items that are deemphasized.\"));\n// ------ tree\nexport const treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hcDark: '#a9a9a9', hcLight: '#a5a5a5' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\nexport const treeInactiveIndentGuidesStroke = registerColor('tree.inactiveIndentGuidesStroke', transparent(treeIndentGuidesStroke, 0.4), nls.localize('treeInactiveIndentGuidesStroke', \"Tree stroke color for the indentation guides that are not active.\"));\n// ------ table\nexport const tableColumnsBorder = registerColor('tree.tableColumnsBorder', { dark: '#CCCCCC20', light: '#61616120', hcDark: null, hcLight: null }, nls.localize('tableColumnsBorder', \"Table border color between columns.\"));\nexport const tableOddRowsBackgroundColor = registerColor('tree.tableOddRowsBackground', { dark: transparent(foreground, 0.04), light: transparent(foreground, 0.04), hcDark: null, hcLight: null }, nls.localize('tableOddRowsBackgroundColor', \"Background color for odd table rows.\"));\n// ------ action list\nexport const editorActionListBackground = registerColor('editorActionList.background', editorWidgetBackground, nls.localize('editorActionListBackground', \"Action List background color.\"));\nexport const editorActionListForeground = registerColor('editorActionList.foreground', editorWidgetForeground, nls.localize('editorActionListForeground', \"Action List foreground color.\"));\nexport const editorActionListFocusForeground = registerColor('editorActionList.focusForeground', listActiveSelectionForeground, nls.localize('editorActionListFocusForeground', \"Action List foreground color for the focused item.\"));\nexport const editorActionListFocusBackground = registerColor('editorActionList.focusBackground', listActiveSelectionBackground, nls.localize('editorActionListFocusBackground', \"Action List background color for the focused item.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { registerColor } from '../colorUtils.js';\n// Import the colors we need\nimport { contrastBorder, activeContrastBorder } from './baseColors.js';\nimport { selectForeground, selectBackground } from './inputColors.js';\nimport { listActiveSelectionBackground, listActiveSelectionForeground } from './listColors.js';\nexport const menuBorder = registerColor('menu.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\nexport const menuForeground = registerColor('menu.foreground', selectForeground, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport const menuBackground = registerColor('menu.background', selectBackground, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport const menuSelectionForeground = registerColor('menu.selectionForeground', listActiveSelectionForeground, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport const menuSelectionBackground = registerColor('menu.selectionBackground', listActiveSelectionBackground, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport const menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport const menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#606060', light: '#D4D4D4', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, oneOf } from '../colorUtils.js';\n// Import the colors we need\nimport { editorWidgetBackground, editorWidgetForeground } from './editorColors.js';\nimport { listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground } from './listColors.js';\nexport const quickInputBackground = registerColor('quickInput.background', editorWidgetBackground, nls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputForeground = registerColor('quickInput.foreground', editorWidgetForeground, nls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background', { dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hcDark: '#000000', hcLight: Color.white }, nls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport const pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground', null, '', undefined, nls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground', listActiveSelectionForeground, nls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground', listActiveSelectionIconForeground, nls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground', { dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hcDark: null, hcLight: null }, nls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { registerColor, transparent } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground } from './baseColors.js';\nimport { editorFindMatchHighlight, editorFindMatchHighlightBorder } from './editorColors.js';\nexport const searchResultsInfoForeground = registerColor('search.resultsInfoForeground', { light: foreground, dark: transparent(foreground, 0.65), hcDark: foreground, hcLight: foreground }, nls.localize('search.resultsInfoForeground', \"Color of the text in the search viewlet's completion message.\"));\n// ----- search editor (Distinct from normal editor find match to allow for better differentiation)\nexport const searchEditorFindMatch = registerColor('searchEditor.findMatchBackground', { light: transparent(editorFindMatchHighlight, 0.66), dark: transparent(editorFindMatchHighlight, 0.66), hcDark: editorFindMatchHighlight, hcLight: editorFindMatchHighlight }, nls.localize('searchEditor.queryMatch', \"Color of the Search Editor query matches.\"));\nexport const searchEditorFindMatchBorder = registerColor('searchEditor.findMatchBorder', { light: transparent(editorFindMatchHighlightBorder, 0.66), dark: transparent(editorFindMatchHighlightBorder, 0.66), hcDark: editorFindMatchHighlightBorder, hcLight: editorFindMatchHighlightBorder }, nls.localize('searchEditor.editorFindMatchBorder', \"Border color of the Search Editor query matches.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ILanguageService = createDecorator('languageService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { posix, sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { startsWithIgnoreCase } from './strings.js';\nexport function isPathSeparator(code) {\n    return code === 47 /* CharCode.Slash */ || code === 92 /* CharCode.Backslash */;\n}\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath) {\n    return osPath.replace(/[\\\\/]/g, posix.sep);\n}\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath) {\n    if (osPath.indexOf('/') === -1) {\n        osPath = toSlashes(osPath);\n    }\n    if (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n        osPath = '/' + osPath;\n    }\n    return osPath;\n}\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path, sep = posix.sep) {\n    if (!path) {\n        return '';\n    }\n    const len = path.length;\n    const firstLetter = path.charCodeAt(0);\n    if (isPathSeparator(firstLetter)) {\n        if (isPathSeparator(path.charCodeAt(1))) {\n            // UNC candidate \\\\localhost\\shares\\ddd\n            //               ^^^^^^^^^^^^^^^^^^^\n            if (!isPathSeparator(path.charCodeAt(2))) {\n                let pos = 3;\n                const start = pos;\n                for (; pos < len; pos++) {\n                    if (isPathSeparator(path.charCodeAt(pos))) {\n                        break;\n                    }\n                }\n                if (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n                    pos += 1;\n                    for (; pos < len; pos++) {\n                        if (isPathSeparator(path.charCodeAt(pos))) {\n                            return path.slice(0, pos + 1) // consume this separator\n                                .replace(/[\\\\/]/g, sep);\n                        }\n                    }\n                }\n            }\n        }\n        // /user/far\n        // ^\n        return sep;\n    }\n    else if (isWindowsDriveLetter(firstLetter)) {\n        // check for windows drive letter c:\\ or c:\n        if (path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            if (isPathSeparator(path.charCodeAt(2))) {\n                // C:\\fff\n                // ^^^\n                return path.slice(0, 2) + sep;\n            }\n            else {\n                // C:\n                // ^^\n                return path.slice(0, 2);\n            }\n        }\n    }\n    // check for URI\n    // scheme://authority/path\n    // ^^^^^^^^^^^^^^^^^^^\n    let pos = path.indexOf('://');\n    if (pos !== -1) {\n        pos += 3; // 3 -> \"://\".length\n        for (; pos < len; pos++) {\n            if (isPathSeparator(path.charCodeAt(pos))) {\n                return path.slice(0, pos + 1); // consume this separator\n            }\n        }\n    }\n    return '';\n}\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base, parentCandidate, ignoreCase, separator = sep) {\n    if (base === parentCandidate) {\n        return true;\n    }\n    if (!base || !parentCandidate) {\n        return false;\n    }\n    if (parentCandidate.length > base.length) {\n        return false;\n    }\n    if (ignoreCase) {\n        const beginsWith = startsWithIgnoreCase(base, parentCandidate);\n        if (!beginsWith) {\n            return false;\n        }\n        if (parentCandidate.length === base.length) {\n            return true; // same path, different casing\n        }\n        let sepOffset = parentCandidate.length;\n        if (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n            sepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n        }\n        return base.charAt(sepOffset) === separator;\n    }\n    if (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n        parentCandidate += separator;\n    }\n    return base.indexOf(parentCandidate) === 0;\n}\nexport function isWindowsDriveLetter(char0) {\n    return char0 >= 65 /* CharCode.A */ && char0 <= 90 /* CharCode.Z */ || char0 >= 97 /* CharCode.a */ && char0 <= 122 /* CharCode.z */;\n}\nexport function hasDriveLetter(path, isWindowsOS = isWindows) {\n    if (isWindowsOS) {\n        return isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === 58 /* CharCode.Colon */;\n    }\n    return false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ISemanticTokensStylingService = createDecorator('semanticTokensStylingService');\n","import { isThenable } from './async.js';\nimport { isEqualOrParent } from './extpath.js';\nimport { LRUCache } from './map.js';\nimport { basename, extname, posix, sep } from './path.js';\nimport { isLinux } from './platform.js';\nimport { escapeRegExpCharacters, ltrim } from './strings.js';\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]'; // any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]'; // any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\nfunction starsToRegExp(starCount, isLastPattern) {\n    switch (starCount) {\n        case 0:\n            return '';\n        case 1:\n            return `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n        default:\n            // Matches:  (Path Sep OR Path Val followed by Path Sep) 0-many times except when it's the last pattern\n            //           in which case also matches (Path Sep followed by Path Val)\n            // Group is non capturing because we don't need to capture at all (?:...)\n            // Overall we use non-greedy matching because it could be that we match too much\n            return `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}${isLastPattern ? `|${PATH_REGEX}${NO_PATH_REGEX}+` : ''})*?`;\n    }\n}\nexport function splitGlobAware(pattern, splitChar) {\n    if (!pattern) {\n        return [];\n    }\n    const segments = [];\n    let inBraces = false;\n    let inBrackets = false;\n    let curVal = '';\n    for (const char of pattern) {\n        switch (char) {\n            case splitChar:\n                if (!inBraces && !inBrackets) {\n                    segments.push(curVal);\n                    curVal = '';\n                    continue;\n                }\n                break;\n            case '{':\n                inBraces = true;\n                break;\n            case '}':\n                inBraces = false;\n                break;\n            case '[':\n                inBrackets = true;\n                break;\n            case ']':\n                inBrackets = false;\n                break;\n        }\n        curVal += char;\n    }\n    // Tail\n    if (curVal) {\n        segments.push(curVal);\n    }\n    return segments;\n}\nfunction parseRegExp(pattern) {\n    if (!pattern) {\n        return '';\n    }\n    let regEx = '';\n    // Split up into segments for each slash found\n    const segments = splitGlobAware(pattern, GLOB_SPLIT);\n    // Special case where we only have globstars\n    if (segments.every(segment => segment === GLOBSTAR)) {\n        regEx = '.*';\n    }\n    // Build regex over segments\n    else {\n        let previousSegmentWasGlobStar = false;\n        segments.forEach((segment, index) => {\n            // Treat globstar specially\n            if (segment === GLOBSTAR) {\n                // if we have more than one globstar after another, just ignore it\n                if (previousSegmentWasGlobStar) {\n                    return;\n                }\n                regEx += starsToRegExp(2, index === segments.length - 1);\n            }\n            // Anything else, not globstar\n            else {\n                // States\n                let inBraces = false;\n                let braceVal = '';\n                let inBrackets = false;\n                let bracketVal = '';\n                for (const char of segment) {\n                    // Support brace expansion\n                    if (char !== '}' && inBraces) {\n                        braceVal += char;\n                        continue;\n                    }\n                    // Support brackets\n                    if (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n                        let res;\n                        // range operator\n                        if (char === '-') {\n                            res = char;\n                        }\n                        // negation operator (only valid on first index in bracket)\n                        else if ((char === '^' || char === '!') && !bracketVal) {\n                            res = '^';\n                        }\n                        // glob split matching is not allowed within character ranges\n                        // see http://man7.org/linux/man-pages/man7/glob.7.html\n                        else if (char === GLOB_SPLIT) {\n                            res = '';\n                        }\n                        // anything else gets escaped\n                        else {\n                            res = escapeRegExpCharacters(char);\n                        }\n                        bracketVal += res;\n                        continue;\n                    }\n                    switch (char) {\n                        case '{':\n                            inBraces = true;\n                            continue;\n                        case '[':\n                            inBrackets = true;\n                            continue;\n                        case '}': {\n                            const choices = splitGlobAware(braceVal, ',');\n                            // Converts {foo,bar} => [foo|bar]\n                            const braceRegExp = `(?:${choices.map(choice => parseRegExp(choice)).join('|')})`;\n                            regEx += braceRegExp;\n                            inBraces = false;\n                            braceVal = '';\n                            break;\n                        }\n                        case ']': {\n                            regEx += ('[' + bracketVal + ']');\n                            inBrackets = false;\n                            bracketVal = '';\n                            break;\n                        }\n                        case '?':\n                            regEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n                            continue;\n                        case '*':\n                            regEx += starsToRegExp(1);\n                            continue;\n                        default:\n                            regEx += escapeRegExpCharacters(char);\n                    }\n                }\n                // Tail: Add the slash we had split on if there is more to\n                // come and the remaining pattern is not a globstar\n                // For example if pattern: some/**/*.js we want the \"/\" after\n                // some to be included in the RegEx to prevent a folder called\n                // \"something\" to match as well.\n                if (index < segments.length - 1 && // more segments to come after this\n                    (segments[index + 1] !== GLOBSTAR || // next segment is not **, or...\n                        index + 2 < segments.length // ...next segment is ** but there is more segments after that\n                    )) {\n                    regEx += PATH_REGEX;\n                }\n            }\n            // update globstar state\n            previousSegmentWasGlobStar = (segment === GLOBSTAR);\n        });\n    }\n    return regEx;\n}\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; // **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; // **/something\nconst T3 = /^{\\*\\*\\/\\*?[\\w\\.-]+\\/?(,\\*\\*\\/\\*?[\\w\\.-]+\\/?)*}$/; // {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; // Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; // **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; // something/else\nconst CACHE = new LRUCache(10000); // bounded to 10000 elements\nconst FALSE = function () {\n    return false;\n};\nconst NULL = function () {\n    return null;\n};\nfunction parsePattern(arg1, options) {\n    if (!arg1) {\n        return NULL;\n    }\n    // Handle relative patterns\n    let pattern;\n    if (typeof arg1 !== 'string') {\n        pattern = arg1.pattern;\n    }\n    else {\n        pattern = arg1;\n    }\n    // Whitespace trimming\n    pattern = pattern.trim();\n    // Check cache\n    const patternKey = `${pattern}_${!!options.trimForExclusions}`;\n    let parsedPattern = CACHE.get(patternKey);\n    if (parsedPattern) {\n        return wrapRelativePattern(parsedPattern, arg1);\n    }\n    // Check for Trivials\n    let match;\n    if (T1.test(pattern)) {\n        parsedPattern = trivia1(pattern.substr(4), pattern); // common pattern: **/*.txt just need endsWith check\n    }\n    else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n        parsedPattern = trivia2(match[1], pattern);\n    }\n    else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n        parsedPattern = trivia3(pattern, options);\n    }\n    else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n        parsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n    }\n    else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n        parsedPattern = trivia4and5(match[1], pattern, false);\n    }\n    // Otherwise convert to pattern\n    else {\n        parsedPattern = toRegExp(pattern);\n    }\n    // Cache\n    CACHE.set(patternKey, parsedPattern);\n    return wrapRelativePattern(parsedPattern, arg1);\n}\nfunction wrapRelativePattern(parsedPattern, arg2) {\n    if (typeof arg2 === 'string') {\n        return parsedPattern;\n    }\n    const wrappedPattern = function (path, basename) {\n        if (!isEqualOrParent(path, arg2.base, !isLinux)) {\n            // skip glob matching if `base` is not a parent of `path`\n            return null;\n        }\n        // Given we have checked `base` being a parent of `path`,\n        // we can now remove the `base` portion of the `path`\n        // and only match on the remaining path components\n        // For that we try to extract the portion of the `path`\n        // that comes after the `base` portion. We have to account\n        // for the fact that `base` might end in a path separator\n        // (https://github.com/microsoft/vscode/issues/162498)\n        return parsedPattern(ltrim(path.substr(arg2.base.length), sep), basename);\n    };\n    // Make sure to preserve associated metadata\n    wrappedPattern.allBasenames = parsedPattern.allBasenames;\n    wrappedPattern.allPaths = parsedPattern.allPaths;\n    wrappedPattern.basenames = parsedPattern.basenames;\n    wrappedPattern.patterns = parsedPattern.patterns;\n    return wrappedPattern;\n}\nfunction trimForExclusions(pattern, options) {\n    return options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n// common pattern: **/*.txt just need endsWith check\nfunction trivia1(base, pattern) {\n    return function (path, basename) {\n        return typeof path === 'string' && path.endsWith(base) ? pattern : null;\n    };\n}\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base, pattern) {\n    const slashBase = `/${base}`;\n    const backslashBase = `\\\\${base}`;\n    const parsedPattern = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (basename) {\n            return basename === base ? pattern : null;\n        }\n        return path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? pattern : null;\n    };\n    const basenames = [base];\n    parsedPattern.basenames = basenames;\n    parsedPattern.patterns = [pattern];\n    parsedPattern.allBasenames = basenames;\n    return parsedPattern;\n}\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern, options) {\n    const parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1)\n        .split(',')\n        .map(pattern => parsePattern(pattern, options))\n        .filter(pattern => pattern !== NULL), pattern);\n    const patternsLength = parsedPatterns.length;\n    if (!patternsLength) {\n        return NULL;\n    }\n    if (patternsLength === 1) {\n        return parsedPatterns[0];\n    }\n    const parsedPattern = function (path, basename) {\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            if (parsedPatterns[i](path, basename)) {\n                return pattern;\n            }\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        parsedPattern.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        parsedPattern.allPaths = allPaths;\n    }\n    return parsedPattern;\n}\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath, pattern, matchPathEnds) {\n    const usingPosixSep = sep === posix.sep;\n    const nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n    const nativePathEnd = sep + nativePath;\n    const targetPathEnd = posix.sep + targetPath;\n    let parsedPattern;\n    if (matchPathEnds) {\n        parsedPattern = function (path, basename) {\n            return typeof path === 'string' && ((path === nativePath || path.endsWith(nativePathEnd)) || !usingPosixSep && (path === targetPath || path.endsWith(targetPathEnd))) ? pattern : null;\n        };\n    }\n    else {\n        parsedPattern = function (path, basename) {\n            return typeof path === 'string' && (path === nativePath || (!usingPosixSep && path === targetPath)) ? pattern : null;\n        };\n    }\n    parsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n    return parsedPattern;\n}\nfunction toRegExp(pattern) {\n    try {\n        const regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n        return function (path) {\n            regExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n            return typeof path === 'string' && regExp.test(path) ? pattern : null;\n        };\n    }\n    catch (error) {\n        return NULL;\n    }\n}\nexport function match(arg1, path, hasSibling) {\n    if (!arg1 || typeof path !== 'string') {\n        return false;\n    }\n    return parse(arg1)(path, undefined, hasSibling);\n}\nexport function parse(arg1, options = {}) {\n    if (!arg1) {\n        return FALSE;\n    }\n    // Glob with String\n    if (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n        const parsedPattern = parsePattern(arg1, options);\n        if (parsedPattern === NULL) {\n            return FALSE;\n        }\n        const resultPattern = function (path, basename) {\n            return !!parsedPattern(path, basename);\n        };\n        if (parsedPattern.allBasenames) {\n            resultPattern.allBasenames = parsedPattern.allBasenames;\n        }\n        if (parsedPattern.allPaths) {\n            resultPattern.allPaths = parsedPattern.allPaths;\n        }\n        return resultPattern;\n    }\n    // Glob with Expression\n    return parsedExpression(arg1, options);\n}\nexport function isRelativePattern(obj) {\n    const rp = obj;\n    if (!rp) {\n        return false;\n    }\n    return typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\nfunction parsedExpression(expression, options) {\n    const parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n        .map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n        .filter(pattern => pattern !== NULL));\n    const patternsLength = parsedPatterns.length;\n    if (!patternsLength) {\n        return NULL;\n    }\n    if (!parsedPatterns.some(parsedPattern => !!parsedPattern.requiresSiblings)) {\n        if (patternsLength === 1) {\n            return parsedPatterns[0];\n        }\n        const resultExpression = function (path, basename) {\n            let resultPromises = undefined;\n            for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n                const result = parsedPatterns[i](path, basename);\n                if (typeof result === 'string') {\n                    return result; // immediately return as soon as the first expression matches\n                }\n                // If the result is a promise, we have to keep it for\n                // later processing and await the result properly.\n                if (isThenable(result)) {\n                    if (!resultPromises) {\n                        resultPromises = [];\n                    }\n                    resultPromises.push(result);\n                }\n            }\n            // With result promises, we have to loop over each and\n            // await the result before we can return any result.\n            if (resultPromises) {\n                return (async () => {\n                    for (const resultPromise of resultPromises) {\n                        const result = await resultPromise;\n                        if (typeof result === 'string') {\n                            return result;\n                        }\n                    }\n                    return null;\n                })();\n            }\n            return null;\n        };\n        const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n        if (withBasenames) {\n            resultExpression.allBasenames = withBasenames.allBasenames;\n        }\n        const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n        if (allPaths.length) {\n            resultExpression.allPaths = allPaths;\n        }\n        return resultExpression;\n    }\n    const resultExpression = function (path, base, hasSibling) {\n        let name = undefined;\n        let resultPromises = undefined;\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            // Pattern matches path\n            const parsedPattern = parsedPatterns[i];\n            if (parsedPattern.requiresSiblings && hasSibling) {\n                if (!base) {\n                    base = basename(path);\n                }\n                if (!name) {\n                    name = base.substr(0, base.length - extname(path).length);\n                }\n            }\n            const result = parsedPattern(path, base, name, hasSibling);\n            if (typeof result === 'string') {\n                return result; // immediately return as soon as the first expression matches\n            }\n            // If the result is a promise, we have to keep it for\n            // later processing and await the result properly.\n            if (isThenable(result)) {\n                if (!resultPromises) {\n                    resultPromises = [];\n                }\n                resultPromises.push(result);\n            }\n        }\n        // With result promises, we have to loop over each and\n        // await the result before we can return any result.\n        if (resultPromises) {\n            return (async () => {\n                for (const resultPromise of resultPromises) {\n                    const result = await resultPromise;\n                    if (typeof result === 'string') {\n                        return result;\n                    }\n                }\n                return null;\n            })();\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        resultExpression.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        resultExpression.allPaths = allPaths;\n    }\n    return resultExpression;\n}\nfunction parseExpressionPattern(pattern, value, options) {\n    if (value === false) {\n        return NULL; // pattern is disabled\n    }\n    const parsedPattern = parsePattern(pattern, options);\n    if (parsedPattern === NULL) {\n        return NULL;\n    }\n    // Expression Pattern is <boolean>\n    if (typeof value === 'boolean') {\n        return parsedPattern;\n    }\n    // Expression Pattern is <SiblingClause>\n    if (value) {\n        const when = value.when;\n        if (typeof when === 'string') {\n            const result = (path, basename, name, hasSibling) => {\n                if (!hasSibling || !parsedPattern(path, basename)) {\n                    return null;\n                }\n                const clausePattern = when.replace('$(basename)', () => name);\n                const matched = hasSibling(clausePattern);\n                return isThenable(matched) ?\n                    matched.then(match => match ? pattern : null) :\n                    matched ? pattern : null;\n            };\n            result.requiresSiblings = true;\n            return result;\n        }\n    }\n    // Expression is anything\n    return parsedPattern;\n}\nfunction aggregateBasenameMatches(parsedPatterns, result) {\n    const basenamePatterns = parsedPatterns.filter(parsedPattern => !!parsedPattern.basenames);\n    if (basenamePatterns.length < 2) {\n        return parsedPatterns;\n    }\n    const basenames = basenamePatterns.reduce((all, current) => {\n        const basenames = current.basenames;\n        return basenames ? all.concat(basenames) : all;\n    }, []);\n    let patterns;\n    if (result) {\n        patterns = [];\n        for (let i = 0, n = basenames.length; i < n; i++) {\n            patterns.push(result);\n        }\n    }\n    else {\n        patterns = basenamePatterns.reduce((all, current) => {\n            const patterns = current.patterns;\n            return patterns ? all.concat(patterns) : all;\n        }, []);\n    }\n    const aggregate = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (!basename) {\n            let i;\n            for (i = path.length; i > 0; i--) {\n                const ch = path.charCodeAt(i - 1);\n                if (ch === 47 /* CharCode.Slash */ || ch === 92 /* CharCode.Backslash */) {\n                    break;\n                }\n            }\n            basename = path.substr(i);\n        }\n        const index = basenames.indexOf(basename);\n        return index !== -1 ? patterns[index] : null;\n    };\n    aggregate.basenames = basenames;\n    aggregate.patterns = patterns;\n    aggregate.allBasenames = basenames;\n    const aggregatedPatterns = parsedPatterns.filter(parsedPattern => !parsedPattern.basenames);\n    aggregatedPatterns.push(aggregate);\n    return aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IConfigurationService = createDecorator('configurationService');\nexport function toValuesTree(properties, conflictReporter) {\n    const root = Object.create(null);\n    for (const key in properties) {\n        addToValueTree(root, key, properties[key], conflictReporter);\n    }\n    return root;\n}\nexport function addToValueTree(settingsTreeRoot, key, value, conflictReporter) {\n    const segments = key.split('.');\n    const last = segments.pop();\n    let curr = settingsTreeRoot;\n    for (let i = 0; i < segments.length; i++) {\n        const s = segments[i];\n        let obj = curr[s];\n        switch (typeof obj) {\n            case 'undefined':\n                obj = curr[s] = Object.create(null);\n                break;\n            case 'object':\n                if (obj === null) {\n                    conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is null`);\n                    return;\n                }\n                break;\n            default:\n                conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n                return;\n        }\n        curr = obj;\n    }\n    if (typeof curr === 'object' && curr !== null) {\n        try {\n            curr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n        }\n        catch (e) {\n            conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n        }\n    }\n    else {\n        conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n    }\n}\nexport function removeFromValueTree(valueTree, key) {\n    const segments = key.split('.');\n    doRemoveFromValueTree(valueTree, segments);\n}\nfunction doRemoveFromValueTree(valueTree, segments) {\n    const first = segments.shift();\n    if (segments.length === 0) {\n        // Reached last segment\n        delete valueTree[first];\n        return;\n    }\n    if (Object.keys(valueTree).indexOf(first) !== -1) {\n        const value = valueTree[first];\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            doRemoveFromValueTree(value, segments);\n            if (Object.keys(value).length === 0) {\n                delete valueTree[first];\n            }\n        }\n    }\n}\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue(config, settingPath, defaultValue) {\n    function accessSetting(config, path) {\n        let current = config;\n        for (const component of path) {\n            if (typeof current !== 'object' || current === null) {\n                return undefined;\n            }\n            current = current[component];\n        }\n        return current;\n    }\n    const path = settingPath.split('.');\n    const result = accessSetting(config, path);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\nexport function getLanguageTagSettingPlainKey(settingKey) {\n    return settingKey.replace(/[\\[\\]]/g, '');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertNever } from '../../../base/common/assert.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Color } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\nimport * as nls from '../../../nls.js';\n/**\n * Returns the css variable name for the given color identifier. Dots (`.`) are replaced with hyphens (`-`) and\n * everything is prefixed with `--vscode-`.\n *\n * @sample `editorSuggestWidget.background` is `--vscode-editorSuggestWidget-background`.\n */\nexport function asCssVariableName(colorIdent) {\n    return `--vscode-${colorIdent.replace(/\\./g, '-')}`;\n}\nexport function asCssVariable(color) {\n    return `var(${asCssVariableName(color)})`;\n}\nexport function asCssVariableWithDefault(color, defaultCssValue) {\n    return `var(${asCssVariableName(color)}, ${defaultCssValue})`;\n}\nexport function isColorDefaults(value) {\n    return value !== null && typeof value === 'object' && 'light' in value && 'dark' in value;\n}\n// color registry\nexport const Extensions = {\n    ColorContribution: 'base.contributions.colors'\n};\nexport const DEFAULT_COLOR_CONFIG_VALUE = 'default';\nclass ColorRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.onDidChangeSchema = this._onDidChangeSchema.event;\n        this.colorSchema = { type: 'object', properties: {} };\n        this.colorReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\n        this.colorsById = {};\n    }\n    registerColor(id, defaults, description, needsTransparency = false, deprecationMessage) {\n        const colorContribution = { id, description, defaults, needsTransparency, deprecationMessage };\n        this.colorsById[id] = colorContribution;\n        const propertySchema = { type: 'string', format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (needsTransparency) {\n            propertySchema.pattern = '^#(?:(?<rgba>[0-9a-fA-f]{3}[0-9a-eA-E])|(?:[0-9a-fA-F]{6}(?:(?![fF]{2})(?:[0-9a-fA-F]{2}))))?$';\n            propertySchema.patternErrorMessage = nls.localize('transparecyRequired', 'This color must be transparent or it will obscure content');\n        }\n        this.colorSchema.properties[id] = {\n            description,\n            oneOf: [\n                propertySchema,\n                { type: 'string', const: DEFAULT_COLOR_CONFIG_VALUE, description: nls.localize('useDefault', 'Use the default color.') }\n            ]\n        };\n        this.colorReferenceSchema.enum.push(id);\n        this.colorReferenceSchema.enumDescriptions.push(description);\n        this._onDidChangeSchema.fire();\n        return id;\n    }\n    getColors() {\n        return Object.keys(this.colorsById).map(id => this.colorsById[id]);\n    }\n    resolveDefaultColor(id, theme) {\n        const colorDesc = this.colorsById[id];\n        if (colorDesc?.defaults) {\n            const colorValue = isColorDefaults(colorDesc.defaults) ? colorDesc.defaults[theme.type] : colorDesc.defaults;\n            return resolveColorValue(colorValue, theme);\n        }\n        return undefined;\n    }\n    getColorSchema() {\n        return this.colorSchema;\n    }\n    toString() {\n        const sorter = (a, b) => {\n            const cat1 = a.indexOf('.') === -1 ? 0 : 1;\n            const cat2 = b.indexOf('.') === -1 ? 0 : 1;\n            if (cat1 !== cat2) {\n                return cat1 - cat2;\n            }\n            return a.localeCompare(b);\n        };\n        return Object.keys(this.colorsById).sort(sorter).map(k => `- \\`${k}\\`: ${this.colorsById[k].description}`).join('\\n');\n    }\n}\nconst colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n    return colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\n}\n// ----- color functions\nexport function executeTransform(transform, theme) {\n    switch (transform.op) {\n        case 0 /* ColorTransformType.Darken */:\n            return resolveColorValue(transform.value, theme)?.darken(transform.factor);\n        case 1 /* ColorTransformType.Lighten */:\n            return resolveColorValue(transform.value, theme)?.lighten(transform.factor);\n        case 2 /* ColorTransformType.Transparent */:\n            return resolveColorValue(transform.value, theme)?.transparent(transform.factor);\n        case 3 /* ColorTransformType.Opaque */: {\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return resolveColorValue(transform.value, theme);\n            }\n            return resolveColorValue(transform.value, theme)?.makeOpaque(backgroundColor);\n        }\n        case 4 /* ColorTransformType.OneOf */:\n            for (const candidate of transform.values) {\n                const color = resolveColorValue(candidate, theme);\n                if (color) {\n                    return color;\n                }\n            }\n            return undefined;\n        case 6 /* ColorTransformType.IfDefinedThenElse */:\n            return resolveColorValue(theme.defines(transform.if) ? transform.then : transform.else, theme);\n        case 5 /* ColorTransformType.LessProminent */: {\n            const from = resolveColorValue(transform.value, theme);\n            if (!from) {\n                return undefined;\n            }\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return from.transparent(transform.factor * transform.transparency);\n            }\n            return from.isDarkerThan(backgroundColor)\n                ? Color.getLighterColor(from, backgroundColor, transform.factor).transparent(transform.transparency)\n                : Color.getDarkerColor(from, backgroundColor, transform.factor).transparent(transform.transparency);\n        }\n        default:\n            throw assertNever(transform);\n    }\n}\nexport function darken(colorValue, factor) {\n    return { op: 0 /* ColorTransformType.Darken */, value: colorValue, factor };\n}\nexport function lighten(colorValue, factor) {\n    return { op: 1 /* ColorTransformType.Lighten */, value: colorValue, factor };\n}\nexport function transparent(colorValue, factor) {\n    return { op: 2 /* ColorTransformType.Transparent */, value: colorValue, factor };\n}\nexport function oneOf(...colorValues) {\n    return { op: 4 /* ColorTransformType.OneOf */, values: colorValues };\n}\nexport function ifDefinedThenElse(ifArg, thenArg, elseArg) {\n    return { op: 6 /* ColorTransformType.IfDefinedThenElse */, if: ifArg, then: thenArg, else: elseArg };\n}\nexport function lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n    return { op: 5 /* ColorTransformType.LessProminent */, value: colorValue, background: backgroundColorValue, factor, transparency };\n}\n// ----- implementation\n/**\n * @param colorValue Resolve a color value in the context of a theme\n */\nexport function resolveColorValue(colorValue, theme) {\n    if (colorValue === null) {\n        return undefined;\n    }\n    else if (typeof colorValue === 'string') {\n        if (colorValue[0] === '#') {\n            return Color.fromHex(colorValue);\n        }\n        return theme.getColor(colorValue);\n    }\n    else if (colorValue instanceof Color) {\n        return colorValue;\n    }\n    else if (typeof colorValue === 'object') {\n        return executeTransform(colorValue, theme);\n    }\n    return undefined;\n}\nexport const workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId), 200);\ncolorRegistry.onDidChangeSchema(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\n","import { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n        case ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST_DARK\"] = \"hcDark\";\n    ColorScheme[\"HIGH_CONTRAST_LIGHT\"] = \"hcLight\";\n})(ColorScheme || (ColorScheme = {}));\nexport function isHighContrast(scheme) {\n    return scheme === ColorScheme.HIGH_CONTRAST_DARK || scheme === ColorScheme.HIGH_CONTRAST_LIGHT;\n}\nexport function isDark(scheme) {\n    return scheme === ColorScheme.DARK || scheme === ColorScheme.HIGH_CONTRAST_DARK;\n}\n"],"names":["exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","TreeViewsDnDService","constructor","this","_dragOperations","Map","removeDragOperationTransfer","uuid","has","operation","get","delete","DraggedTreeItemsIdentifier","identifier","countEOL","text","eolCount","firstLineLength","lastLineStart","eol","len","length","chr","charCodeAt","SparseMultilineTokens","create","startLineNumber","tokens","SparseMultilineTokensStorage","_startLineNumber","endLineNumber","_endLineNumber","_tokens","getMaxDeltaLine","toString","_updateEndLineNumber","isEmpty","getLineTokens","lineNumber","getRange","deltaRange","startColumn","endColumn","removeTokens","range","startLineIndex","endLineIndex","split","a","b","bDeltaLine","applyEdit","lastLineLength","acceptEdit","firstCharCode","_acceptDeleteRange","_acceptInsertText","firstLineIndex","lastLineIndex","deletedLinesCount","tokenMaxDeltaLine","clear","deletedBefore","acceptDeleteRange","position","lineIndex","acceptInsertText","column","_tokenCount","pieces","push","_getDeltaLine","_getStartCharacter","_getEndCharacter","join","tokenCount","_getTokenCount","startChar","maxDeltaLine","endChar","tokenIndex","deltaLine","low","high","mid","midDeltaLine","min","max","SparseLineTokens","subarray","startDeltaLine","endDeltaLine","newTokenCount","hasDeletedTokens","firstDeltaLine","srcOffset","tokenDeltaLine","tokenStartCharacter","tokenEndCharacter","tokenMetadata","destOffset","aTokens","bTokens","destTokens","destFirstDeltaLine","Uint32Array","horizontalShiftForFirstLineTokens","startCharacter","endCharacter","deletedLineCount","Error","character","isInsertingPreciselyOneWordCharacter","tokenLength","getCount","getStartCharacter","getEndCharacter","getMetadata","__decorate","decorators","target","key","desc","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","ENABLE_TRACE","SemanticTokensProviderStyling","_legend","_themeService","_languageService","_logService","_hasWarnedOverlappingTokens","_hasWarnedInvalidLengthTokens","_hasWarnedInvalidEditStart","_hashTable","HashTable","tokenTypeIndex","tokenModifierSet","languageId","encodedLanguageId","languageIdCodec","encodeLanguageId","entry","metadata","tokenType","tokenTypes","tokenModifiers","modifierSet","modifierIndex","tokenStyle","getColorTheme","getTokenStyleMetadata","italic","bold","underline","strikethrough","foreground","add","warnOverlappingSemanticTokens","warn","warnInvalidLengthSemanticTokens","warnInvalidEditStart","previousResultId","resultId","editIndex","editStart","maxExpectedStart","toMultilineTokens2","styling","srcData","data","tokensPerArea","ceil","result","lastLineNumber","lastStartCharacter","tokenStartIndex","tokenEndIndex","smallTokenEndIndex","bigTokenEndIndex","destData","areaLine","prevLineNumber","prevEndCharacter","deltaCharacter","HashTableEntry","next","_SIZES","_elementsCount","_currentLengthIndex","_currentLength","_growCount","round","_elements","_nullOutEntries","entries","_hash2","n1","n2","_hashFunc","hash","p","oldElements","first","oldNext","_add","element","TokenMetadata","getLanguageId","getTokenType","containsBalancedBrackets","getFontStyle","getForeground","getBackground","getClassNameFromMetadata","className","fontStyle","getInlineStyleFromMetadata","colorMap","textDecoration","getPresentationFromMetadata","Boolean","originalFSPath","uri","ExtUri","_ignorePathCasing","compare","uri1","uri2","ignoreFragment","getComparisonKey","isEqual","with","path","toLowerCase","undefined","fragment","isEqualOrParent","base","parentCandidate","scheme","file","query","isEqualAuthority","authority","joinPath","resource","pathFragment","basenameOrAuthority","basename","extname","dirname","console","error","normalizePath","normalizedPath","normalize","relativePath","from","to","fromPath","toPath","charAt","substr","relative","resolvePath","newURI","resolve","isAbsolutePath","a1","a2","hasTrailingPathSeparator","sep","fsp","test","fsPath","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","extUri","_","bind","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","substring","indexOf","lastIndexOf","forEach","property","set","mime","Extensions","Configuration","allSettings","properties","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","as","JSONContribution","OVERRIDE_IDENTIFIER_PATTERN","OVERRIDE_IDENTIFIER_REGEX","RegExp","OVERRIDE_PROPERTY_PATTERN","OVERRIDE_PROPERTY_REGEX","overrideIdentifiersFromKey","identifiers","matches","exec","trim","configurationRegistry","registeredConfigurationDefaults","overrideIdentifiers","Set","_onDidSchemaChange","_onDidUpdateConfiguration","configurationDefaultsOverrides","defaultLanguageConfigurationOverridesNode","id","title","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","allowTrailingCommas","allowComments","configurationProperties","policyConfigurations","excludedConfigurationProperties","registerSchema","registerOverridePropertyPatternKey","registerConfiguration","configuration","validate","registerConfigurations","configurations","doRegisterConfigurations","fire","registerDefaultConfigurations","configurationDefaults","doRegisterDefaultConfigurations","defaultsOverrides","bucket","overrides","source","configurationDefaultOverridesForKey","configurationDefaultOverrides","newDefaultOverride","mergeDefaultConfigurationsForOverrideIdentifier","configurationDefaultOverrideValue","updateDefaultOverrideProperty","mergeDefaultConfigurationsForConfigurationProperty","updatePropertyDefaultValue","updateSchema","doRegisterOverrideIdentifiers","type","default","description","$ref","defaultDefaultValue","defaultValueSource","overrideIdentifier","configurationValueObject","valueSource","existingDefaultOverride","defaultValue","propertyKey","keys","propertyDefaultValue","objectKey","valuesSource","existingDefaultValue","registerOverrideIdentifiers","updateOverridePropertyPatternKey","validateAndRegisterProperties","extensionInfo","restrictedProperties","registerJSONConfiguration","scope","validateProperty","restricted","includes","hasOwnProperty","included","policy","name","deprecationMessage","markdownDeprecationMessage","subNodes","allOf","node","getConfigurationProperties","getPolicyConfigurations","register","values","overrideIdentifierProperty","resourceLanguagePropertiesSchema","errorMessage","configurationdefaultOverride","defaultSource","disallowConfigurationDefault","Array","isArray","getDefaultValue","schema","hintDidYouMean","meant","hintDidYouForgetToOpenOrCloseQuote","hintDidYouForgetToEscapeSlash","Scanner","_input","_start","_current","_errors","stringRe","getLexeme","token","isTripleEq","lexeme","JSON","stringify","_regexFlags","map","ch","_keywords","reset","scan","_isAtEnd","_advance","_addToken","_match","_quotedString","_regex","_error","_string","expected","_peek","additional","errToken","additionalInfo","lastIndex","match","keyword","inEscape","inCharacterClass","CONSTANT_VALUES","prototype","defaultConfig","regexParsingWithErrorRecovery","errorEmptyString","hintEmptyString","errorNoInAfterNot","errorClosingParenthesis","errorUnexpectedToken","hintUnexpectedToken","errorUnexpectedEOF","hintUnexpectedEOF","Parser","_parseError","_config","_scanner","_parsingErrors","_flagsGYRe","parse","input","expr","_expr","peek","message","_or","_and","_matchOne","right","ContextKeyExpr","or","_term","and","ContextKeyFalseExpr","INSTANCE","ContextKeyTrueExpr","_consume","negate","ContextKeyNotExpr","_errExpectedButGot","_primary","true","false","regexLexeme","closingSlashIndex","flags","_removeFlagsGY","regexp","ContextKeyRegexExpr","lexemeReconstruction","followingToken","parenBalance","regex","serializedValue","start","end","slice","caseIgnoreFlag","_e","_value","notIn","_previous","equals","not","notEquals","ContextKeySmallerExpr","ContextKeySmallerEqualsExpr","ContextKeyGreaterExpr","ContextKeyGreaterEqualsExpr","in","replaceAll","_check","got","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyNotEqualsExpr","ContextKeyInExpr","ContextKeyNotInExpr","ContextKeyAndExpr","ContextKeyOrExpr","_parser","deserialize","serialized","expressionsAreEqualWithConstantSubstitution","aExpr","substituteConstants","bExpr","cmp","other","evaluate","context","serialize","negated","constantValue","cmp1","getValue","cmp2","trueValue","valueKey","item","call","_negated","falseValue","withFloatOrStr","callback","n","parseFloat","thisSource","otherSource","ContextKeyNotRegexExpr","actual","_actual","eliminateConstantsInArray","arr","newArr","newExpr","j","extraRedundantCheck","_normalizeArr","exprArr","hasTrue","sort","splice","lastElement","pop","secondToLastElement","isFinished","resultElement","el","hasFalse","concat","LEFT","shift","RIGHT","all","left","getTerminals","unshift","RawContextKey","_info","metaOrHide","super","_defaultValue","bindTo","createKey","getContextKeyValue","toNegated","isEqualTo","IContextKeyService","key1","key2","value1","value2","implies","q","allElementsIncluded","pIndex","qIndex","ITreeSitterParserService","ITextResourceConfigurationService","ITextResourcePropertiesService","hasBuffer","Buffer","Uint8Array","textDecoder","VSBuffer","wrap","isBuffer","byteOffset","byteLength","TextDecoder","decode","readUInt16LE","writeUInt16LE","destination","readUInt32BE","writeUInt32BE","readUInt8","writeUInt8","ILogService","LogLevel","DEFAULT_LOG_LEVEL","Info","AbstractLogger","level","_onDidChangeLogLevel","_register","onDidChangeLogLevel","event","setLevel","getLevel","checkLogLevel","Off","ConsoleLogger","logLevel","useColors","trace","args","Trace","debug","Debug","info","Warning","MultiplexLogger","loggers","logger","dispose","LogLevelToString","base64","ieee754","customInspectSymbol","Symbol","K_MAX_LENGTH","createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","TypeError","allocUnsafe","string","encoding","isEncoding","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","obj","checked","numberIsNaN","fromObject","toPrimitive","assertSize","size","array","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","indexSize","arrLength","valLength","String","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","enumerable","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","x","y","list","pos","swap16","swap32","swap64","toLocaleString","inspect","replace","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUint16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUint16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","errors","E","sym","getMessage","Base","writable","configurable","stack","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","editorLineHighlight","editorLineHighlightBorder","dark","light","hcDark","hcLight","editorCursorForeground","black","white","editorCursorBackground","editorMultiCursorPrimaryForeground","editorMultiCursorPrimaryBackground","editorMultiCursorSecondaryForeground","editorMultiCursorSecondaryBackground","editorWhitespaces","editorLineNumbers","deprecatedEditorIndentGuides","deprecatedEditorActiveIndentGuides","editorIndentGuide1","editorIndentGuide2","editorIndentGuide3","editorIndentGuide4","editorIndentGuide5","editorIndentGuide6","editorActiveIndentGuide1","editorActiveIndentGuide2","editorActiveIndentGuide3","editorActiveIndentGuide4","editorActiveIndentGuide5","editorActiveIndentGuide6","deprecatedEditorActiveLineNumber","editorDimmedLineNumber","editorOverviewRulerBorder","lightgrey","editorOverviewRulerBackground","editorUnnecessaryCodeOpacity","fromHex","transparent","ghostTextForeground","rulerRangeDefault","overviewRulerRangeHighlight","overviewRulerError","overviewRulerWarning","overviewRulerInfo","editorBracketHighlightingForeground1","editorBracketHighlightingForeground2","editorBracketHighlightingForeground3","editorBracketHighlightingForeground4","editorBracketHighlightingForeground5","editorBracketHighlightingForeground6","editorBracketHighlightingUnexpectedBracketForeground","editorBracketPairGuideBackground1","editorBracketPairGuideBackground2","editorBracketPairGuideBackground3","editorBracketPairGuideBackground4","editorBracketPairGuideBackground5","editorBracketPairGuideBackground6","editorBracketPairGuideActiveBackground1","editorBracketPairGuideActiveBackground2","editorBracketPairGuideActiveBackground3","editorBracketPairGuideActiveBackground4","editorBracketPairGuideActiveBackground5","editorBracketPairGuideActiveBackground6","theme","collector","background","getColor","lineHighlight","imeBackground","isTransparent","addRule","jsonContributionRegistry","_onDidChangeSchema","schemasById","unresolvedSchemaContent","notifySchemaChanged","ILanguageFeaturesService","Mimes","freeze","binary","unknown","markdown","latex","uriList","ModesRegistry","_onDidChangeLanguages","onDidChangeLanguages","_languages","registerLanguage","def","getLanguages","PLAINTEXT_LANGUAGE_ID","extensions","aliases","mimetypes","registeredAssociations","nonUserRegisteredAssociations","userRegisteredAssociations","registerPlatformLanguageAssociation","association","warnOnOverwrite","userConfigured","associationItem","filename","extension","filepattern","firstline","filenameLowercase","extensionLowercase","filepatternLowercase","filepatternOnPath","toLanguageAssociationItem","_registerLanguageAssociation","clearPlatformLanguageAssociations","filter","getLanguageIds","firstLine","vscodeNotebookCell","configuredLanguage","getAssociationByPath","registeredLanguage","firstlineLanguage","getAssociationByFirstline","getAssociations","associations","filenameMatch","patternMatch","extensionMatch","endsWith","IModelService","NULL_LANGUAGE_ID","LanguageIdCodec","_languageIdToLanguage","_languageToLanguageId","_nextLanguageId","language","decodeLanguageId","LanguagesRegistry","instanceCount","useModesRegistry","_onDidChange","onDidChange","_warnOnOverwrite","_dynamicLanguages","_mimeTypesMap","_nameMap","_lowercaseNameMap","_initializeFromRegistry","_registerLanguages","_registerLanguage","langId","alias","mimetype","getRegisteredLanguageIds","lang","resolvedLanguage","filenames","configurationFiles","icons","_mergeLanguage","primaryMime","filenamePatterns","filenamePattern","firstLineRegexStr","firstLineRegex","err","langAliases","langAlias","containsAliases","bestName","icon","isRegisteredLanguageId","getLanguageIdByLanguageName","languageName","languageNameLower","getLanguageIdByMimeType","mimeType","guessLanguageIdByFilepathOrFirstLine","Registry","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","num","output","nls","iconForeground","focusBorder","contrastBorder","activeContrastBorder","textLinkForeground","badgeBackground","badgeForeground","scrollbarShadow","scrollbarSliderBackground","scrollbarSliderHoverBackground","scrollbarSliderActiveBackground","progressBarBackground","editorBackground","editorForeground","editorWidgetBackground","editorWidgetForeground","editorWidgetBorder","editorErrorForeground","editorErrorBorder","editorWarningBackground","editorWarningForeground","editorWarningBorder","editorInfoForeground","editorInfoBorder","editorHintForeground","editorActiveLinkForeground","blue","cyan","editorSelectionBackground","editorSelectionForeground","editorInactiveSelection","editorSelectionHighlight","editorFindMatchForeground","editorFindMatchHighlight","editorFindMatchHighlightForeground","editorFindMatchHighlightBorder","editorFindRangeHighlightBorder","editorHoverBackground","editorHoverBorder","editorInlayHintForeground","editorInlayHintBackground","editorInlayHintTypeForeground","editorInlayHintTypeBackground","editorInlayHintParameterForeground","editorInlayHintParameterBackground","editorLightBulbForeground","defaultInsertColor","defaultRemoveColor","diffInserted","diffRemoved","diffOverviewRulerInserted","diffOverviewRulerRemoved","widgetShadow","widgetBorder","toolbarHoverBackground","breadcrumbsForeground","breadcrumbsBackground","breadcrumbsFocusForeground","breadcrumbsActiveSelectionForeground","currentBaseColor","incomingBaseColor","commonBaseColor","mergeCurrentHeaderBackground","mergeIncomingHeaderBackground","mergeCommonHeaderBackground","mergeBorder","overviewRulerFindMatchForeground","overviewRulerSelectionHighlightForeground","problemsErrorIconForeground","problemsWarningIconForeground","problemsInfoIconForeground","minimapFindMatch","minimapSelectionOccurrenceHighlight","minimapSelection","minimapInfo","minimapWarning","minimapError","minimapBackground","minimapForegroundOpacity","inputBackground","inputForeground","inputBorder","inputActiveOptionBorder","inputActiveOptionHoverBackground","inputActiveOptionBackground","inputActiveOptionForeground","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationInfoBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationWarningBorder","inputValidationErrorBackground","inputValidationErrorForeground","inputValidationErrorBorder","selectBackground","selectListBackground","selectForeground","selectBorder","buttonForeground","buttonSeparator","buttonBackground","buttonHoverBackground","buttonBorder","buttonSecondaryForeground","buttonSecondaryBackground","buttonSecondaryHoverBackground","radioActiveForeground","radioActiveBackground","radioActiveBorder","radioInactiveForeground","radioInactiveBackground","radioInactiveBorder","radioInactiveHoverBackground","checkboxBackground","checkboxForeground","checkboxBorder","keybindingLabelBackground","keybindingLabelForeground","keybindingLabelBorder","keybindingLabelBottomBorder","listFocusBackground","listFocusForeground","listFocusOutline","listFocusAndSelectionOutline","listActiveSelectionBackground","listActiveSelectionForeground","listActiveSelectionIconForeground","listInactiveSelectionBackground","listInactiveSelectionForeground","listInactiveSelectionIconForeground","listInactiveFocusBackground","listInactiveFocusOutline","listHoverBackground","listHoverForeground","listDropOverBackground","listDropBetweenBackground","listHighlightForeground","listFocusHighlightForeground","listFilterWidgetBackground","listFilterWidgetOutline","listFilterWidgetNoMatchesOutline","listFilterWidgetShadow","treeIndentGuidesStroke","treeInactiveIndentGuidesStroke","tableColumnsBorder","tableOddRowsBackgroundColor","menuBorder","menuForeground","menuBackground","menuSelectionForeground","menuSelectionBackground","menuSelectionBorder","menuSeparatorBackground","quickInputBackground","quickInputForeground","quickInputTitleBackground","pickerGroupForeground","pickerGroupBorder","_deprecatedQuickInputListFocusBackground","quickInputListFocusForeground","quickInputListFocusIconForeground","quickInputListFocusBackground","ILanguageService","isPathSeparator","toSlashes","osPath","toPosixPath","getRoot","firstLetter","isWindowsDriveLetter","ignoreCase","separator","sepOffset","char0","hasDriveLetter","isWindowsOS","_util","serviceIds","DI_TARGET","DI_DEPENDENCIES","getServiceDependencies","ctor","IInstantiationService","createDecorator","serviceId","index","storeServiceDependency","ISemanticTokensStylingService","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","isLastPattern","splitGlobAware","pattern","splitChar","segments","inBraces","inBrackets","curVal","char","parseRegExp","regEx","every","segment","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","choice","T1","T2","T3","T3_2","T4","T5","CACHE","FALSE","NULL","parsePattern","arg1","options","patternKey","trimForExclusions","parsedPattern","trivia1","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","patternsLength","withBasenames","find","allPaths","reduce","current","trivia3","trivia4and5","regExp","toRegExp","wrapRelativePattern","arg2","wrappedPattern","targetPath","matchPathEnds","usingPosixSep","nativePath","nativePathEnd","targetPathEnd","hasSibling","rp","isRelativePattern","resultPattern","expression","getOwnPropertyNames","when","matched","then","requiresSiblings","parseExpressionPattern","some","resultExpression","resultPromises","resultPromise","parsedExpression","basenamePatterns","aggregate","aggregatedPatterns","IConfigurationService","toValuesTree","conflictReporter","root","addToValueTree","settingsTreeRoot","curr","removeFromValueTree","valueTree","doRemoveFromValueTree","getConfigurationValue","config","settingPath","component","accessSetting","getLanguageTagSettingPlainKey","settingKey","asCssVariableName","colorIdent","asCssVariable","color","asCssVariableWithDefault","defaultCssValue","ColorContribution","colorRegistry","onDidChangeSchema","colorSchema","colorReferenceSchema","enum","enumDescriptions","colorsById","registerColor","defaults","needsTransparency","colorContribution","propertySchema","format","defaultSnippets","body","patternErrorMessage","oneOf","const","getColors","resolveDefaultColor","colorDesc","resolveColorValue","getColorSchema","cat1","cat2","localeCompare","k","darken","colorValue","factor","op","lighten","colorValues","ifDefinedThenElse","ifArg","thenArg","elseArg","if","else","lessProminent","backgroundColorValue","transparency","transform","backgroundColor","makeOpaque","candidate","defines","isDarkerThan","getLighterColor","getDarkerColor","executeTransform","workbenchColorsSchemaId","schemaRegistry","delayer","isScheduled","schedule","IThemeService","themeColorFromId","getThemeTypeSelector","DARK","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","ThemingContribution","themingRegistry","themingParticipants","onThemingParticipantAddedEmitter","onColorThemeChange","participant","idx","getThemingParticipants","registerThemingParticipant","Themable","themeService","onDidColorThemeChange","onThemeChange","updateStyles","ColorScheme","isHighContrast","isDark"],"sourceRoot":""}