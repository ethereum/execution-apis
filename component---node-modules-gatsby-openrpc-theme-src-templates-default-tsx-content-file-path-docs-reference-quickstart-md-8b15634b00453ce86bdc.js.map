{"version":3,"file":"component---node-modules-gatsby-openrpc-theme-src-templates-default-tsx-content-file-path-docs-reference-quickstart-md-8b15634b00453ce86bdc.js","mappings":"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","sources":["webpack://execution-apis/../../../docs/reference/quickstart.md","webpack://execution-apis/./node_modules/gatsby-openrpc-theme/src/templates/default.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    h4: \"h4\",\n    pre: \"pre\",\n    code: \"code\",\n    br: \"br\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"execution-api-specification\"\n  }, \"Execution API Specification\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"json-rpc\"\n  }, \"JSON-RPC\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://ethereum.github.io/execution-apis/api-documentation/\"\n  }, \"View the spec\")), \"\\n\", React.createElement(_components.p, null, \"The Ethereum JSON-RPC is a standard collection of methods that all execution\\nclients implement. It is the canonical interface between users and the network.\\nThis interface allows downstream tooling and infrastructure to treat different\\nEthereum clients as modules that can be swapped at will.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"contributing\"\n  }, \"Contributing\"), \"\\n\", React.createElement(_components.p, null, \"Please see the \", React.createElement(_components.a, {\n    href: \"docs/reference/contributors-guide.md\"\n  }, \"contributors guide\"), \"\\nfor general information about the process of standardizing new API methods and\\nmaking changes to existing ones. Information on test generation can be found\\nin \", React.createElement(_components.a, {\n    href: \"docs/reference/tests.md\"\n  }, \"test-gen\")), \"\\n\", React.createElement(_components.p, null, \"The specification itself is written in \", React.createElement(_components.a, {\n    href: \"https://open-rpc.org\"\n  }, \"OpenRPC\"), \". Refer to the OpenRPC\\nspecification and the JSON schema \", React.createElement(_components.a, {\n    href: \"https://json-schema.org\"\n  }, \"specification\"), \" to get started.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"updating-the-specs\"\n  }, \"Updating the specs\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"compiling\"\n  }, \"Compiling\"), \"\\n\", React.createElement(_components.p, null, \"The specification is split into multiple files to improve readability. The\\nspec can be compiled into a single document as follows:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-console\"\n  }, \"$ npm install\\n$ npm run build\\nBuild successful.\\n\")), \"\\n\", React.createElement(_components.p, null, \"This will output the file \", React.createElement(_components.code, null, \"openrpc.json\"), \" in the root of the project. This file\\nwill have all schema \", React.createElement(_components.code, null, \"#ref\"), \"s resolved.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"building-the-docs\"\n  }, \"Building the docs\"), \"\\n\", React.createElement(_components.p, null, \"Once you've updated something in the spec, you can use the docs generation tools\\nto view the updated specs locally.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-console\"\n  }, \"$ npm run build:docs\\n$ npm run watch\\n\")), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.code, null, \"watch\"), \" command starts a local webserver serving the docs in-browser at\\n\", React.createElement(_components.code, null, \"http://0.0.0.0:8000\"), \" and it rebuilds when you update something in the specs.\", React.createElement(_components.br), \"\\n\", \"Please reload the page to see your changes.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"testing\"\n  }, \"Testing\"), \"\\n\", React.createElement(_components.p, null, \"There are several mechanisms for testing specification contributions and client\\nconformance.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"linting\"\n  }, \"Linting\"), \"\\n\", React.createElement(_components.p, null, \"First is the \", React.createElement(_components.a, {\n    href: \"https://open-rpc.github.io/schema-utils-js/functions/validateOpenRPCDocument.html\"\n  }, \"OpenRPC validator\"), \". It performs some basic syntactic\\nchecks on the generated specification.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-console\"\n  }, \"$ npm install\\n$ npm run lint\\nOpenRPC spec validated successfully.\\n\")), \"\\n\", React.createElement(_components.h4, {\n    id: \"spec-tests\"\n  }, \"Spec tests\"), \"\\n\", React.createElement(_components.p, null, \"Next is \", React.createElement(_components.code, null, \"speccheck\"), \". This tool validates the test cases in the \", React.createElement(_components.code, null, \"tests\"), \"\\ndirectory against the specification.  There are two npm scripts to simplify this.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-console\"\n  }, \"$ npm run build:test\\n$ npm run test \\nall passing.\\n\")), \"\\n\", React.createElement(_components.p, null, \"or\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-console\"\n  }, \"$ go install github.com/lightclient/rpctestgen/cmd/speccheck@latest\\n$ speccheck -v\\n\")), \"\\n\", React.createElement(_components.p, null, \"If you get an error that says: \", React.createElement(_components.code, null, \"speccheck: command not found\"), \",\\nmake sure that the go binary is in your $PATH:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-console\"\n  }, \"$ export PATH=$HOME/go/bin:$PATH\\n\")), \"\\n\", React.createElement(_components.h4, {\n    id: \"spelling\"\n  }, \"Spelling\"), \"\\n\", React.createElement(_components.p, null, \"The spell checker ensures the specification is free of spelling errors.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-console\"\n  }, \"$ pip install pyspelling\\n$ pyspelling -c spellcheck.yaml\\nSpelling check passed :)\\n\")), \"\\n\", React.createElement(_components.p, null, \"pyspelling is a wrapper around either \", React.createElement(_components.a, {\n    href: \"http://aspell.net/\"\n  }, \"Aspell\"), \" or\\n\", React.createElement(_components.a, {\n    href: \"https://hunspell.github.io/\"\n  }, \"Hunspell\"), \". You'll need to install\\none of those before running \", React.createElement(_components.code, null, \"pyspelling\"), \".\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"hive-tests\"\n  }, \"Hive tests\"), \"\\n\", React.createElement(_components.p, null, \"Finally, the test cases in the \", React.createElement(_components.code, null, \"tests/\"), \" directory may be run against individual\\nexecution client using the \", React.createElement(_components.a, {\n    href: \"https://github.com/ethereum/hive\"\n  }, React.createElement(_components.code, null, \"hive\")), \" simulator \", React.createElement(_components.a, {\n    href: \"https://github.com/ethereum/hive/tree/master/simulators/ethereum/rpc-compat\"\n  }, React.createElement(_components.code, null, \"rpc-compat\")), \".\\nPlease see the documentation in the aforementioned repositories for more\\ninformation.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"graphql\"\n  }, \"GraphQL\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"http://graphql-schema.ethdevops.io/?url=https://raw.githubusercontent.com/ethereum/execution-apis/main/graphql.json\"\n  }, \"View the spec\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://eips.ethereum.org/EIPS/eip-1767\"\n  }, \"EIP-1767\"), \" proposed a GraphQL schema for interacting with Ethereum clients. Since then Besu and Geth have implemented the interface. This repo contains a live specification to integrate changes to the protocol as well as other improvements into the GraphQL schema.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"generation\"\n  }, \"Generation\"), \"\\n\", React.createElement(_components.p, null, \"The schema in this repo is generated by issuing a meta GraphQL query against a live node. This can be done as follows:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-console\"\n  }, \"$ npm run graphql:schema\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"testing-1\"\n  }, \"Testing\"), \"\\n\", React.createElement(_components.p, null, \"A script is included in the source code which reads and validates the given schema to be a valid one. It is recommended to perform this check after modifying the schema by:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-console\"\n  }, \"$ npm run graphql:validate\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"license\"\n  }, \"License\"), \"\\n\", React.createElement(_components.p, null, \"This repository is licensed under \", React.createElement(_components.a, {\n    href: \"LICENSE\"\n  }, \"CC0\"), \".\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/execution-apis/execution-apis/docs/reference/quickstart.md\";\nimport React from 'react';\nimport {Link} from 'gatsby';\nimport {MDXProvider} from '@mdx-js/react';\nimport {Typography, Box, Paper} from '@mui/material';\nimport NextAndPrev from '../components/NextAndPrev';\nconst components = {\n  h1: props => React.createElement(Typography, Object.assign({\n    variant: \"h1\"\n  }, props)),\n  h2: props => React.createElement(Typography, Object.assign({\n    variant: \"h2\"\n  }, props)),\n  h3: props => React.createElement(Typography, Object.assign({\n    variant: \"h3\"\n  }, props)),\n  h4: props => React.createElement(Typography, Object.assign({\n    variant: \"h4\"\n  }, props)),\n  h5: props => React.createElement(Typography, Object.assign({\n    variant: \"h5\"\n  }, props)),\n  h6: props => React.createElement(Typography, Object.assign({\n    variant: \"h6\"\n  }, props)),\n  p: props => React.createElement(Typography, Object.assign({\n    paragraph: true\n  }, props)),\n  a: props => React.createElement(Link, props),\n  pre: props => React.createElement(Box, Object.assign({\n    component: \"pre\",\n    sx: {\n      overflowX: 'auto',\n      p: 2,\n      bgcolor: 'background.paper',\n      borderRadius: 1,\n      mb: 2\n    }\n  }, props)),\n  code: props => React.createElement(Box, Object.assign({\n    component: \"code\",\n    sx: {\n      fontFamily: 'monospace',\n      p: 0.5,\n      borderRadius: 0.5\n    }\n  }, props))\n};\nconst DefaultTemplate = _ref => {\n  let {children, pageContext} = _ref;\n  return React.createElement(React.Fragment, null, React.createElement(Paper, {\n    elevation: 0,\n    sx: {\n      p: 3,\n      mb: 4\n    }\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, children), React.createElement(NextAndPrev, {\n    next: pageContext.next,\n    prev: pageContext.prev\n  })));\n};\nconst pageQuery = \"3570207561\";\nDefaultTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DefaultTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","h2","p","a","h3","h4","pre","code","br","_provideComponents","components","React","id","href","className","wrapper","MDXLayout","Typography","variant","h5","h6","paragraph","Link","Box","component","sx","overflowX","bgcolor","borderRadius","mb","fontFamily","DefaultTemplate","_ref","children","pageContext","Paper","elevation","MDXProvider","NextAndPrev","next","prev","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}