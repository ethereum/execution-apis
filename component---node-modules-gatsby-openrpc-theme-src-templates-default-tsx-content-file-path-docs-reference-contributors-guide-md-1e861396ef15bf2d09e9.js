"use strict";(self.webpackChunkexecution_apis=self.webpackChunkexecution_apis||[]).push([[6748],{58875:function(e,t,n){n.r(t),n.d(t,{default:function(){return g}});var a=n(55569),o=n(96540);function i(e){const t=Object.assign({h1:"h1",p:"p",h2:"h2",h3:"h3",code:"code",a:"a",ul:"ul",li:"li"},(0,a.R)(),e.components);return o.createElement(o.Fragment,null,o.createElement(t.h1,{id:"contributors-guide"},"Contributors Guide"),"\n",o.createElement(t.p,null,"This guide will explain for new and experienced contributors alike how to\npropose changes to Ethereum JSON-RPC API."),"\n",o.createElement(t.h2,{id:"introduction"},"Introduction"),"\n",o.createElement(t.p,null,"The Ethereum JSON-RPC API is the canonical interface between users and the\nEthereum network. Each execution layer client implements the API as defined by\nthe spec."),"\n",o.createElement(t.p,null,"As the main source of chain information, anything that is not provided over via\nAPI will not be easily accessible to users."),"\n",o.createElement(t.h2,{id:"guiding-principles"},"Guiding Principles"),"\n",o.createElement(t.p,null,"When considering a change to the API, it's important to keep a few guiding\nprinciples in mind."),"\n",o.createElement(t.h3,{id:"necessity"},"Necessity"),"\n",o.createElement(t.p,null,"The most common path to a newly standardized method is necessity. As the\nprotocol changes over time, new types of data become available. EIP-2930\nnecessitated the introduction of ",o.createElement(t.code,null,"eth_accessList")," and EIP-1559 necessitated\n",o.createElement(t.code,null,"eth_feeHistory"),"."),"\n",o.createElement(t.p,null,"Therefore, a good question to ask before making a new API proposal is whether\nor not the method is strictly necessary. Sometimes the answer is yes even\nwithout a protocol change. For example, ",o.createElement(t.code,null,"eth_getProof")," has been possible since\nthe initial version of Ethereum -- yet, it was only standardized in recent years\nas demand for the functionality grew. Before ",o.createElement(t.code,null,"eth_getProof"),", there was no\ninterface for getting intermediary trie nodes over the API. This is a great\nexample of a method that became more necessary over time."),"\n",o.createElement(t.p,null,"Sometimes efficiency is the basis of necessity. If certain patterns of requests\nbecomes popular, it can be advantageous to enshrine the behavior into the API."),"\n",o.createElement(t.h3,{id:"implementation-complexity"},"Implementation Complexity"),"\n",o.createElement(t.p,null,"How a method is implemented should be carefully considered before proposing a\nchange to the API. Although each client is able to validate the Ethereum chain,\nthere can be a huge variance in actual design decisions."),"\n",o.createElement(t.p,null,"As an example, a proposal for a method such as ",o.createElement(t.code,null,"eth_totalSupply")," seems\nreasonable. This is a quantity that users are often interested in and it would\nbe nice to have it available. However, tracking the total supply is tricky. There\nare several avenues where ether can enter and leave supply. This method would\nneed to either i) compute the value on demand or ii) store value for each block\nheight."),"\n",o.createElement(t.p,null,"Option i) is out, because it would involve executing each block starting with\ngenesis. Option ii) is viable, but it starts enforcing certain requirements on\nclients beyond being able to simply validate the chain. Now during block\ningestion, each client needs to store in their database the supply for that\nheight. The chain reorg logic also needs to consider this new data. It is not\ntrivial."),"\n",o.createElement(t.h3,{id:"backwards-compatibility"},"Backwards Compatibility"),"\n",o.createElement(t.p,null,"There is currently no accepted path to making backwards incompatible changes to\nthe API. This means that proposals which change syntax or semantics of existing\nmethods are unlikely to be accepted. A more viable approach is to propose a new\nmethod be created."),"\n",o.createElement(t.h2,{id:"standardization"},"Standardization"),"\n",o.createElement(t.p,null,"There is no formal process for standardization of API changes. However, the\noutline below should give proposal authors and champions a rough process to\nfollow."),"\n",o.createElement(t.h3,{id:"idea"},"Idea"),"\n",o.createElement(t.p,null,"An often overlooked aspect of the standardization journey is the idea phase.\nThis is an important period of time, because some focused effort at this point\nin time can save time and make the rest of the process much smoother."),"\n",o.createElement(t.p,null,"During the idea phase, it is recommended to contemplate the proposal idea in\nthe context of the guiding principles above. It's also good to get feedback on\nthe idea in the open. Just one or two rough acknowledgements from client\ndevelopers that an idea makes sense and is worth pursuing can avoid wasting a\nlot of time formalizing a proposal that has little chance of being accepted."),"\n",o.createElement(t.h3,{id:"proposal"},"Proposal"),"\n",o.createElement(t.p,null,"The formal proposal stage is where the bulk of time will be spent. A formal\nproposal is a PR to this repository (",o.createElement(t.a,{href:"https://github.com/ethereum/execution-apis"},"ethereum/execution-apis"),"). A\ngood proposal will have the following:"),"\n",o.createElement(t.ul,null,"\n",o.createElement(t.li,null,"a modification to the specification implementing the proposal"),"\n",o.createElement(t.li,null,"test cases for proposal (",o.createElement(t.a,{href:"https://github.com/ethereum/execution-apis/blob/main/tests/README.md"},"guide"),")"),"\n",o.createElement(t.li,null,"motivation for the change"),"\n",o.createElement(t.li,null,"links to acknowledgements that proposal idea is sound"),"\n",o.createElement(t.li,null,"clear rationale for non-obvious design decisions"),"\n"),"\n",o.createElement(t.h3,{id:"acquiring-support"},"Acquiring Support"),"\n",o.createElement(t.p,null,"Once a formal proposal has been created, formal support of clients can be\nacquired. This has historically been done via the AllCoreDevs call. It is\nrecommended to post a request on the AllCoreDevs agenda (usually in\n",o.createElement(t.a,{href:"https://github.com/ethereum/pm"},"ethereum/pm"),") to discuss the proposal, at which point formal support can\nbe ascertained."),"\n",o.createElement(t.p,null,"Oftentimes, support will be conditional on certain changes. This means that\nproposals will cycle between formal proposal work and earning support from\nclients. This should be expected and not discourage authors."),"\n",o.createElement(t.h3,{id:"accepting-the-change"},"Accepting the Change"),"\n",o.createElement(t.p,null,"After client teams acknowledge and accept the change, it is usually on them to\nimplement the method in their client. Due to the lack of versioning of the API,\nit is preferable that clients release the method roughly at the same time so\nthat there is not much time when some clients support certain methods and\nothers don't."))}var r=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.R)(),e.components);return t?o.createElement(t,e,o.createElement(i,e)):i(e)},s=n(24794),l=n(28453),c=n(33551),h=n(87164),m=n(64155),p=n(91890);const d={h1:e=>o.createElement(c.A,Object.assign({variant:"h1"},e)),h2:e=>o.createElement(c.A,Object.assign({variant:"h2"},e)),h3:e=>o.createElement(c.A,Object.assign({variant:"h3"},e)),h4:e=>o.createElement(c.A,Object.assign({variant:"h4"},e)),h5:e=>o.createElement(c.A,Object.assign({variant:"h5"},e)),h6:e=>o.createElement(c.A,Object.assign({variant:"h6"},e)),p:e=>o.createElement(c.A,Object.assign({paragraph:!0},e)),a:e=>o.createElement(s.Link,e),pre:e=>o.createElement(h.A,Object.assign({component:"pre",sx:{overflowX:"auto",p:2,bgcolor:"background.paper",borderRadius:1,mb:2}},e)),code:e=>o.createElement(h.A,Object.assign({component:"code",sx:{fontFamily:"monospace",p:.5,borderRadius:.5}},e))},u=e=>{let{children:t,pageContext:n}=e;return o.createElement(o.Fragment,null,o.createElement(m.A,{elevation:0,sx:{p:3,mb:4}},o.createElement(l.xA,{components:d},t),o.createElement(p.A,{next:n.next,prev:n.prev})))};function g(e){return o.createElement(u,e,o.createElement(r,e))}}}]);
//# sourceMappingURL=component---node-modules-gatsby-openrpc-theme-src-templates-default-tsx-content-file-path-docs-reference-contributors-guide-md-1e861396ef15bf2d09e9.js.map